.container {
	background: var(--vscode-editor-background);
	color: var(--vscode-editor-foreground);
	font-family: var(--vscode-editor-font-family);
	font-size: var(--vscode-editor-font-size);
	font-weight: var(--vscode-editor-font-weight);
	white-space: pre;
}

.right {
	text-align: right;
}

.tooltip {
	z-index: 100;
	position: absolute;
	box-sizing: border-box;
	box-shadow: 0 .25em .5em 0 black;
	padding: 5px;
	background: var(--vscode-editorWidget-background);
	border: 1px solid var(--vscode-editorWidget-border);
	pointer-events: none;
}

.biton {
	font-size: 80%;
	display: inline-block;
	margin-right: 2px;
	background-color: var(--vscode-editor-selectionBackground);
	border: 1px solid var(--vscode-editorHoverWidget-border);
}

.bitoff {
	font-size: 80%;
	display: inline-block;
	margin-right: 2px;
	border: 1px solid var(--vscode-editorHoverWidget-border);
	opacity: 0.6;
}

.gfxresource_menu {
	width: initial !important;
	box-shadow: 0 .25em .5em 0 black;
}

.gfxresource {
	width: 450px;
	display: grid;
	grid-template-columns: auto 100px 70px 80px;
	/* name, information, size, address */
	column-gap: 0.3em;
}

.gfxresource_brief {
	width: 175px;
	display: grid;
	grid-template-columns: auto 0 0 0;
}

.gfxresource dd,
.gfxresource_brief dd,
.gfxresource dt,
.gfxresource_brief dt {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

.gfxresource dd,
.gfxresource_brief dd {
	opacity: 0.8;
}

.palette {
	display: inline-grid;
	grid-template-columns: 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px;
	gap: 1px;
	vertical-align: super;
}

.palette>div {
	width: 5px;
	height: 6px;
}

.palette_aga {
	display: inline-grid;
	grid-template-columns: 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px    5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px 5px;
	gap: 1px;
	vertical-align: super;
}

.palette_aga>div {
	width: 5px;
	height: 6px;
}

:root {
	--stripe1: rgba(255, 255, 255, 0.1);
	--stripe2: rgba(255, 255, 255, 0.2);
}

.screen {
	position: relative;
	/* to allow for 'position: absolute' in .zoom and .overdraw_canvas */
}

.screen_canvas {
	background-image: linear-gradient(45deg, var(--stripe1) 25%, var(--stripe2) 25%, var(--stripe2) 50%, var(--stripe1) 50%, var(--stripe1) 75%, var(--stripe2) 75%, var(--stripe2));
	background-size: 30px 30px;
	animation: barberpole 0.5s linear infinite;
	cursor: crosshair;
}

.overdraw_canvas {
	position: absolute;
	top: 0;
	left: 0;
	pointer-events: none;
	/*	animation: fade 1s infinite;*/
}

.blitrect {
	position: absolute;
	background-color: transparent;
	border: 1px solid black;
	outline: 1px solid white;
	opacity: 0.5;
	pointer-events: none;
}

.blitrect_active {
	position: absolute;
	background-color: transparent;
	border: 2px solid black;
	outline: 2px solid white;
	animation: fade 1s infinite;
	pointer-events: none;
}

@keyframes fade {
	0% {
		opacity: 1;
	}

	50% {
		opacity: 0.6;
	}

	100% {
		opacity: 1;
	}
}

@keyframes barberpole {
	from {
		background-position: 0 0;
	}

	to {
		background-position: 60px 30px;
	}
}

/* memory.tsx */
.memory_container {
	margin: -5px;
}

.memory_float {
	float: left;
	margin: 5px;
	padding-bottom: 15px;
}

.memory {
	position: relative;
	/* to allow for 'position: absolute' in .zoom and .overdraw_canvas */
	/*	display: flex;
	flex-direction: row;
	column-gap: 1em;*/
}

.memory_canvas {
	background-color: black;
	cursor: crosshair;
}

.memory_legend {
	position: absolute;
	border-top: 1px solid white;
	opacity: 0.3;
	width: 256px;
	pointer-events: none;
}

.memory_fixed {
	font-family: var(--vscode-editor-font-family);
	font-size: var(--vscode-editor-font-size);
	font-weight: var(--vscode-editor-font-weight);
	white-space: nowrap;
}

.memory_line {
	text-shadow: 1px 1px 0px black;
}

.memory_span_1 {
	padding-left: 0.25em;
	padding-right: 0.25em;
}

.memory_span_2:nth-child(2n+1) {
	padding-left: 0.5em;
}

.memory_span_2:nth-child(2n) {
	padding-right: 0.5em;
}

.memory_span_4:nth-child(4n+1) {
	padding-left: 1.0em;
}

.memory_span_4:nth-child(4n) {
	padding-right: 1.0em;
}

.bplptr_on, .bplptr_off {
	float: left;
	padding-right: 0.5em;
}

.bplptr_off {
	opacity: 0.6;
}

.bplptr_on:nth-child(3n+1), .bplptr_off:nth-child(3n+1) {
	clear:left;
}
