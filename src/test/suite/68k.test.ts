import { suite, test } from 'mocha';
import * as assert from 'assert';
import { decodeInstruction } from 'm68kdecode';

import { GetJump, JumpType } from "../../client/68k";
import { print_insn_m68k } from '../../client/68k-dis';
import { formatTiming, instructionTimings, popCount, Timing } from '../../m68ktimings';

const i3 = 7;
const i16 = 32766;

// Reference timings for all(?) 68000 operator/operand combinations:
// Generated from reference source file by @flamewing
// https://raw.githubusercontent.com/grahambates/68kcounter/master/test/examples/instructions.s
// based on Yacht timings
//
// Instruction / Bytes / Timings
export const timings: [string, number[], (string | number)[][]][] = [
  ["addi.b #i8,d0", [6, 0, 0, 126], [[8, 2, 0]]],
  ["addi.b #i8,(a0)", [6, 16, 0, 126], [[16, 3, 1]]],
  ["addi.b #i8,(a0)+", [6, 24, 0, 126], [[16, 3, 1]]],
  ["addi.b #i8,-(a0)", [6, 32, 0, 126], [[18, 3, 1]]],
  ["addi.b #i8,i16(a0)", [6, 40, 0, 126, 127, 254], [[20, 4, 1]]],
  ["addi.b #i8,i8(a0,d0.w)", [6, 48, 0, 126, 0, 126], [[22, 4, 1]]],
  ["addi.b #i8,i8(a0,a0.w)", [6, 48, 0, 126, 128, 126], [[22, 4, 1]]],
  ["addi.b #i8,i8(a0,d0.l)", [6, 48, 0, 126, 8, 126], [[22, 4, 1]]],
  ["addi.b #i8,i8(a0,a0.l)", [6, 48, 0, 126, 136, 126], [[22, 4, 1]]],
  ["addi.b #i8,(xxx).w", [6, 56, 0, 126, 2, 0], [[20, 4, 1]]],
  ["addi.b #i8,(xxx).l", [6, 57, 0, 126, 0, 0, 2, 0], [[24, 5, 1]]],
  ["addi.w #i16,d0", [6, 64, 127, 254], [[8, 2, 0]]],
  ["addi.w #i16,(a0)", [6, 80, 127, 254], [[16, 3, 1]]],
  ["addi.w #i16,(a0)+", [6, 88, 127, 254], [[16, 3, 1]]],
  ["addi.w #i16,-(a0)", [6, 96, 127, 254], [[18, 3, 1]]],
  ["addi.w #i16,i16(a0)", [6, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["addi.w #i16,i8(a0,d0.w)", [6, 112, 127, 254, 0, 126], [[22, 4, 1]]],
  ["addi.w #i16,i8(a0,a0.w)", [6, 112, 127, 254, 128, 126], [[22, 4, 1]]],
  ["addi.w #i16,i8(a0,d0.l)", [6, 112, 127, 254, 8, 126], [[22, 4, 1]]],
  ["addi.w #i16,i8(a0,a0.l)", [6, 112, 127, 254, 136, 126], [[22, 4, 1]]],
  ["addi.w #i16,(xxx).w", [6, 120, 127, 254, 2, 0], [[20, 4, 1]]],
  ["addi.w #i16,(xxx).l", [6, 121, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["addi.l #i32,d0", [6, 128, 0, 0, 0, 72], [[16, 3, 0]]],
  ["addi.l #i32,(a0)", [6, 144, 0, 0, 0, 72], [[28, 5, 2]]],
  ["addi.l #i32,(a0)+", [6, 152, 0, 0, 0, 72], [[28, 5, 2]]],
  ["addi.l #i32,-(a0)", [6, 160, 0, 0, 0, 72], [[30, 5, 2]]],
  ["addi.l #i32,i16(a0)", [6, 168, 0, 0, 0, 72, 127, 254], [[32, 6, 2]]],
  ["addi.l #i32,i8(a0,d0.w)", [6, 176, 0, 0, 0, 72, 0, 126], [[34, 6, 2]]],
  ["addi.l #i32,i8(a0,a0.w)", [6, 176, 0, 0, 0, 72, 128, 126], [[34, 6, 2]]],
  ["addi.l #i32,i8(a0,d0.l)", [6, 176, 0, 0, 0, 72, 8, 126], [[34, 6, 2]]],
  ["addi.l #i32,i8(a0,a0.l)", [6, 176, 0, 0, 0, 72, 136, 126], [[34, 6, 2]]],
  ["addi.l #i32,(xxx).w", [6, 184, 0, 0, 0, 72, 2, 0], [[32, 6, 2]]],
  ["addi.l #i32,(xxx).l", [6, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[36, 7, 2]]],
  ["add.b #i8,d0", [208, 60, 0, 126], [[8, 2, 0]]],
  ["add.b #i8,(a0)", [6, 16, 0, 126], [[16, 3, 1]]],
  ["add.b #i8,(a0)+", [6, 24, 0, 126], [[16, 3, 1]]],
  ["add.b #i8,-(a0)", [6, 32, 0, 126], [[18, 3, 1]]],
  ["add.b #i8,i16(a0)", [6, 40, 0, 126, 127, 254], [[20, 4, 1]]],
  ["add.b #i8,i8(a0,d0.w)", [6, 48, 0, 126, 0, 126], [[22, 4, 1]]],
  ["add.b #i8,i8(a0,a0.w)", [6, 48, 0, 126, 128, 126], [[22, 4, 1]]],
  ["add.b #i8,i8(a0,d0.l)", [6, 48, 0, 126, 8, 126], [[22, 4, 1]]],
  ["add.b #i8,i8(a0,a0.l)", [6, 48, 0, 126, 136, 126], [[22, 4, 1]]],
  ["add.b #i8,(xxx).w", [6, 56, 0, 126, 2, 0], [[20, 4, 1]]],
  ["add.b #i8,(xxx).l", [6, 57, 0, 126, 0, 0, 2, 0], [[24, 5, 1]]],
  ["add.w #i16,d0", [208, 124, 127, 254], [[8, 2, 0]]],
  ["add.w #i16,(a0)", [6, 80, 127, 254], [[16, 3, 1]]],
  ["add.w #i16,(a0)+", [6, 88, 127, 254], [[16, 3, 1]]],
  ["add.w #i16,-(a0)", [6, 96, 127, 254], [[18, 3, 1]]],
  ["add.w #i16,i16(a0)", [6, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["add.w #i16,i8(a0,d0.w)", [6, 112, 127, 254, 0, 126], [[22, 4, 1]]],
  ["add.w #i16,i8(a0,a0.w)", [6, 112, 127, 254, 128, 126], [[22, 4, 1]]],
  ["add.w #i16,i8(a0,d0.l)", [6, 112, 127, 254, 8, 126], [[22, 4, 1]]],
  ["add.w #i16,i8(a0,a0.l)", [6, 112, 127, 254, 136, 126], [[22, 4, 1]]],
  ["add.w #i16,(xxx).w", [6, 120, 127, 254, 2, 0], [[20, 4, 1]]],
  ["add.w #i16,(xxx).l", [6, 121, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["add.l #i32,d0", [208, 188, 0, 0, 0, 72], [[16, 3, 0]]],
  ["add.l #i32,(a0)", [6, 144, 0, 0, 0, 72], [[28, 5, 2]]],
  ["add.l #i32,(a0)+", [6, 152, 0, 0, 0, 72], [[28, 5, 2]]],
  ["add.l #i32,-(a0)", [6, 160, 0, 0, 0, 72], [[30, 5, 2]]],
  ["add.l #i32,i16(a0)", [6, 168, 0, 0, 0, 72, 127, 254], [[32, 6, 2]]],
  ["add.l #i32,i8(a0,d0.w)", [6, 176, 0, 0, 0, 72, 0, 126], [[34, 6, 2]]],
  ["add.l #i32,i8(a0,a0.w)", [6, 176, 0, 0, 0, 72, 128, 126], [[34, 6, 2]]],
  ["add.l #i32,i8(a0,d0.l)", [6, 176, 0, 0, 0, 72, 8, 126], [[34, 6, 2]]],
  ["add.l #i32,i8(a0,a0.l)", [6, 176, 0, 0, 0, 72, 136, 126], [[34, 6, 2]]],
  ["add.l #i32,(xxx).w", [6, 184, 0, 0, 0, 72, 2, 0], [[32, 6, 2]]],
  ["add.l #i32,(xxx).l", [6, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[36, 7, 2]]],
  ["andi.b #i8,d0", [2, 0, 0, 126], [[8, 2, 0]]],
  ["andi.b #i8,(a0)", [2, 16, 0, 126], [[16, 3, 1]]],
  ["andi.b #i8,(a0)+", [2, 24, 0, 126], [[16, 3, 1]]],
  ["andi.b #i8,-(a0)", [2, 32, 0, 126], [[18, 3, 1]]],
  ["andi.b #i8,i16(a0)", [2, 40, 0, 126, 127, 254], [[20, 4, 1]]],
  ["andi.b #i8,i8(a0,d0.w)", [2, 48, 0, 126, 0, 126], [[22, 4, 1]]],
  ["andi.b #i8,i8(a0,a0.w)", [2, 48, 0, 126, 128, 126], [[22, 4, 1]]],
  ["andi.b #i8,i8(a0,d0.l)", [2, 48, 0, 126, 8, 126], [[22, 4, 1]]],
  ["andi.b #i8,i8(a0,a0.l)", [2, 48, 0, 126, 136, 126], [[22, 4, 1]]],
  ["andi.b #i8,(xxx).w", [2, 56, 0, 126, 2, 0], [[20, 4, 1]]],
  ["andi.b #i8,(xxx).l", [2, 57, 0, 126, 0, 0, 2, 0], [[24, 5, 1]]],
  ["andi.w #i16,d0", [2, 64, 127, 254], [[8, 2, 0]]],
  ["andi.w #i16,(a0)", [2, 80, 127, 254], [[16, 3, 1]]],
  ["andi.w #i16,(a0)+", [2, 88, 127, 254], [[16, 3, 1]]],
  ["andi.w #i16,-(a0)", [2, 96, 127, 254], [[18, 3, 1]]],
  ["andi.w #i16,i16(a0)", [2, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["andi.w #i16,i8(a0,d0.w)", [2, 112, 127, 254, 0, 126], [[22, 4, 1]]],
  ["andi.w #i16,i8(a0,a0.w)", [2, 112, 127, 254, 128, 126], [[22, 4, 1]]],
  ["andi.w #i16,i8(a0,d0.l)", [2, 112, 127, 254, 8, 126], [[22, 4, 1]]],
  ["andi.w #i16,i8(a0,a0.l)", [2, 112, 127, 254, 136, 126], [[22, 4, 1]]],
  ["andi.w #i16,(xxx).w", [2, 120, 127, 254, 2, 0], [[20, 4, 1]]],
  ["andi.w #i16,(xxx).l", [2, 121, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["andi.l #i32,d0", [2, 128, 0, 0, 0, 72], [[16, 3, 0]]],
  ["andi.l #i32,(a0)", [2, 144, 0, 0, 0, 72], [[28, 5, 2]]],
  ["andi.l #i32,(a0)+", [2, 152, 0, 0, 0, 72], [[28, 5, 2]]],
  ["andi.l #i32,-(a0)", [2, 160, 0, 0, 0, 72], [[30, 5, 2]]],
  ["andi.l #i32,i16(a0)", [2, 168, 0, 0, 0, 72, 127, 254], [[32, 6, 2]]],
  ["andi.l #i32,i8(a0,d0.w)", [2, 176, 0, 0, 0, 72, 0, 126], [[34, 6, 2]]],
  ["andi.l #i32,i8(a0,a0.w)", [2, 176, 0, 0, 0, 72, 128, 126], [[34, 6, 2]]],
  ["andi.l #i32,i8(a0,d0.l)", [2, 176, 0, 0, 0, 72, 8, 126], [[34, 6, 2]]],
  ["andi.l #i32,i8(a0,a0.l)", [2, 176, 0, 0, 0, 72, 136, 126], [[34, 6, 2]]],
  ["andi.l #i32,(xxx).w", [2, 184, 0, 0, 0, 72, 2, 0], [[32, 6, 2]]],
  ["andi.l #i32,(xxx).l", [2, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[36, 7, 2]]],
  ["and.b #i8,d0", [192, 60, 0, 126], [[8, 2, 0]]],
  ["and.b #i8,(a0)", [2, 16, 0, 126], [[16, 3, 1]]],
  ["and.b #i8,(a0)+", [2, 24, 0, 126], [[16, 3, 1]]],
  ["and.b #i8,-(a0)", [2, 32, 0, 126], [[18, 3, 1]]],
  ["and.b #i8,i16(a0)", [2, 40, 0, 126, 127, 254], [[20, 4, 1]]],
  ["and.b #i8,i8(a0,d0.w)", [2, 48, 0, 126, 0, 126], [[22, 4, 1]]],
  ["and.b #i8,i8(a0,a0.w)", [2, 48, 0, 126, 128, 126], [[22, 4, 1]]],
  ["and.b #i8,i8(a0,d0.l)", [2, 48, 0, 126, 8, 126], [[22, 4, 1]]],
  ["and.b #i8,i8(a0,a0.l)", [2, 48, 0, 126, 136, 126], [[22, 4, 1]]],
  ["and.b #i8,(xxx).w", [2, 56, 0, 126, 2, 0], [[20, 4, 1]]],
  ["and.b #i8,(xxx).l", [2, 57, 0, 126, 0, 0, 2, 0], [[24, 5, 1]]],
  ["and.w #i16,d0", [192, 124, 127, 254], [[8, 2, 0]]],
  ["and.w #i16,(a0)", [2, 80, 127, 254], [[16, 3, 1]]],
  ["and.w #i16,(a0)+", [2, 88, 127, 254], [[16, 3, 1]]],
  ["and.w #i16,-(a0)", [2, 96, 127, 254], [[18, 3, 1]]],
  ["and.w #i16,i16(a0)", [2, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["and.w #i16,i8(a0,d0.w)", [2, 112, 127, 254, 0, 126], [[22, 4, 1]]],
  ["and.w #i16,i8(a0,a0.w)", [2, 112, 127, 254, 128, 126], [[22, 4, 1]]],
  ["and.w #i16,i8(a0,d0.l)", [2, 112, 127, 254, 8, 126], [[22, 4, 1]]],
  ["and.w #i16,i8(a0,a0.l)", [2, 112, 127, 254, 136, 126], [[22, 4, 1]]],
  ["and.w #i16,(xxx).w", [2, 120, 127, 254, 2, 0], [[20, 4, 1]]],
  ["and.w #i16,(xxx).l", [2, 121, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["and.l #i32,d0", [192, 188, 0, 0, 0, 72], [[16, 3, 0]]],
  ["and.l #i32,(a0)", [2, 144, 0, 0, 0, 72], [[28, 5, 2]]],
  ["and.l #i32,(a0)+", [2, 152, 0, 0, 0, 72], [[28, 5, 2]]],
  ["and.l #i32,-(a0)", [2, 160, 0, 0, 0, 72], [[30, 5, 2]]],
  ["and.l #i32,i16(a0)", [2, 168, 0, 0, 0, 72, 127, 254], [[32, 6, 2]]],
  ["and.l #i32,i8(a0,d0.w)", [2, 176, 0, 0, 0, 72, 0, 126], [[34, 6, 2]]],
  ["and.l #i32,i8(a0,a0.w)", [2, 176, 0, 0, 0, 72, 128, 126], [[34, 6, 2]]],
  ["and.l #i32,i8(a0,d0.l)", [2, 176, 0, 0, 0, 72, 8, 126], [[34, 6, 2]]],
  ["and.l #i32,i8(a0,a0.l)", [2, 176, 0, 0, 0, 72, 136, 126], [[34, 6, 2]]],
  ["and.l #i32,(xxx).w", [2, 184, 0, 0, 0, 72, 2, 0], [[32, 6, 2]]],
  ["and.l #i32,(xxx).l", [2, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[36, 7, 2]]],
  ["eori.b #i8,d0", [10, 0, 0, 126], [[8, 2, 0]]],
  ["eori.b #i8,(a0)", [10, 16, 0, 126], [[16, 3, 1]]],
  ["eori.b #i8,(a0)+", [10, 24, 0, 126], [[16, 3, 1]]],
  ["eori.b #i8,-(a0)", [10, 32, 0, 126], [[18, 3, 1]]],
  ["eori.b #i8,i16(a0)", [10, 40, 0, 126, 127, 254], [[20, 4, 1]]],
  ["eori.b #i8,i8(a0,d0.w)", [10, 48, 0, 126, 0, 126], [[22, 4, 1]]],
  ["eori.b #i8,i8(a0,a0.w)", [10, 48, 0, 126, 128, 126], [[22, 4, 1]]],
  ["eori.b #i8,i8(a0,d0.l)", [10, 48, 0, 126, 8, 126], [[22, 4, 1]]],
  ["eori.b #i8,i8(a0,a0.l)", [10, 48, 0, 126, 136, 126], [[22, 4, 1]]],
  ["eori.b #i8,(xxx).w", [10, 56, 0, 126, 2, 0], [[20, 4, 1]]],
  ["eori.b #i8,(xxx).l", [10, 57, 0, 126, 0, 0, 2, 0], [[24, 5, 1]]],
  ["eori.w #i16,d0", [10, 64, 127, 254], [[8, 2, 0]]],
  ["eori.w #i16,(a0)", [10, 80, 127, 254], [[16, 3, 1]]],
  ["eori.w #i16,(a0)+", [10, 88, 127, 254], [[16, 3, 1]]],
  ["eori.w #i16,-(a0)", [10, 96, 127, 254], [[18, 3, 1]]],
  ["eori.w #i16,i16(a0)", [10, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["eori.w #i16,i8(a0,d0.w)", [10, 112, 127, 254, 0, 126], [[22, 4, 1]]],
  ["eori.w #i16,i8(a0,a0.w)", [10, 112, 127, 254, 128, 126], [[22, 4, 1]]],
  ["eori.w #i16,i8(a0,d0.l)", [10, 112, 127, 254, 8, 126], [[22, 4, 1]]],
  ["eori.w #i16,i8(a0,a0.l)", [10, 112, 127, 254, 136, 126], [[22, 4, 1]]],
  ["eori.w #i16,(xxx).w", [10, 120, 127, 254, 2, 0], [[20, 4, 1]]],
  ["eori.w #i16,(xxx).l", [10, 121, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["eori.l #i32,d0", [10, 128, 0, 0, 0, 72], [[16, 3, 0]]],
  ["eori.l #i32,(a0)", [10, 144, 0, 0, 0, 72], [[28, 5, 2]]],
  ["eori.l #i32,(a0)+", [10, 152, 0, 0, 0, 72], [[28, 5, 2]]],
  ["eori.l #i32,-(a0)", [10, 160, 0, 0, 0, 72], [[30, 5, 2]]],
  ["eori.l #i32,i16(a0)", [10, 168, 0, 0, 0, 72, 127, 254], [[32, 6, 2]]],
  ["eori.l #i32,i8(a0,d0.w)", [10, 176, 0, 0, 0, 72, 0, 126], [[34, 6, 2]]],
  ["eori.l #i32,i8(a0,a0.w)", [10, 176, 0, 0, 0, 72, 128, 126], [[34, 6, 2]]],
  ["eori.l #i32,i8(a0,d0.l)", [10, 176, 0, 0, 0, 72, 8, 126], [[34, 6, 2]]],
  ["eori.l #i32,i8(a0,a0.l)", [10, 176, 0, 0, 0, 72, 136, 126], [[34, 6, 2]]],
  ["eori.l #i32,(xxx).w", [10, 184, 0, 0, 0, 72, 2, 0], [[32, 6, 2]]],
  ["eori.l #i32,(xxx).l", [10, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[36, 7, 2]]],
  ["eor.b #i8,d0", [10, 0, 0, 126], [[8, 2, 0]]],
  ["eor.b #i8,(a0)", [10, 16, 0, 126], [[16, 3, 1]]],
  ["eor.b #i8,(a0)+", [10, 24, 0, 126], [[16, 3, 1]]],
  ["eor.b #i8,-(a0)", [10, 32, 0, 126], [[18, 3, 1]]],
  ["eor.b #i8,i16(a0)", [10, 40, 0, 126, 127, 254], [[20, 4, 1]]],
  ["eor.b #i8,i8(a0,d0.w)", [10, 48, 0, 126, 0, 126], [[22, 4, 1]]],
  ["eor.b #i8,i8(a0,a0.w)", [10, 48, 0, 126, 128, 126], [[22, 4, 1]]],
  ["eor.b #i8,i8(a0,d0.l)", [10, 48, 0, 126, 8, 126], [[22, 4, 1]]],
  ["eor.b #i8,i8(a0,a0.l)", [10, 48, 0, 126, 136, 126], [[22, 4, 1]]],
  ["eor.b #i8,(xxx).w", [10, 56, 0, 126, 2, 0], [[20, 4, 1]]],
  ["eor.b #i8,(xxx).l", [10, 57, 0, 126, 0, 0, 2, 0], [[24, 5, 1]]],
  ["eor.w #i16,d0", [10, 64, 127, 254], [[8, 2, 0]]],
  ["eor.w #i16,(a0)", [10, 80, 127, 254], [[16, 3, 1]]],
  ["eor.w #i16,(a0)+", [10, 88, 127, 254], [[16, 3, 1]]],
  ["eor.w #i16,-(a0)", [10, 96, 127, 254], [[18, 3, 1]]],
  ["eor.w #i16,i16(a0)", [10, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["eor.w #i16,i8(a0,d0.w)", [10, 112, 127, 254, 0, 126], [[22, 4, 1]]],
  ["eor.w #i16,i8(a0,a0.w)", [10, 112, 127, 254, 128, 126], [[22, 4, 1]]],
  ["eor.w #i16,i8(a0,d0.l)", [10, 112, 127, 254, 8, 126], [[22, 4, 1]]],
  ["eor.w #i16,i8(a0,a0.l)", [10, 112, 127, 254, 136, 126], [[22, 4, 1]]],
  ["eor.w #i16,(xxx).w", [10, 120, 127, 254, 2, 0], [[20, 4, 1]]],
  ["eor.w #i16,(xxx).l", [10, 121, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["eor.l #i32,d0", [10, 128, 0, 0, 0, 72], [[16, 3, 0]]],
  ["eor.l #i32,(a0)", [10, 144, 0, 0, 0, 72], [[28, 5, 2]]],
  ["eor.l #i32,(a0)+", [10, 152, 0, 0, 0, 72], [[28, 5, 2]]],
  ["eor.l #i32,-(a0)", [10, 160, 0, 0, 0, 72], [[30, 5, 2]]],
  ["eor.l #i32,i16(a0)", [10, 168, 0, 0, 0, 72, 127, 254], [[32, 6, 2]]],
  ["eor.l #i32,i8(a0,d0.w)", [10, 176, 0, 0, 0, 72, 0, 126], [[34, 6, 2]]],
  ["eor.l #i32,i8(a0,a0.w)", [10, 176, 0, 0, 0, 72, 128, 126], [[34, 6, 2]]],
  ["eor.l #i32,i8(a0,d0.l)", [10, 176, 0, 0, 0, 72, 8, 126], [[34, 6, 2]]],
  ["eor.l #i32,i8(a0,a0.l)", [10, 176, 0, 0, 0, 72, 136, 126], [[34, 6, 2]]],
  ["eor.l #i32,(xxx).w", [10, 184, 0, 0, 0, 72, 2, 0], [[32, 6, 2]]],
  ["eor.l #i32,(xxx).l", [10, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[36, 7, 2]]],
  ["ori.b #i8,d0", [0, 0, 0, 126], [[8, 2, 0]]],
  ["ori.b #i8,(a0)", [0, 16, 0, 126], [[16, 3, 1]]],
  ["ori.b #i8,(a0)+", [0, 24, 0, 126], [[16, 3, 1]]],
  ["ori.b #i8,-(a0)", [0, 32, 0, 126], [[18, 3, 1]]],
  ["ori.b #i8,i16(a0)", [0, 40, 0, 126, 127, 254], [[20, 4, 1]]],
  ["ori.b #i8,i8(a0,d0.w)", [0, 48, 0, 126, 0, 126], [[22, 4, 1]]],
  ["ori.b #i8,i8(a0,a0.w)", [0, 48, 0, 126, 128, 126], [[22, 4, 1]]],
  ["ori.b #i8,i8(a0,d0.l)", [0, 48, 0, 126, 8, 126], [[22, 4, 1]]],
  ["ori.b #i8,i8(a0,a0.l)", [0, 48, 0, 126, 136, 126], [[22, 4, 1]]],
  ["ori.b #i8,(xxx).w", [0, 56, 0, 126, 2, 0], [[20, 4, 1]]],
  ["ori.b #i8,(xxx).l", [0, 57, 0, 126, 0, 0, 2, 0], [[24, 5, 1]]],
  ["ori.w #i16,d0", [0, 64, 127, 254], [[8, 2, 0]]],
  ["ori.w #i16,(a0)", [0, 80, 127, 254], [[16, 3, 1]]],
  ["ori.w #i16,(a0)+", [0, 88, 127, 254], [[16, 3, 1]]],
  ["ori.w #i16,-(a0)", [0, 96, 127, 254], [[18, 3, 1]]],
  ["ori.w #i16,i16(a0)", [0, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["ori.w #i16,i8(a0,d0.w)", [0, 112, 127, 254, 0, 126], [[22, 4, 1]]],
  ["ori.w #i16,i8(a0,a0.w)", [0, 112, 127, 254, 128, 126], [[22, 4, 1]]],
  ["ori.w #i16,i8(a0,d0.l)", [0, 112, 127, 254, 8, 126], [[22, 4, 1]]],
  ["ori.w #i16,i8(a0,a0.l)", [0, 112, 127, 254, 136, 126], [[22, 4, 1]]],
  ["ori.w #i16,(xxx).w", [0, 120, 127, 254, 2, 0], [[20, 4, 1]]],
  ["ori.w #i16,(xxx).l", [0, 121, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["ori.l #i32,d0", [0, 128, 0, 0, 0, 72], [[16, 3, 0]]],
  ["ori.l #i32,(a0)", [0, 144, 0, 0, 0, 72], [[28, 5, 2]]],
  ["ori.l #i32,(a0)+", [0, 152, 0, 0, 0, 72], [[28, 5, 2]]],
  ["ori.l #i32,-(a0)", [0, 160, 0, 0, 0, 72], [[30, 5, 2]]],
  ["ori.l #i32,i16(a0)", [0, 168, 0, 0, 0, 72, 127, 254], [[32, 6, 2]]],
  ["ori.l #i32,i8(a0,d0.w)", [0, 176, 0, 0, 0, 72, 0, 126], [[34, 6, 2]]],
  ["ori.l #i32,i8(a0,a0.w)", [0, 176, 0, 0, 0, 72, 128, 126], [[34, 6, 2]]],
  ["ori.l #i32,i8(a0,d0.l)", [0, 176, 0, 0, 0, 72, 8, 126], [[34, 6, 2]]],
  ["ori.l #i32,i8(a0,a0.l)", [0, 176, 0, 0, 0, 72, 136, 126], [[34, 6, 2]]],
  ["ori.l #i32,(xxx).w", [0, 184, 0, 0, 0, 72, 2, 0], [[32, 6, 2]]],
  ["ori.l #i32,(xxx).l", [0, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[36, 7, 2]]],
  ["or.b #i8,d0", [128, 60, 0, 126], [[8, 2, 0]]],
  ["or.b #i8,(a0)", [0, 16, 0, 126], [[16, 3, 1]]],
  ["or.b #i8,(a0)+", [0, 24, 0, 126], [[16, 3, 1]]],
  ["or.b #i8,-(a0)", [0, 32, 0, 126], [[18, 3, 1]]],
  ["or.b #i8,i16(a0)", [0, 40, 0, 126, 127, 254], [[20, 4, 1]]],
  ["or.b #i8,i8(a0,d0.w)", [0, 48, 0, 126, 0, 126], [[22, 4, 1]]],
  ["or.b #i8,i8(a0,a0.w)", [0, 48, 0, 126, 128, 126], [[22, 4, 1]]],
  ["or.b #i8,i8(a0,d0.l)", [0, 48, 0, 126, 8, 126], [[22, 4, 1]]],
  ["or.b #i8,i8(a0,a0.l)", [0, 48, 0, 126, 136, 126], [[22, 4, 1]]],
  ["or.b #i8,(xxx).w", [0, 56, 0, 126, 2, 0], [[20, 4, 1]]],
  ["or.b #i8,(xxx).l", [0, 57, 0, 126, 0, 0, 2, 0], [[24, 5, 1]]],
  ["or.w #i16,d0", [128, 124, 127, 254], [[8, 2, 0]]],
  ["or.w #i16,(a0)", [0, 80, 127, 254], [[16, 3, 1]]],
  ["or.w #i16,(a0)+", [0, 88, 127, 254], [[16, 3, 1]]],
  ["or.w #i16,-(a0)", [0, 96, 127, 254], [[18, 3, 1]]],
  ["or.w #i16,i16(a0)", [0, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["or.w #i16,i8(a0,d0.w)", [0, 112, 127, 254, 0, 126], [[22, 4, 1]]],
  ["or.w #i16,i8(a0,a0.w)", [0, 112, 127, 254, 128, 126], [[22, 4, 1]]],
  ["or.w #i16,i8(a0,d0.l)", [0, 112, 127, 254, 8, 126], [[22, 4, 1]]],
  ["or.w #i16,i8(a0,a0.l)", [0, 112, 127, 254, 136, 126], [[22, 4, 1]]],
  ["or.w #i16,(xxx).w", [0, 120, 127, 254, 2, 0], [[20, 4, 1]]],
  ["or.w #i16,(xxx).l", [0, 121, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["or.l #i32,d0", [128, 188, 0, 0, 0, 72], [[16, 3, 0]]],
  ["or.l #i32,(a0)", [0, 144, 0, 0, 0, 72], [[28, 5, 2]]],
  ["or.l #i32,(a0)+", [0, 152, 0, 0, 0, 72], [[28, 5, 2]]],
  ["or.l #i32,-(a0)", [0, 160, 0, 0, 0, 72], [[30, 5, 2]]],
  ["or.l #i32,i16(a0)", [0, 168, 0, 0, 0, 72, 127, 254], [[32, 6, 2]]],
  ["or.l #i32,i8(a0,d0.w)", [0, 176, 0, 0, 0, 72, 0, 126], [[34, 6, 2]]],
  ["or.l #i32,i8(a0,a0.w)", [0, 176, 0, 0, 0, 72, 128, 126], [[34, 6, 2]]],
  ["or.l #i32,i8(a0,d0.l)", [0, 176, 0, 0, 0, 72, 8, 126], [[34, 6, 2]]],
  ["or.l #i32,i8(a0,a0.l)", [0, 176, 0, 0, 0, 72, 136, 126], [[34, 6, 2]]],
  ["or.l #i32,(xxx).w", [0, 184, 0, 0, 0, 72, 2, 0], [[32, 6, 2]]],
  ["or.l #i32,(xxx).l", [0, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[36, 7, 2]]],
  ["subi.b #i8,d0", [4, 0, 0, 126], [[8, 2, 0]]],
  ["subi.b #i8,(a0)", [4, 16, 0, 126], [[16, 3, 1]]],
  ["subi.b #i8,(a0)+", [4, 24, 0, 126], [[16, 3, 1]]],
  ["subi.b #i8,-(a0)", [4, 32, 0, 126], [[18, 3, 1]]],
  ["subi.b #i8,i16(a0)", [4, 40, 0, 126, 127, 254], [[20, 4, 1]]],
  ["subi.b #i8,i8(a0,d0.w)", [4, 48, 0, 126, 0, 126], [[22, 4, 1]]],
  ["subi.b #i8,i8(a0,a0.w)", [4, 48, 0, 126, 128, 126], [[22, 4, 1]]],
  ["subi.b #i8,i8(a0,d0.l)", [4, 48, 0, 126, 8, 126], [[22, 4, 1]]],
  ["subi.b #i8,i8(a0,a0.l)", [4, 48, 0, 126, 136, 126], [[22, 4, 1]]],
  ["subi.b #i8,(xxx).w", [4, 56, 0, 126, 2, 0], [[20, 4, 1]]],
  ["subi.b #i8,(xxx).l", [4, 57, 0, 126, 0, 0, 2, 0], [[24, 5, 1]]],
  ["subi.w #i16,d0", [4, 64, 127, 254], [[8, 2, 0]]],
  ["subi.w #i16,(a0)", [4, 80, 127, 254], [[16, 3, 1]]],
  ["subi.w #i16,(a0)+", [4, 88, 127, 254], [[16, 3, 1]]],
  ["subi.w #i16,-(a0)", [4, 96, 127, 254], [[18, 3, 1]]],
  ["subi.w #i16,i16(a0)", [4, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["subi.w #i16,i8(a0,d0.w)", [4, 112, 127, 254, 0, 126], [[22, 4, 1]]],
  ["subi.w #i16,i8(a0,a0.w)", [4, 112, 127, 254, 128, 126], [[22, 4, 1]]],
  ["subi.w #i16,i8(a0,d0.l)", [4, 112, 127, 254, 8, 126], [[22, 4, 1]]],
  ["subi.w #i16,i8(a0,a0.l)", [4, 112, 127, 254, 136, 126], [[22, 4, 1]]],
  ["subi.w #i16,(xxx).w", [4, 120, 127, 254, 2, 0], [[20, 4, 1]]],
  ["subi.w #i16,(xxx).l", [4, 121, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["subi.l #i32,d0", [4, 128, 0, 0, 0, 72], [[16, 3, 0]]],
  ["subi.l #i32,(a0)", [4, 144, 0, 0, 0, 72], [[28, 5, 2]]],
  ["subi.l #i32,(a0)+", [4, 152, 0, 0, 0, 72], [[28, 5, 2]]],
  ["subi.l #i32,-(a0)", [4, 160, 0, 0, 0, 72], [[30, 5, 2]]],
  ["subi.l #i32,i16(a0)", [4, 168, 0, 0, 0, 72, 127, 254], [[32, 6, 2]]],
  ["subi.l #i32,i8(a0,d0.w)", [4, 176, 0, 0, 0, 72, 0, 126], [[34, 6, 2]]],
  ["subi.l #i32,i8(a0,a0.w)", [4, 176, 0, 0, 0, 72, 128, 126], [[34, 6, 2]]],
  ["subi.l #i32,i8(a0,d0.l)", [4, 176, 0, 0, 0, 72, 8, 126], [[34, 6, 2]]],
  ["subi.l #i32,i8(a0,a0.l)", [4, 176, 0, 0, 0, 72, 136, 126], [[34, 6, 2]]],
  ["subi.l #i32,(xxx).w", [4, 184, 0, 0, 0, 72, 2, 0], [[32, 6, 2]]],
  ["subi.l #i32,(xxx).l", [4, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[36, 7, 2]]],
  ["sub.b #i8,d0", [144, 60, 0, 126], [[8, 2, 0]]],
  ["sub.b #i8,(a0)", [4, 16, 0, 126], [[16, 3, 1]]],
  ["sub.b #i8,(a0)+", [4, 24, 0, 126], [[16, 3, 1]]],
  ["sub.b #i8,-(a0)", [4, 32, 0, 126], [[18, 3, 1]]],
  ["sub.b #i8,i16(a0)", [4, 40, 0, 126, 127, 254], [[20, 4, 1]]],
  ["sub.b #i8,i8(a0,d0.w)", [4, 48, 0, 126, 0, 126], [[22, 4, 1]]],
  ["sub.b #i8,i8(a0,a0.w)", [4, 48, 0, 126, 128, 126], [[22, 4, 1]]],
  ["sub.b #i8,i8(a0,d0.l)", [4, 48, 0, 126, 8, 126], [[22, 4, 1]]],
  ["sub.b #i8,i8(a0,a0.l)", [4, 48, 0, 126, 136, 126], [[22, 4, 1]]],
  ["sub.b #i8,(xxx).w", [4, 56, 0, 126, 2, 0], [[20, 4, 1]]],
  ["sub.b #i8,(xxx).l", [4, 57, 0, 126, 0, 0, 2, 0], [[24, 5, 1]]],
  ["sub.w #i16,d0", [144, 124, 127, 254], [[8, 2, 0]]],
  ["sub.w #i16,(a0)", [4, 80, 127, 254], [[16, 3, 1]]],
  ["sub.w #i16,(a0)+", [4, 88, 127, 254], [[16, 3, 1]]],
  ["sub.w #i16,-(a0)", [4, 96, 127, 254], [[18, 3, 1]]],
  ["sub.w #i16,i16(a0)", [4, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["sub.w #i16,i8(a0,d0.w)", [4, 112, 127, 254, 0, 126], [[22, 4, 1]]],
  ["sub.w #i16,i8(a0,a0.w)", [4, 112, 127, 254, 128, 126], [[22, 4, 1]]],
  ["sub.w #i16,i8(a0,d0.l)", [4, 112, 127, 254, 8, 126], [[22, 4, 1]]],
  ["sub.w #i16,i8(a0,a0.l)", [4, 112, 127, 254, 136, 126], [[22, 4, 1]]],
  ["sub.w #i16,(xxx).w", [4, 120, 127, 254, 2, 0], [[20, 4, 1]]],
  ["sub.w #i16,(xxx).l", [4, 121, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["sub.l #i32,d0", [144, 188, 0, 0, 0, 72], [[16, 3, 0]]],
  ["sub.l #i32,(a0)", [4, 144, 0, 0, 0, 72], [[28, 5, 2]]],
  ["sub.l #i32,(a0)+", [4, 152, 0, 0, 0, 72], [[28, 5, 2]]],
  ["sub.l #i32,-(a0)", [4, 160, 0, 0, 0, 72], [[30, 5, 2]]],
  ["sub.l #i32,i16(a0)", [4, 168, 0, 0, 0, 72, 127, 254], [[32, 6, 2]]],
  ["sub.l #i32,i8(a0,d0.w)", [4, 176, 0, 0, 0, 72, 0, 126], [[34, 6, 2]]],
  ["sub.l #i32,i8(a0,a0.w)", [4, 176, 0, 0, 0, 72, 128, 126], [[34, 6, 2]]],
  ["sub.l #i32,i8(a0,d0.l)", [4, 176, 0, 0, 0, 72, 8, 126], [[34, 6, 2]]],
  ["sub.l #i32,i8(a0,a0.l)", [4, 176, 0, 0, 0, 72, 136, 126], [[34, 6, 2]]],
  ["sub.l #i32,(xxx).w", [4, 184, 0, 0, 0, 72, 2, 0], [[32, 6, 2]]],
  ["sub.l #i32,(xxx).l", [4, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[36, 7, 2]]],
  ["andi.b #i8,ccr", [2, 60, 0, 126], [[20, 3, 0]]],
  ["eori.b #i8,ccr", [10, 60, 0, 126], [[20, 3, 0]]],
  ["ori.b #i8,ccr", [0, 60, 0, 126], [[20, 3, 0]]],
  ["and.b #i8,ccr", [2, 60, 0, 126], [[20, 3, 0]]],
  ["eor.b #i8,ccr", [10, 60, 0, 126], [[20, 3, 0]]],
  ["or.b #i8,ccr", [0, 60, 0, 126], [[20, 3, 0]]],
  ["andi.w #i16,sr", [2, 124, 127, 254], [[20, 3, 0]]],
  ["eori.w #i16,sr", [10, 124, 127, 254], [[20, 3, 0]]],
  ["ori.w #i16,sr", [0, 124, 127, 254], [[20, 3, 0]]],
  ["and.w #i16,sr", [2, 124, 127, 254], [[20, 3, 0]]],
  ["eor.w #i16,sr", [10, 124, 127, 254], [[20, 3, 0]]],
  ["or.w #i16,sr", [0, 124, 127, 254], [[20, 3, 0]]],
  ["cmpi.b #i8,d0", [12, 0, 0, 126], [[8, 2, 0]]],
  ["cmpi.b #i8,(a0)", [12, 16, 0, 126], [[12, 3, 0]]],
  ["cmpi.b #i8,(a0)+", [12, 24, 0, 126], [[12, 3, 0]]],
  ["cmpi.b #i8,-(a0)", [12, 32, 0, 126], [[14, 3, 0]]],
  ["cmpi.b #i8,i16(a0)", [12, 40, 0, 126, 127, 254], [[16, 4, 0]]],
  ["cmpi.b #i8,i8(a0,d0.w)", [12, 48, 0, 126, 0, 126], [[18, 4, 0]]],
  ["cmpi.b #i8,i8(a0,a0.w)", [12, 48, 0, 126, 128, 126], [[18, 4, 0]]],
  ["cmpi.b #i8,i8(a0,d0.l)", [12, 48, 0, 126, 8, 126], [[18, 4, 0]]],
  ["cmpi.b #i8,i8(a0,a0.l)", [12, 48, 0, 126, 136, 126], [[18, 4, 0]]],
  ["cmpi.b #i8,(xxx).w", [12, 56, 0, 126, 2, 0], [[16, 4, 0]]],
  ["cmpi.b #i8,(xxx).l", [12, 57, 0, 126, 0, 0, 2, 0], [[20, 5, 0]]],
  ["cmpi.w #i16,d0", [12, 64, 127, 254], [[8, 2, 0]]],
  ["cmpi.w #i16,(a0)", [12, 80, 127, 254], [[12, 3, 0]]],
  ["cmpi.w #i16,(a0)+", [12, 88, 127, 254], [[12, 3, 0]]],
  ["cmpi.w #i16,-(a0)", [12, 96, 127, 254], [[14, 3, 0]]],
  ["cmpi.w #i16,i16(a0)", [12, 104, 127, 254, 127, 254], [[16, 4, 0]]],
  ["cmpi.w #i16,i8(a0,d0.w)", [12, 112, 127, 254, 0, 126], [[18, 4, 0]]],
  ["cmpi.w #i16,i8(a0,a0.w)", [12, 112, 127, 254, 128, 126], [[18, 4, 0]]],
  ["cmpi.w #i16,i8(a0,d0.l)", [12, 112, 127, 254, 8, 126], [[18, 4, 0]]],
  ["cmpi.w #i16,i8(a0,a0.l)", [12, 112, 127, 254, 136, 126], [[18, 4, 0]]],
  ["cmpi.w #i16,(xxx).w", [12, 120, 127, 254, 2, 0], [[16, 4, 0]]],
  ["cmpi.w #i16,(xxx).l", [12, 121, 127, 254, 0, 0, 2, 0], [[20, 5, 0]]],
  ["cmpi.l #i32,d0", [12, 128, 0, 0, 0, 72], [[14, 3, 0]]],
  ["cmpi.l #i32,(a0)", [12, 144, 0, 0, 0, 72], [[20, 5, 0]]],
  ["cmpi.l #i32,(a0)+", [12, 152, 0, 0, 0, 72], [[20, 5, 0]]],
  ["cmpi.l #i32,-(a0)", [12, 160, 0, 0, 0, 72], [[22, 5, 0]]],
  ["cmpi.l #i32,i16(a0)", [12, 168, 0, 0, 0, 72, 127, 254], [[24, 6, 0]]],
  ["cmpi.l #i32,i8(a0,d0.w)", [12, 176, 0, 0, 0, 72, 0, 126], [[26, 6, 0]]],
  ["cmpi.l #i32,i8(a0,a0.w)", [12, 176, 0, 0, 0, 72, 128, 126], [[26, 6, 0]]],
  ["cmpi.l #i32,i8(a0,d0.l)", [12, 176, 0, 0, 0, 72, 8, 126], [[26, 6, 0]]],
  ["cmpi.l #i32,i8(a0,a0.l)", [12, 176, 0, 0, 0, 72, 136, 126], [[26, 6, 0]]],
  ["cmpi.l #i32,(xxx).w", [12, 184, 0, 0, 0, 72, 2, 0], [[24, 6, 0]]],
  ["cmpi.l #i32,(xxx).l", [12, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[28, 7, 0]]],
  ["cmp.b #i8,d0", [176, 60, 0, 126], [[8, 2, 0]]],
  ["cmp.b #i8,(a0)", [12, 16, 0, 126], [[12, 3, 0]]],
  ["cmp.b #i8,(a0)+", [12, 24, 0, 126], [[12, 3, 0]]],
  ["cmp.b #i8,-(a0)", [12, 32, 0, 126], [[14, 3, 0]]],
  ["cmp.b #i8,i16(a0)", [12, 40, 0, 126, 127, 254], [[16, 4, 0]]],
  ["cmp.b #i8,i8(a0,d0.w)", [12, 48, 0, 126, 0, 126], [[18, 4, 0]]],
  ["cmp.b #i8,i8(a0,a0.w)", [12, 48, 0, 126, 128, 126], [[18, 4, 0]]],
  ["cmp.b #i8,i8(a0,d0.l)", [12, 48, 0, 126, 8, 126], [[18, 4, 0]]],
  ["cmp.b #i8,i8(a0,a0.l)", [12, 48, 0, 126, 136, 126], [[18, 4, 0]]],
  ["cmp.b #i8,(xxx).w", [12, 56, 0, 126, 2, 0], [[16, 4, 0]]],
  ["cmp.b #i8,(xxx).l", [12, 57, 0, 126, 0, 0, 2, 0], [[20, 5, 0]]],
  ["cmp.w #i16,d0", [176, 124, 127, 254], [[8, 2, 0]]],
  ["cmp.w #i16,(a0)", [12, 80, 127, 254], [[12, 3, 0]]],
  ["cmp.w #i16,(a0)+", [12, 88, 127, 254], [[12, 3, 0]]],
  ["cmp.w #i16,-(a0)", [12, 96, 127, 254], [[14, 3, 0]]],
  ["cmp.w #i16,i16(a0)", [12, 104, 127, 254, 127, 254], [[16, 4, 0]]],
  ["cmp.w #i16,i8(a0,d0.w)", [12, 112, 127, 254, 0, 126], [[18, 4, 0]]],
  ["cmp.w #i16,i8(a0,a0.w)", [12, 112, 127, 254, 128, 126], [[18, 4, 0]]],
  ["cmp.w #i16,i8(a0,d0.l)", [12, 112, 127, 254, 8, 126], [[18, 4, 0]]],
  ["cmp.w #i16,i8(a0,a0.l)", [12, 112, 127, 254, 136, 126], [[18, 4, 0]]],
  ["cmp.w #i16,(xxx).w", [12, 120, 127, 254, 2, 0], [[16, 4, 0]]],
  ["cmp.w #i16,(xxx).l", [12, 121, 127, 254, 0, 0, 2, 0], [[20, 5, 0]]],
  ["cmp.l #i32,d0", [176, 188, 0, 0, 0, 72], [[14, 3, 0]]],
  ["cmp.l #i32,(a0)", [12, 144, 0, 0, 0, 72], [[20, 5, 0]]],
  ["cmp.l #i32,(a0)+", [12, 152, 0, 0, 0, 72], [[20, 5, 0]]],
  ["cmp.l #i32,-(a0)", [12, 160, 0, 0, 0, 72], [[22, 5, 0]]],
  ["cmp.l #i32,i16(a0)", [12, 168, 0, 0, 0, 72, 127, 254], [[24, 6, 0]]],
  ["cmp.l #i32,i8(a0,d0.w)", [12, 176, 0, 0, 0, 72, 0, 126], [[26, 6, 0]]],
  ["cmp.l #i32,i8(a0,a0.w)", [12, 176, 0, 0, 0, 72, 128, 126], [[26, 6, 0]]],
  ["cmp.l #i32,i8(a0,d0.l)", [12, 176, 0, 0, 0, 72, 8, 126], [[26, 6, 0]]],
  ["cmp.l #i32,i8(a0,a0.l)", [12, 176, 0, 0, 0, 72, 136, 126], [[26, 6, 0]]],
  ["cmp.l #i32,(xxx).w", [12, 184, 0, 0, 0, 72, 2, 0], [[24, 6, 0]]],
  ["cmp.l #i32,(xxx).l", [12, 185, 0, 0, 0, 72, 0, 0, 2, 0], [[28, 7, 0]]],
  ["bchg.b d0,(a0)", [1, 80], [[12, 2, 1]]],
  ["bchg.b d0,(a0)+", [1, 88], [[12, 2, 1]]],
  ["bchg.b d0,-(a0)", [1, 96], [[14, 2, 1]]],
  ["bchg.b d0,i16(a0)", [1, 104, 127, 254], [[16, 3, 1]]],
  ["bchg.b d0,i8(a0,d0.w)", [1, 112, 0, 126], [[18, 3, 1]]],
  ["bchg.b d0,i8(a0,a0.w)", [1, 112, 128, 126], [[18, 3, 1]]],
  ["bchg.b d0,i8(a0,d0.l)", [1, 112, 8, 126], [[18, 3, 1]]],
  ["bchg.b d0,i8(a0,a0.l)", [1, 112, 136, 126], [[18, 3, 1]]],
  ["bchg.b d0,(xxx).w", [1, 120, 2, 0], [[16, 3, 1]]],
  ["bchg.b d0,(xxx).l", [1, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["bchg.l d0,d0", [1, 64], [[6, 1, 0], [8, 1, 0]]],
  ["bchg.b #i3,(a0)", [8, 80, 0, 7], [[16, 3, 1]]],
  ["bchg.b #i3,(a0)+", [8, 88, 0, 7], [[16, 3, 1]]],
  ["bchg.b #i3,-(a0)", [8, 96, 0, 7], [[18, 3, 1]]],
  ["bchg.b #i3,i16(a0)", [8, 104, 0, 7, 127, 254], [[20, 4, 1]]],
  ["bchg.b #i3,i8(a0,d0.w)", [8, 112, 0, 7, 0, 126], [[22, 4, 1]]],
  ["bchg.b #i3,i8(a0,a0.w)", [8, 112, 0, 7, 128, 126], [[22, 4, 1]]],
  ["bchg.b #i3,i8(a0,d0.l)", [8, 112, 0, 7, 8, 126], [[22, 4, 1]]],
  ["bchg.b #i3,i8(a0,a0.l)", [8, 112, 0, 7, 136, 126], [[22, 4, 1]]],
  ["bchg.b #i3,(xxx).w", [8, 120, 0, 7, 2, 0], [[20, 4, 1]]],
  ["bchg.b #i3,(xxx).l", [8, 121, 0, 7, 0, 0, 2, 0], [[24, 5, 1]]],
  ["bchg.l #15,d0", [8, 64, 0, 15], [[10, 2, 0]]],
  ["bchg.l #i5,d0", [8, 64, 0, 31], [[12, 2, 0]]],
  ["bset.b d0,(a0)", [1, 208], [[12, 2, 1]]],
  ["bset.b d0,(a0)+", [1, 216], [[12, 2, 1]]],
  ["bset.b d0,-(a0)", [1, 224], [[14, 2, 1]]],
  ["bset.b d0,i16(a0)", [1, 232, 127, 254], [[16, 3, 1]]],
  ["bset.b d0,i8(a0,d0.w)", [1, 240, 0, 126], [[18, 3, 1]]],
  ["bset.b d0,i8(a0,a0.w)", [1, 240, 128, 126], [[18, 3, 1]]],
  ["bset.b d0,i8(a0,d0.l)", [1, 240, 8, 126], [[18, 3, 1]]],
  ["bset.b d0,i8(a0,a0.l)", [1, 240, 136, 126], [[18, 3, 1]]],
  ["bset.b d0,(xxx).w", [1, 248, 2, 0], [[16, 3, 1]]],
  ["bset.b d0,(xxx).l", [1, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["bset.l d0,d0", [1, 192], [[6, 1, 0], [8, 1, 0]]],
  ["bset.b #i3,(a0)", [8, 208, 0, 7], [[16, 3, 1]]],
  ["bset.b #i3,(a0)+", [8, 216, 0, 7], [[16, 3, 1]]],
  ["bset.b #i3,-(a0)", [8, 224, 0, 7], [[18, 3, 1]]],
  ["bset.b #i3,i16(a0)", [8, 232, 0, 7, 127, 254], [[20, 4, 1]]],
  ["bset.b #i3,i8(a0,d0.w)", [8, 240, 0, 7, 0, 126], [[22, 4, 1]]],
  ["bset.b #i3,i8(a0,a0.w)", [8, 240, 0, 7, 128, 126], [[22, 4, 1]]],
  ["bset.b #i3,i8(a0,d0.l)", [8, 240, 0, 7, 8, 126], [[22, 4, 1]]],
  ["bset.b #i3,i8(a0,a0.l)", [8, 240, 0, 7, 136, 126], [[22, 4, 1]]],
  ["bset.b #i3,(xxx).w", [8, 248, 0, 7, 2, 0], [[20, 4, 1]]],
  ["bset.b #i3,(xxx).l", [8, 249, 0, 7, 0, 0, 2, 0], [[24, 5, 1]]],
  ["bset.l #15,d0", [8, 192, 0, 15], [[10, 2, 0]]],
  ["bset.l #i5,d0", [8, 192, 0, 31], [[12, 2, 0]]],
  ["bclr.b d0,(a0)", [1, 144], [[12, 2, 1]]],
  ["bclr.b d0,(a0)+", [1, 152], [[12, 2, 1]]],
  ["bclr.b d0,-(a0)", [1, 160], [[14, 2, 1]]],
  ["bclr.b d0,i16(a0)", [1, 168, 127, 254], [[16, 3, 1]]],
  ["bclr.b d0,i8(a0,d0.w)", [1, 176, 0, 126], [[18, 3, 1]]],
  ["bclr.b d0,i8(a0,a0.w)", [1, 176, 128, 126], [[18, 3, 1]]],
  ["bclr.b d0,i8(a0,d0.l)", [1, 176, 8, 126], [[18, 3, 1]]],
  ["bclr.b d0,i8(a0,a0.l)", [1, 176, 136, 126], [[18, 3, 1]]],
  ["bclr.b d0,(xxx).w", [1, 184, 2, 0], [[16, 3, 1]]],
  ["bclr.b d0,(xxx).l", [1, 185, 0, 0, 2, 0], [[20, 4, 1]]],
  ["bclr.l d0,d0", [1, 128], [[8, 1, 0], [10, 1, 0]]],
  ["bclr.b #i3,(a0)", [8, 144, 0, 7], [[16, 3, 1]]],
  ["bclr.b #i3,(a0)+", [8, 152, 0, 7], [[16, 3, 1]]],
  ["bclr.b #i3,-(a0)", [8, 160, 0, 7], [[18, 3, 1]]],
  ["bclr.b #i3,i16(a0)", [8, 168, 0, 7, 127, 254], [[20, 4, 1]]],
  ["bclr.b #i3,i8(a0,d0.w)", [8, 176, 0, 7, 0, 126], [[22, 4, 1]]],
  ["bclr.b #i3,i8(a0,a0.w)", [8, 176, 0, 7, 128, 126], [[22, 4, 1]]],
  ["bclr.b #i3,i8(a0,d0.l)", [8, 176, 0, 7, 8, 126], [[22, 4, 1]]],
  ["bclr.b #i3,i8(a0,a0.l)", [8, 176, 0, 7, 136, 126], [[22, 4, 1]]],
  ["bclr.b #i3,(xxx).w", [8, 184, 0, 7, 2, 0], [[20, 4, 1]]],
  ["bclr.b #i3,(xxx).l", [8, 185, 0, 7, 0, 0, 2, 0], [[24, 5, 1]]],
  ["bclr.l #15,d0", [8, 128, 0, 15], [[12, 2, 0]]],
  ["bclr.l #i5,d0", [8, 128, 0, 31], [[14, 2, 0]]],
  ["btst.b d0,(a0)", [1, 16], [[8, 2, 0]]],
  ["btst.b d0,(a0)+", [1, 24], [[8, 2, 0]]],
  ["btst.b d0,-(a0)", [1, 32], [[10, 2, 0]]],
  ["btst.b d0,i16(a0)", [1, 40, 127, 254], [[12, 3, 0]]],
  ["btst.b d0,i8(a0,d0.w)", [1, 48, 0, 126], [[14, 3, 0]]],
  ["btst.b d0,i8(a0,a0.w)", [1, 48, 128, 126], [[14, 3, 0]]],
  ["btst.b d0,i8(a0,d0.l)", [1, 48, 8, 126], [[14, 3, 0]]],
  ["btst.b d0,i8(a0,a0.l)", [1, 48, 136, 126], [[14, 3, 0]]],
  ["btst.b d0,*+i8(pc,d0.w)", [1, 59, 0, 124], [[14, 3, 0]]],
  ["btst.b d0,*+i8(pc,a0.w)", [1, 59, 128, 124], [[14, 3, 0]]],
  ["btst.b d0,*+i8(pc,d0.l)", [1, 59, 8, 124], [[14, 3, 0]]],
  ["btst.b d0,*+i8(pc,a0.l)", [1, 59, 136, 124], [[14, 3, 0]]],
  ["btst.b d0,(xxx).w", [1, 56, 2, 0], [[12, 3, 0]]],
  ["btst.b d0,(xxx).l", [1, 57, 0, 0, 2, 0], [[16, 4, 0]]],
  ["btst.b d0,#255", [1, 60, 0, 255], [[10, 2, 0]]],
  ["btst.l d0,d0", [1, 0], [[6, 1, 0]]],
  ["btst.b #i3,(a0)", [8, 16, 0, 7], [[12, 3, 0]]],
  ["btst.b #i3,(a0)+", [8, 24, 0, 7], [[12, 3, 0]]],
  ["btst.b #i3,-(a0)", [8, 32, 0, 7], [[14, 3, 0]]],
  ["btst.b #i3,i16(a0)", [8, 40, 0, 7, 127, 254], [[16, 4, 0]]],
  ["btst.b #i3,i8(a0,d0.w)", [8, 48, 0, 7, 0, 126], [[18, 4, 0]]],
  ["btst.b #i3,i8(a0,a0.w)", [8, 48, 0, 7, 128, 126], [[18, 4, 0]]],
  ["btst.b #i3,i8(a0,d0.l)", [8, 48, 0, 7, 8, 126], [[18, 4, 0]]],
  ["btst.b #i3,i8(a0,a0.l)", [8, 48, 0, 7, 136, 126], [[18, 4, 0]]],
  ["btst.b #i3,*+i8(pc,d0.w)", [8, 59, 0, 7, 0, 122], [[18, 4, 0]]],
  ["btst.b #i3,*+i8(pc,a0.w)", [8, 59, 0, 7, 128, 122], [[18, 4, 0]]],
  ["btst.b #i3,*+i8(pc,d0.l)", [8, 59, 0, 7, 8, 122], [[18, 4, 0]]],
  ["btst.b #i3,*+i8(pc,a0.l)", [8, 59, 0, 7, 136, 122], [[18, 4, 0]]],
  ["btst.b #i3,(xxx).w", [8, 56, 0, 7, 2, 0], [[16, 4, 0]]],
  ["btst.b #i3,(xxx).l", [8, 57, 0, 7, 0, 0, 2, 0], [[20, 5, 0]]],
  ["btst.l #i5,d0", [8, 0, 0, 31], [[10, 2, 0]]],
  ["movep.w d0,i16(a0)", [1, 136, 127, 254], [[16, 2, 2]]],
  ["movep.l d0,i16(a0)", [1, 200, 127, 254], [[24, 2, 4]]],
  ["movep.w i16(a0),d0", [1, 8, 127, 254], [[16, 4, 0]]],
  ["movep.l i16(a0),d0", [1, 72, 127, 254], [[24, 6, 0]]],
  ["move.b d0,d0", [16, 0], [[4, 1, 0]]],
  ["move.b (a0),d0", [16, 16], [[8, 2, 0]]],
  ["move.b (a0)+,d0", [16, 24], [[8, 2, 0]]],
  ["move.b -(a0),d0", [16, 32], [[10, 2, 0]]],
  ["move.b i16(a0),d0", [16, 40, 127, 254], [[12, 3, 0]]],
  ["move.b *+i16(pc),d0", [16, 58, 127, 252], [[12, 3, 0]]],
  ["move.b i8(a0,d0.w),d0", [16, 48, 0, 126], [[14, 3, 0]]],
  ["move.b i8(a0,a0.w),d0", [16, 48, 128, 126], [[14, 3, 0]]],
  ["move.b i8(a0,d0.l),d0", [16, 48, 8, 126], [[14, 3, 0]]],
  ["move.b i8(a0,a0.l),d0", [16, 48, 136, 126], [[14, 3, 0]]],
  ["move.b *+i8(pc,d0.w),d0", [16, 59, 0, 124], [[14, 3, 0]]],
  ["move.b *+i8(pc,a0.w),d0", [16, 59, 128, 124], [[14, 3, 0]]],
  ["move.b *+i8(pc,d0.l),d0", [16, 59, 8, 124], [[14, 3, 0]]],
  ["move.b *+i8(pc,a0.l),d0", [16, 59, 136, 124], [[14, 3, 0]]],
  ["move.b (xxx).w,d0", [16, 56, 2, 0], [[12, 3, 0]]],
  ["move.b (xxx).l,d0", [16, 57, 0, 0, 2, 0], [[16, 4, 0]]],
  ["move.b #i8,d0", [16, 60, 0, 126], [[8, 2, 0]]],
  ["move.w d0,d0", [48, 0], [[4, 1, 0]]],
  ["move.w a0,d0", [48, 8], [[4, 1, 0]]],
  ["move.w (a0),d0", [48, 16], [[8, 2, 0]]],
  ["move.w (a0)+,d0", [48, 24], [[8, 2, 0]]],
  ["move.w -(a0),d0", [48, 32], [[10, 2, 0]]],
  ["move.w i16(a0),d0", [48, 40, 127, 254], [[12, 3, 0]]],
  ["move.w *+i16(pc),d0", [48, 58, 127, 252], [[12, 3, 0]]],
  ["move.w i8(a0,d0.w),d0", [48, 48, 0, 126], [[14, 3, 0]]],
  ["move.w i8(a0,a0.w),d0", [48, 48, 128, 126], [[14, 3, 0]]],
  ["move.w i8(a0,d0.l),d0", [48, 48, 8, 126], [[14, 3, 0]]],
  ["move.w i8(a0,a0.l),d0", [48, 48, 136, 126], [[14, 3, 0]]],
  ["move.w *+i8(pc,d0.w),d0", [48, 59, 0, 124], [[14, 3, 0]]],
  ["move.w *+i8(pc,a0.w),d0", [48, 59, 128, 124], [[14, 3, 0]]],
  ["move.w *+i8(pc,d0.l),d0", [48, 59, 8, 124], [[14, 3, 0]]],
  ["move.w *+i8(pc,a0.l),d0", [48, 59, 136, 124], [[14, 3, 0]]],
  ["move.w (xxx).w,d0", [48, 56, 2, 0], [[12, 3, 0]]],
  ["move.w (xxx).l,d0", [48, 57, 0, 0, 2, 0], [[16, 4, 0]]],
  ["move.w #i16,d0", [48, 60, 127, 254], [[8, 2, 0]]],
  ["move.l d0,d0", [32, 0], [[4, 1, 0]]],
  ["move.l a0,d0", [32, 8], [[4, 1, 0]]],
  ["move.l (a0),d0", [32, 16], [[12, 3, 0]]],
  ["move.l (a0)+,d0", [32, 24], [[12, 3, 0]]],
  ["move.l -(a0),d0", [32, 32], [[14, 3, 0]]],
  ["move.l i16(a0),d0", [32, 40, 127, 254], [[16, 4, 0]]],
  ["move.l *+i16(pc),d0", [32, 58, 127, 252], [[16, 4, 0]]],
  ["move.l i8(a0,d0.w),d0", [32, 48, 0, 126], [[18, 4, 0]]],
  ["move.l i8(a0,a0.w),d0", [32, 48, 128, 126], [[18, 4, 0]]],
  ["move.l i8(a0,d0.l),d0", [32, 48, 8, 126], [[18, 4, 0]]],
  ["move.l i8(a0,a0.l),d0", [32, 48, 136, 126], [[18, 4, 0]]],
  ["move.l *+i8(pc,d0.w),d0", [32, 59, 0, 124], [[18, 4, 0]]],
  ["move.l *+i8(pc,a0.w),d0", [32, 59, 128, 124], [[18, 4, 0]]],
  ["move.l *+i8(pc,d0.l),d0", [32, 59, 8, 124], [[18, 4, 0]]],
  ["move.l *+i8(pc,a0.l),d0", [32, 59, 136, 124], [[18, 4, 0]]],
  ["move.l (xxx).w,d0", [32, 56, 2, 0], [[16, 4, 0]]],
  ["move.l (xxx).l,d0", [32, 57, 0, 0, 2, 0], [[20, 5, 0]]],
  ["move.l #i32,d0", [32, 60, 0, 0, 0, 72], [[12, 3, 0]]],
  ["move.b d0,(a0)", [16, 128], [[8, 1, 1]]],
  ["move.b (a0),(a0)", [16, 144], [[12, 2, 1]]],
  ["move.b (a0)+,(a0)", [16, 152], [[12, 2, 1]]],
  ["move.b -(a0),(a0)", [16, 160], [[14, 2, 1]]],
  ["move.b i16(a0),(a0)", [16, 168, 127, 254], [[16, 3, 1]]],
  ["move.b *+i16(pc),(a0)", [16, 186, 127, 252], [[16, 3, 1]]],
  ["move.b i8(a0,d0.w),(a0)", [16, 176, 0, 126], [[18, 3, 1]]],
  ["move.b i8(a0,a0.w),(a0)", [16, 176, 128, 126], [[18, 3, 1]]],
  ["move.b i8(a0,d0.l),(a0)", [16, 176, 8, 126], [[18, 3, 1]]],
  ["move.b i8(a0,a0.l),(a0)", [16, 176, 136, 126], [[18, 3, 1]]],
  ["move.b *+i8(pc,d0.w),(a0)", [16, 187, 0, 124], [[18, 3, 1]]],
  ["move.b *+i8(pc,a0.w),(a0)", [16, 187, 128, 124], [[18, 3, 1]]],
  ["move.b *+i8(pc,d0.l),(a0)", [16, 187, 8, 124], [[18, 3, 1]]],
  ["move.b *+i8(pc,a0.l),(a0)", [16, 187, 136, 124], [[18, 3, 1]]],
  ["move.b (xxx).w,(a0)", [16, 184, 2, 0], [[16, 3, 1]]],
  ["move.b (xxx).l,(a0)", [16, 185, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.b #i8,(a0)", [16, 188, 0, 126], [[12, 2, 1]]],
  ["move.w d0,(a0)", [48, 128], [[8, 1, 1]]],
  ["move.w a0,(a0)", [48, 136], [[8, 1, 1]]],
  ["move.w (a0),(a0)", [48, 144], [[12, 2, 1]]],
  ["move.w (a0)+,(a0)", [48, 152], [[12, 2, 1]]],
  ["move.w -(a0),(a0)", [48, 160], [[14, 2, 1]]],
  ["move.w i16(a0),(a0)", [48, 168, 127, 254], [[16, 3, 1]]],
  ["move.w *+i16(pc),(a0)", [48, 186, 127, 252], [[16, 3, 1]]],
  ["move.w i8(a0,d0.w),(a0)", [48, 176, 0, 126], [[18, 3, 1]]],
  ["move.w i8(a0,a0.w),(a0)", [48, 176, 128, 126], [[18, 3, 1]]],
  ["move.w i8(a0,d0.l),(a0)", [48, 176, 8, 126], [[18, 3, 1]]],
  ["move.w i8(a0,a0.l),(a0)", [48, 176, 136, 126], [[18, 3, 1]]],
  ["move.w *+i8(pc,d0.w),(a0)", [48, 187, 0, 124], [[18, 3, 1]]],
  ["move.w *+i8(pc,a0.w),(a0)", [48, 187, 128, 124], [[18, 3, 1]]],
  ["move.w *+i8(pc,d0.l),(a0)", [48, 187, 8, 124], [[18, 3, 1]]],
  ["move.w *+i8(pc,a0.l),(a0)", [48, 187, 136, 124], [[18, 3, 1]]],
  ["move.w (xxx).w,(a0)", [48, 184, 2, 0], [[16, 3, 1]]],
  ["move.w (xxx).l,(a0)", [48, 185, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.w #i16,(a0)", [48, 188, 127, 254], [[12, 2, 1]]],
  ["move.l d0,(a0)", [32, 128], [[12, 1, 2]]],
  ["move.l a0,(a0)", [32, 136], [[12, 1, 2]]],
  ["move.l (a0),(a0)", [32, 144], [[20, 3, 2]]],
  ["move.l (a0)+,(a0)", [32, 152], [[20, 3, 2]]],
  ["move.l -(a0),(a0)", [32, 160], [[22, 3, 2]]],
  ["move.l i16(a0),(a0)", [32, 168, 127, 254], [[24, 4, 2]]],
  ["move.l *+i16(pc),(a0)", [32, 186, 127, 252], [[24, 4, 2]]],
  ["move.l i8(a0,d0.w),(a0)", [32, 176, 0, 126], [[26, 4, 2]]],
  ["move.l i8(a0,a0.w),(a0)", [32, 176, 128, 126], [[26, 4, 2]]],
  ["move.l i8(a0,d0.l),(a0)", [32, 176, 8, 126], [[26, 4, 2]]],
  ["move.l i8(a0,a0.l),(a0)", [32, 176, 136, 126], [[26, 4, 2]]],
  ["move.l *+i8(pc,d0.w),(a0)", [32, 187, 0, 124], [[26, 4, 2]]],
  ["move.l *+i8(pc,a0.w),(a0)", [32, 187, 128, 124], [[26, 4, 2]]],
  ["move.l *+i8(pc,d0.l),(a0)", [32, 187, 8, 124], [[26, 4, 2]]],
  ["move.l *+i8(pc,a0.l),(a0)", [32, 187, 136, 124], [[26, 4, 2]]],
  ["move.l (xxx).w,(a0)", [32, 184, 2, 0], [[24, 4, 2]]],
  ["move.l (xxx).l,(a0)", [32, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["move.l #i32,(a0)", [32, 188, 0, 0, 0, 72], [[20, 3, 2]]],
  ["move.b d0,(a0)+", [16, 192], [[8, 1, 1]]],
  ["move.b (a0),(a0)+", [16, 208], [[12, 2, 1]]],
  ["move.b (a0)+,(a0)+", [16, 216], [[12, 2, 1]]],
  ["move.b -(a0),(a0)+", [16, 224], [[14, 2, 1]]],
  ["move.b i16(a0),(a0)+", [16, 232, 127, 254], [[16, 3, 1]]],
  ["move.b *+i16(pc),(a0)+", [16, 250, 127, 252], [[16, 3, 1]]],
  ["move.b i8(a0,d0.w),(a0)+", [16, 240, 0, 126], [[18, 3, 1]]],
  ["move.b i8(a0,a0.w),(a0)+", [16, 240, 128, 126], [[18, 3, 1]]],
  ["move.b i8(a0,d0.l),(a0)+", [16, 240, 8, 126], [[18, 3, 1]]],
  ["move.b i8(a0,a0.l),(a0)+", [16, 240, 136, 126], [[18, 3, 1]]],
  ["move.b *+i8(pc,d0.w),(a0)+", [16, 251, 0, 124], [[18, 3, 1]]],
  ["move.b *+i8(pc,a0.w),(a0)+", [16, 251, 128, 124], [[18, 3, 1]]],
  ["move.b *+i8(pc,d0.l),(a0)+", [16, 251, 8, 124], [[18, 3, 1]]],
  ["move.b *+i8(pc,a0.l),(a0)+", [16, 251, 136, 124], [[18, 3, 1]]],
  ["move.b (xxx).w,(a0)+", [16, 248, 2, 0], [[16, 3, 1]]],
  ["move.b (xxx).l,(a0)+", [16, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.b #i8,(a0)+", [16, 252, 0, 126], [[12, 2, 1]]],
  ["move.w d0,(a0)+", [48, 192], [[8, 1, 1]]],
  ["move.w a0,(a0)+", [48, 200], [[8, 1, 1]]],
  ["move.w (a0),(a0)+", [48, 208], [[12, 2, 1]]],
  ["move.w (a0)+,(a0)+", [48, 216], [[12, 2, 1]]],
  ["move.w -(a0),(a0)+", [48, 224], [[14, 2, 1]]],
  ["move.w i16(a0),(a0)+", [48, 232, 127, 254], [[16, 3, 1]]],
  ["move.w *+i16(pc),(a0)+", [48, 250, 127, 252], [[16, 3, 1]]],
  ["move.w i8(a0,d0.w),(a0)+", [48, 240, 0, 126], [[18, 3, 1]]],
  ["move.w i8(a0,a0.w),(a0)+", [48, 240, 128, 126], [[18, 3, 1]]],
  ["move.w i8(a0,d0.l),(a0)+", [48, 240, 8, 126], [[18, 3, 1]]],
  ["move.w i8(a0,a0.l),(a0)+", [48, 240, 136, 126], [[18, 3, 1]]],
  ["move.w *+i8(pc,d0.w),(a0)+", [48, 251, 0, 124], [[18, 3, 1]]],
  ["move.w *+i8(pc,a0.w),(a0)+", [48, 251, 128, 124], [[18, 3, 1]]],
  ["move.w *+i8(pc,d0.l),(a0)+", [48, 251, 8, 124], [[18, 3, 1]]],
  ["move.w *+i8(pc,a0.l),(a0)+", [48, 251, 136, 124], [[18, 3, 1]]],
  ["move.w (xxx).w,(a0)+", [48, 248, 2, 0], [[16, 3, 1]]],
  ["move.w (xxx).l,(a0)+", [48, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.w #i16,(a0)+", [48, 252, 127, 254], [[12, 2, 1]]],
  ["move.l d0,(a0)+", [32, 192], [[12, 1, 2]]],
  ["move.l a0,(a0)+", [32, 200], [[12, 1, 2]]],
  ["move.l (a0),(a0)+", [32, 208], [[20, 3, 2]]],
  ["move.l (a0)+,(a0)+", [32, 216], [[20, 3, 2]]],
  ["move.l -(a0),(a0)+", [32, 224], [[22, 3, 2]]],
  ["move.l i16(a0),(a0)+", [32, 232, 127, 254], [[24, 4, 2]]],
  ["move.l *+i16(pc),(a0)+", [32, 250, 127, 252], [[24, 4, 2]]],
  ["move.l i8(a0,d0.w),(a0)+", [32, 240, 0, 126], [[26, 4, 2]]],
  ["move.l i8(a0,a0.w),(a0)+", [32, 240, 128, 126], [[26, 4, 2]]],
  ["move.l i8(a0,d0.l),(a0)+", [32, 240, 8, 126], [[26, 4, 2]]],
  ["move.l i8(a0,a0.l),(a0)+", [32, 240, 136, 126], [[26, 4, 2]]],
  ["move.l *+i8(pc,d0.w),(a0)+", [32, 251, 0, 124], [[26, 4, 2]]],
  ["move.l *+i8(pc,a0.w),(a0)+", [32, 251, 128, 124], [[26, 4, 2]]],
  ["move.l *+i8(pc,d0.l),(a0)+", [32, 251, 8, 124], [[26, 4, 2]]],
  ["move.l *+i8(pc,a0.l),(a0)+", [32, 251, 136, 124], [[26, 4, 2]]],
  ["move.l (xxx).w,(a0)+", [32, 248, 2, 0], [[24, 4, 2]]],
  ["move.l (xxx).l,(a0)+", [32, 249, 0, 0, 2, 0], [[28, 5, 2]]],
  ["move.l #i32,(a0)+", [32, 252, 0, 0, 0, 72], [[20, 3, 2]]],
  ["move.b d0,-(a0)", [17, 0], [[8, 1, 1]]],
  ["move.b (a0),-(a0)", [17, 16], [[12, 2, 1]]],
  ["move.b (a0)+,-(a0)", [17, 24], [[12, 2, 1]]],
  ["move.b -(a0),-(a0)", [17, 32], [[14, 2, 1]]],
  ["move.b i16(a0),-(a0)", [17, 40, 127, 254], [[16, 3, 1]]],
  ["move.b *+i16(pc),-(a0)", [17, 58, 127, 252], [[16, 3, 1]]],
  ["move.b i8(a0,d0.w),-(a0)", [17, 48, 0, 126], [[18, 3, 1]]],
  ["move.b i8(a0,a0.w),-(a0)", [17, 48, 128, 126], [[18, 3, 1]]],
  ["move.b i8(a0,d0.l),-(a0)", [17, 48, 8, 126], [[18, 3, 1]]],
  ["move.b i8(a0,a0.l),-(a0)", [17, 48, 136, 126], [[18, 3, 1]]],
  ["move.b *+i8(pc,d0.w),-(a0)", [17, 59, 0, 124], [[18, 3, 1]]],
  ["move.b *+i8(pc,a0.w),-(a0)", [17, 59, 128, 124], [[18, 3, 1]]],
  ["move.b *+i8(pc,d0.l),-(a0)", [17, 59, 8, 124], [[18, 3, 1]]],
  ["move.b *+i8(pc,a0.l),-(a0)", [17, 59, 136, 124], [[18, 3, 1]]],
  ["move.b (xxx).w,-(a0)", [17, 56, 2, 0], [[16, 3, 1]]],
  ["move.b (xxx).l,-(a0)", [17, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.b #i8,-(a0)", [17, 60, 0, 126], [[12, 2, 1]]],
  ["move.w d0,-(a0)", [49, 0], [[8, 1, 1]]],
  ["move.w a0,-(a0)", [49, 8], [[8, 1, 1]]],
  ["move.w (a0),-(a0)", [49, 16], [[12, 2, 1]]],
  ["move.w (a0)+,-(a0)", [49, 24], [[12, 2, 1]]],
  ["move.w -(a0),-(a0)", [49, 32], [[14, 2, 1]]],
  ["move.w i16(a0),-(a0)", [49, 40, 127, 254], [[16, 3, 1]]],
  ["move.w *+i16(pc),-(a0)", [49, 58, 127, 252], [[16, 3, 1]]],
  ["move.w i8(a0,d0.w),-(a0)", [49, 48, 0, 126], [[18, 3, 1]]],
  ["move.w i8(a0,a0.w),-(a0)", [49, 48, 128, 126], [[18, 3, 1]]],
  ["move.w i8(a0,d0.l),-(a0)", [49, 48, 8, 126], [[18, 3, 1]]],
  ["move.w i8(a0,a0.l),-(a0)", [49, 48, 136, 126], [[18, 3, 1]]],
  ["move.w *+i8(pc,d0.w),-(a0)", [49, 59, 0, 124], [[18, 3, 1]]],
  ["move.w *+i8(pc,a0.w),-(a0)", [49, 59, 128, 124], [[18, 3, 1]]],
  ["move.w *+i8(pc,d0.l),-(a0)", [49, 59, 8, 124], [[18, 3, 1]]],
  ["move.w *+i8(pc,a0.l),-(a0)", [49, 59, 136, 124], [[18, 3, 1]]],
  ["move.w (xxx).w,-(a0)", [49, 56, 2, 0], [[16, 3, 1]]],
  ["move.w (xxx).l,-(a0)", [49, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.w #i16,-(a0)", [49, 60, 127, 254], [[12, 2, 1]]],
  ["move.l d0,-(a0)", [33, 0], [[12, 1, 2]]],
  ["move.l a0,-(a0)", [33, 8], [[12, 1, 2]]],
  ["move.l (a0),-(a0)", [33, 16], [[20, 3, 2]]],
  ["move.l (a0)+,-(a0)", [33, 24], [[20, 3, 2]]],
  ["move.l -(a0),-(a0)", [33, 32], [[22, 3, 2]]],
  ["move.l i16(a0),-(a0)", [33, 40, 127, 254], [[24, 4, 2]]],
  ["move.l *+i16(pc),-(a0)", [33, 58, 127, 252], [[24, 4, 2]]],
  ["move.l i8(a0,d0.w),-(a0)", [33, 48, 0, 126], [[26, 4, 2]]],
  ["move.l i8(a0,a0.w),-(a0)", [33, 48, 128, 126], [[26, 4, 2]]],
  ["move.l i8(a0,d0.l),-(a0)", [33, 48, 8, 126], [[26, 4, 2]]],
  ["move.l i8(a0,a0.l),-(a0)", [33, 48, 136, 126], [[26, 4, 2]]],
  ["move.l *+i8(pc,d0.w),-(a0)", [33, 59, 0, 124], [[26, 4, 2]]],
  ["move.l *+i8(pc,a0.w),-(a0)", [33, 59, 128, 124], [[26, 4, 2]]],
  ["move.l *+i8(pc,d0.l),-(a0)", [33, 59, 8, 124], [[26, 4, 2]]],
  ["move.l *+i8(pc,a0.l),-(a0)", [33, 59, 136, 124], [[26, 4, 2]]],
  ["move.l (xxx).w,-(a0)", [33, 56, 2, 0], [[24, 4, 2]]],
  ["move.l (xxx).l,-(a0)", [33, 57, 0, 0, 2, 0], [[28, 5, 2]]],
  ["move.l #i32,-(a0)", [33, 60, 0, 0, 0, 72], [[20, 3, 2]]],
  ["move.b d0,i16(a0)", [17, 64, 127, 254], [[12, 2, 1]]],
  ["move.b (a0),i16(a0)", [17, 80, 127, 254], [[16, 3, 1]]],
  ["move.b (a0)+,i16(a0)", [17, 88, 127, 254], [[16, 3, 1]]],
  ["move.b -(a0),i16(a0)", [17, 96, 127, 254], [[18, 3, 1]]],
  ["move.b i16(a0),i16(a0)", [17, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["move.b *+i16(pc),i16(a0)", [17, 122, 127, 252, 127, 254], [[20, 4, 1]]],
  ["move.b i8(a0,d0.w),i16(a0)", [17, 112, 0, 126, 127, 254], [[22, 4, 1]]],
  ["move.b i8(a0,a0.w),i16(a0)", [17, 112, 128, 126, 127, 254], [[22, 4, 1]]],
  ["move.b i8(a0,d0.l),i16(a0)", [17, 112, 8, 126, 127, 254], [[22, 4, 1]]],
  ["move.b i8(a0,a0.l),i16(a0)", [17, 112, 136, 126, 127, 254], [[22, 4, 1]]],
  ["move.b *+i8(pc,d0.w),i16(a0)", [17, 123, 0, 124, 127, 254], [[22, 4, 1]]],
  ["move.b *+i8(pc,a0.w),i16(a0)", [17, 123, 128, 124, 127, 254], [[22, 4, 1]]],
  ["move.b *+i8(pc,d0.l),i16(a0)", [17, 123, 8, 124, 127, 254], [[22, 4, 1]]],
  ["move.b *+i8(pc,a0.l),i16(a0)", [17, 123, 136, 124, 127, 254], [[22, 4, 1]]],
  ["move.b (xxx).w,i16(a0)", [17, 120, 2, 0, 127, 254], [[20, 4, 1]]],
  ["move.b (xxx).l,i16(a0)", [17, 121, 0, 0, 2, 0, 127, 254], [[24, 5, 1]]],
  ["move.b #i8,i16(a0)", [17, 124, 0, 126, 127, 254], [[16, 3, 1]]],
  ["move.w d0,i16(a0)", [49, 64, 127, 254], [[12, 2, 1]]],
  ["move.w a0,i16(a0)", [49, 72, 127, 254], [[12, 2, 1]]],
  ["move.w (a0),i16(a0)", [49, 80, 127, 254], [[16, 3, 1]]],
  ["move.w (a0)+,i16(a0)", [49, 88, 127, 254], [[16, 3, 1]]],
  ["move.w -(a0),i16(a0)", [49, 96, 127, 254], [[18, 3, 1]]],
  ["move.w i16(a0),i16(a0)", [49, 104, 127, 254, 127, 254], [[20, 4, 1]]],
  ["move.w *+i16(pc),i16(a0)", [49, 122, 127, 252, 127, 254], [[20, 4, 1]]],
  ["move.w i8(a0,d0.w),i16(a0)", [49, 112, 0, 126, 127, 254], [[22, 4, 1]]],
  ["move.w i8(a0,a0.w),i16(a0)", [49, 112, 128, 126, 127, 254], [[22, 4, 1]]],
  ["move.w i8(a0,d0.l),i16(a0)", [49, 112, 8, 126, 127, 254], [[22, 4, 1]]],
  ["move.w i8(a0,a0.l),i16(a0)", [49, 112, 136, 126, 127, 254], [[22, 4, 1]]],
  ["move.w *+i8(pc,d0.w),i16(a0)", [49, 123, 0, 124, 127, 254], [[22, 4, 1]]],
  ["move.w *+i8(pc,a0.w),i16(a0)", [49, 123, 128, 124, 127, 254], [[22, 4, 1]]],
  ["move.w *+i8(pc,d0.l),i16(a0)", [49, 123, 8, 124, 127, 254], [[22, 4, 1]]],
  ["move.w *+i8(pc,a0.l),i16(a0)", [49, 123, 136, 124, 127, 254], [[22, 4, 1]]],
  ["move.w (xxx).w,i16(a0)", [49, 120, 2, 0, 127, 254], [[20, 4, 1]]],
  ["move.w (xxx).l,i16(a0)", [49, 121, 0, 0, 2, 0, 127, 254], [[24, 5, 1]]],
  ["move.w #i16,i16(a0)", [49, 124, 127, 254, 127, 254], [[16, 3, 1]]],
  ["move.l d0,i16(a0)", [33, 64, 127, 254], [[16, 2, 2]]],
  ["move.l a0,i16(a0)", [33, 72, 127, 254], [[16, 2, 2]]],
  ["move.l (a0),i16(a0)", [33, 80, 127, 254], [[24, 4, 2]]],
  ["move.l (a0)+,i16(a0)", [33, 88, 127, 254], [[24, 4, 2]]],
  ["move.l -(a0),i16(a0)", [33, 96, 127, 254], [[26, 4, 2]]],
  ["move.l i16(a0),i16(a0)", [33, 104, 127, 254, 127, 254], [[28, 5, 2]]],
  ["move.l *+i16(pc),i16(a0)", [33, 122, 127, 252, 127, 254], [[28, 5, 2]]],
  ["move.l i8(a0,d0.w),i16(a0)", [33, 112, 0, 126, 127, 254], [[30, 5, 2]]],
  ["move.l i8(a0,a0.w),i16(a0)", [33, 112, 128, 126, 127, 254], [[30, 5, 2]]],
  ["move.l i8(a0,d0.l),i16(a0)", [33, 112, 8, 126, 127, 254], [[30, 5, 2]]],
  ["move.l i8(a0,a0.l),i16(a0)", [33, 112, 136, 126, 127, 254], [[30, 5, 2]]],
  ["move.l *+i8(pc,d0.w),i16(a0)", [33, 123, 0, 124, 127, 254], [[30, 5, 2]]],
  ["move.l *+i8(pc,a0.w),i16(a0)", [33, 123, 128, 124, 127, 254], [[30, 5, 2]]],
  ["move.l *+i8(pc,d0.l),i16(a0)", [33, 123, 8, 124, 127, 254], [[30, 5, 2]]],
  ["move.l *+i8(pc,a0.l),i16(a0)", [33, 123, 136, 124, 127, 254], [[30, 5, 2]]],
  ["move.l (xxx).w,i16(a0)", [33, 120, 2, 0, 127, 254], [[28, 5, 2]]],
  ["move.l (xxx).l,i16(a0)", [33, 121, 0, 0, 2, 0, 127, 254], [[32, 6, 2]]],
  ["move.l #i32,i16(a0)", [33, 124, 0, 0, 0, 72, 127, 254], [[24, 4, 2]]],
  ["move.b d0,i8(a0,d0.w)", [17, 128, 0, 126], [[14, 2, 1]]],
  ["move.b d0,i8(a0,a0.w)", [17, 128, 128, 126], [[14, 2, 1]]],
  ["move.b d0,i8(a0,d0.l)", [17, 128, 8, 126], [[14, 2, 1]]],
  ["move.b d0,i8(a0,a0.l)", [17, 128, 136, 126], [[14, 2, 1]]],
  ["move.b (a0),i8(a0,d0.w)", [17, 144, 0, 126], [[18, 3, 1]]],
  ["move.b (a0),i8(a0,a0.w)", [17, 144, 128, 126], [[18, 3, 1]]],
  ["move.b (a0),i8(a0,d0.l)", [17, 144, 8, 126], [[18, 3, 1]]],
  ["move.b (a0),i8(a0,a0.l)", [17, 144, 136, 126], [[18, 3, 1]]],
  ["move.b (a0)+,i8(a0,d0.w)", [17, 152, 0, 126], [[18, 3, 1]]],
  ["move.b (a0)+,i8(a0,a0.w)", [17, 152, 128, 126], [[18, 3, 1]]],
  ["move.b (a0)+,i8(a0,d0.l)", [17, 152, 8, 126], [[18, 3, 1]]],
  ["move.b (a0)+,i8(a0,a0.l)", [17, 152, 136, 126], [[18, 3, 1]]],
  ["move.b -(a0),i8(a0,d0.w)", [17, 160, 0, 126], [[20, 3, 1]]],
  ["move.b -(a0),i8(a0,a0.w)", [17, 160, 128, 126], [[20, 3, 1]]],
  ["move.b -(a0),i8(a0,d0.l)", [17, 160, 8, 126], [[20, 3, 1]]],
  ["move.b -(a0),i8(a0,a0.l)", [17, 160, 136, 126], [[20, 3, 1]]],
  ["move.b i16(a0),i8(a0,d0.w)", [17, 168, 127, 254, 0, 126], [[22, 4, 1]]],
  ["move.b i16(a0),i8(a0,a0.w)", [17, 168, 127, 254, 128, 126], [[22, 4, 1]]],
  ["move.b i16(a0),i8(a0,d0.l)", [17, 168, 127, 254, 8, 126], [[22, 4, 1]]],
  ["move.b i16(a0),i8(a0,a0.l)", [17, 168, 127, 254, 136, 126], [[22, 4, 1]]],
  ["move.b *+i16(pc),i8(a0,d0.w)", [17, 186, 127, 252, 0, 126], [[22, 4, 1]]],
  ["move.b *+i16(pc),i8(a0,a0.w)", [17, 186, 127, 252, 128, 126], [[22, 4, 1]]],
  ["move.b *+i16(pc),i8(a0,d0.l)", [17, 186, 127, 252, 8, 126], [[22, 4, 1]]],
  ["move.b *+i16(pc),i8(a0,a0.l)", [17, 186, 127, 252, 136, 126], [[22, 4, 1]]],
  ["move.b i8(a0,d0.w),i8(a0,d0.w)", [17, 176, 0, 126, 0, 126], [[24, 4, 1]]],
  ["move.b i8(a0,a0.w),i8(a0,d0.w)", [17, 176, 128, 126, 0, 126], [[24, 4, 1]]],
  ["move.b i8(a0,d0.w),i8(a0,a0.w)", [17, 176, 0, 126, 128, 126], [[24, 4, 1]]],
  ["move.b i8(a0,a0.w),i8(a0,a0.w)", [17, 176, 128, 126, 128, 126], [[24, 4, 1]]],
  ["move.b i8(a0,d0.l),i8(a0,d0.w)", [17, 176, 8, 126, 0, 126], [[24, 4, 1]]],
  ["move.b i8(a0,a0.l),i8(a0,d0.w)", [17, 176, 136, 126, 0, 126], [[24, 4, 1]]],
  ["move.b i8(a0,d0.l),i8(a0,a0.w)", [17, 176, 8, 126, 128, 126], [[24, 4, 1]]],
  ["move.b i8(a0,a0.l),i8(a0,a0.w)", [17, 176, 136, 126, 128, 126], [[24, 4, 1]]],
  ["move.b i8(a0,d0.w),i8(a0,d0.l)", [17, 176, 0, 126, 8, 126], [[24, 4, 1]]],
  ["move.b i8(a0,a0.w),i8(a0,d0.l)", [17, 176, 128, 126, 8, 126], [[24, 4, 1]]],
  ["move.b i8(a0,d0.w),i8(a0,a0.l)", [17, 176, 0, 126, 136, 126], [[24, 4, 1]]],
  ["move.b i8(a0,a0.w),i8(a0,a0.l)", [17, 176, 128, 126, 136, 126], [[24, 4, 1]]],
  ["move.b i8(a0,d0.l),i8(a0,d0.l)", [17, 176, 8, 126, 8, 126], [[24, 4, 1]]],
  ["move.b i8(a0,a0.l),i8(a0,d0.l)", [17, 176, 136, 126, 8, 126], [[24, 4, 1]]],
  ["move.b i8(a0,d0.l),i8(a0,a0.l)", [17, 176, 8, 126, 136, 126], [[24, 4, 1]]],
  ["move.b i8(a0,a0.l),i8(a0,a0.l)", [17, 176, 136, 126, 136, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,d0.w),i8(a0,d0.w)", [17, 187, 0, 124, 0, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,a0.w),i8(a0,d0.w)", [17, 187, 128, 124, 0, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,d0.w),i8(a0,a0.w)", [17, 187, 0, 124, 128, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,a0.w),i8(a0,a0.w)", [17, 187, 128, 124, 128, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,d0.l),i8(a0,d0.w)", [17, 187, 8, 124, 0, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,a0.l),i8(a0,d0.w)", [17, 187, 136, 124, 0, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,d0.l),i8(a0,a0.w)", [17, 187, 8, 124, 128, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,a0.l),i8(a0,a0.w)", [17, 187, 136, 124, 128, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,d0.w),i8(a0,d0.l)", [17, 187, 0, 124, 8, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,a0.w),i8(a0,d0.l)", [17, 187, 128, 124, 8, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,d0.w),i8(a0,a0.l)", [17, 187, 0, 124, 136, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,a0.w),i8(a0,a0.l)", [17, 187, 128, 124, 136, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,d0.l),i8(a0,d0.l)", [17, 187, 8, 124, 8, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,a0.l),i8(a0,d0.l)", [17, 187, 136, 124, 8, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,d0.l),i8(a0,a0.l)", [17, 187, 8, 124, 136, 126], [[24, 4, 1]]],
  ["move.b *+i8(pc,a0.l),i8(a0,a0.l)", [17, 187, 136, 124, 136, 126], [[24, 4, 1]]],
  ["move.b (xxx).w,i8(a0,d0.w)", [17, 184, 2, 0, 0, 126], [[22, 4, 1]]],
  ["move.b (xxx).w,i8(a0,a0.w)", [17, 184, 2, 0, 128, 126], [[22, 4, 1]]],
  ["move.b (xxx).w,i8(a0,d0.l)", [17, 184, 2, 0, 8, 126], [[22, 4, 1]]],
  ["move.b (xxx).w,i8(a0,a0.l)", [17, 184, 2, 0, 136, 126], [[22, 4, 1]]],
  ["move.b (xxx).l,i8(a0,d0.w)", [17, 185, 0, 0, 2, 0, 0, 126], [[26, 5, 1]]],
  ["move.b (xxx).l,i8(a0,a0.w)", [17, 185, 0, 0, 2, 0, 128, 126], [[26, 5, 1]]],
  ["move.b (xxx).l,i8(a0,d0.l)", [17, 185, 0, 0, 2, 0, 8, 126], [[26, 5, 1]]],
  ["move.b (xxx).l,i8(a0,a0.l)", [17, 185, 0, 0, 2, 0, 136, 126], [[26, 5, 1]]],
  ["move.b #i8,i8(a0,d0.w)", [17, 188, 0, 126, 0, 126], [[18, 3, 1]]],
  ["move.b #i8,i8(a0,a0.w)", [17, 188, 0, 126, 128, 126], [[18, 3, 1]]],
  ["move.b #i8,i8(a0,d0.l)", [17, 188, 0, 126, 8, 126], [[18, 3, 1]]],
  ["move.b #i8,i8(a0,a0.l)", [17, 188, 0, 126, 136, 126], [[18, 3, 1]]],
  ["move.w d0,i8(a0,d0.w)", [49, 128, 0, 126], [[14, 2, 1]]],
  ["move.w d0,i8(a0,a0.w)", [49, 128, 128, 126], [[14, 2, 1]]],
  ["move.w d0,i8(a0,d0.l)", [49, 128, 8, 126], [[14, 2, 1]]],
  ["move.w d0,i8(a0,a0.l)", [49, 128, 136, 126], [[14, 2, 1]]],
  ["move.w a0,i8(a0,d0.w)", [49, 136, 0, 126], [[14, 2, 1]]],
  ["move.w a0,i8(a0,a0.w)", [49, 136, 128, 126], [[14, 2, 1]]],
  ["move.w a0,i8(a0,d0.l)", [49, 136, 8, 126], [[14, 2, 1]]],
  ["move.w a0,i8(a0,a0.l)", [49, 136, 136, 126], [[14, 2, 1]]],
  ["move.w (a0),i8(a0,d0.w)", [49, 144, 0, 126], [[18, 3, 1]]],
  ["move.w (a0),i8(a0,a0.w)", [49, 144, 128, 126], [[18, 3, 1]]],
  ["move.w (a0),i8(a0,d0.l)", [49, 144, 8, 126], [[18, 3, 1]]],
  ["move.w (a0),i8(a0,a0.l)", [49, 144, 136, 126], [[18, 3, 1]]],
  ["move.w (a0)+,i8(a0,d0.w)", [49, 152, 0, 126], [[18, 3, 1]]],
  ["move.w (a0)+,i8(a0,a0.w)", [49, 152, 128, 126], [[18, 3, 1]]],
  ["move.w (a0)+,i8(a0,d0.l)", [49, 152, 8, 126], [[18, 3, 1]]],
  ["move.w (a0)+,i8(a0,a0.l)", [49, 152, 136, 126], [[18, 3, 1]]],
  ["move.w -(a0),i8(a0,d0.w)", [49, 160, 0, 126], [[20, 3, 1]]],
  ["move.w -(a0),i8(a0,a0.w)", [49, 160, 128, 126], [[20, 3, 1]]],
  ["move.w -(a0),i8(a0,d0.l)", [49, 160, 8, 126], [[20, 3, 1]]],
  ["move.w -(a0),i8(a0,a0.l)", [49, 160, 136, 126], [[20, 3, 1]]],
  ["move.w i16(a0),i8(a0,d0.w)", [49, 168, 127, 254, 0, 126], [[22, 4, 1]]],
  ["move.w i16(a0),i8(a0,a0.w)", [49, 168, 127, 254, 128, 126], [[22, 4, 1]]],
  ["move.w i16(a0),i8(a0,d0.l)", [49, 168, 127, 254, 8, 126], [[22, 4, 1]]],
  ["move.w i16(a0),i8(a0,a0.l)", [49, 168, 127, 254, 136, 126], [[22, 4, 1]]],
  ["move.w *+i16(pc),i8(a0,d0.w)", [49, 186, 127, 252, 0, 126], [[22, 4, 1]]],
  ["move.w *+i16(pc),i8(a0,a0.w)", [49, 186, 127, 252, 128, 126], [[22, 4, 1]]],
  ["move.w *+i16(pc),i8(a0,d0.l)", [49, 186, 127, 252, 8, 126], [[22, 4, 1]]],
  ["move.w *+i16(pc),i8(a0,a0.l)", [49, 186, 127, 252, 136, 126], [[22, 4, 1]]],
  ["move.w i8(a0,d0.w),i8(a0,d0.w)", [49, 176, 0, 126, 0, 126], [[24, 4, 1]]],
  ["move.w i8(a0,a0.w),i8(a0,d0.w)", [49, 176, 128, 126, 0, 126], [[24, 4, 1]]],
  ["move.w i8(a0,d0.w),i8(a0,a0.w)", [49, 176, 0, 126, 128, 126], [[24, 4, 1]]],
  ["move.w i8(a0,a0.w),i8(a0,a0.w)", [49, 176, 128, 126, 128, 126], [[24, 4, 1]]],
  ["move.w i8(a0,d0.l),i8(a0,d0.w)", [49, 176, 8, 126, 0, 126], [[24, 4, 1]]],
  ["move.w i8(a0,a0.l),i8(a0,d0.w)", [49, 176, 136, 126, 0, 126], [[24, 4, 1]]],
  ["move.w i8(a0,d0.l),i8(a0,a0.w)", [49, 176, 8, 126, 128, 126], [[24, 4, 1]]],
  ["move.w i8(a0,a0.l),i8(a0,a0.w)", [49, 176, 136, 126, 128, 126], [[24, 4, 1]]],
  ["move.w i8(a0,d0.w),i8(a0,d0.l)", [49, 176, 0, 126, 8, 126], [[24, 4, 1]]],
  ["move.w i8(a0,a0.w),i8(a0,d0.l)", [49, 176, 128, 126, 8, 126], [[24, 4, 1]]],
  ["move.w i8(a0,d0.w),i8(a0,a0.l)", [49, 176, 0, 126, 136, 126], [[24, 4, 1]]],
  ["move.w i8(a0,a0.w),i8(a0,a0.l)", [49, 176, 128, 126, 136, 126], [[24, 4, 1]]],
  ["move.w i8(a0,d0.l),i8(a0,d0.l)", [49, 176, 8, 126, 8, 126], [[24, 4, 1]]],
  ["move.w i8(a0,a0.l),i8(a0,d0.l)", [49, 176, 136, 126, 8, 126], [[24, 4, 1]]],
  ["move.w i8(a0,d0.l),i8(a0,a0.l)", [49, 176, 8, 126, 136, 126], [[24, 4, 1]]],
  ["move.w i8(a0,a0.l),i8(a0,a0.l)", [49, 176, 136, 126, 136, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,d0.w),i8(a0,d0.w)", [49, 187, 0, 124, 0, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,a0.w),i8(a0,d0.w)", [49, 187, 128, 124, 0, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,d0.w),i8(a0,a0.w)", [49, 187, 0, 124, 128, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,a0.w),i8(a0,a0.w)", [49, 187, 128, 124, 128, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,d0.l),i8(a0,d0.w)", [49, 187, 8, 124, 0, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,a0.l),i8(a0,d0.w)", [49, 187, 136, 124, 0, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,d0.l),i8(a0,a0.w)", [49, 187, 8, 124, 128, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,a0.l),i8(a0,a0.w)", [49, 187, 136, 124, 128, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,d0.w),i8(a0,d0.l)", [49, 187, 0, 124, 8, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,a0.w),i8(a0,d0.l)", [49, 187, 128, 124, 8, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,d0.w),i8(a0,a0.l)", [49, 187, 0, 124, 136, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,a0.w),i8(a0,a0.l)", [49, 187, 128, 124, 136, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,d0.l),i8(a0,d0.l)", [49, 187, 8, 124, 8, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,a0.l),i8(a0,d0.l)", [49, 187, 136, 124, 8, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,d0.l),i8(a0,a0.l)", [49, 187, 8, 124, 136, 126], [[24, 4, 1]]],
  ["move.w *+i8(pc,a0.l),i8(a0,a0.l)", [49, 187, 136, 124, 136, 126], [[24, 4, 1]]],
  ["move.w (xxx).w,i8(a0,d0.w)", [49, 184, 2, 0, 0, 126], [[22, 4, 1]]],
  ["move.w (xxx).w,i8(a0,a0.w)", [49, 184, 2, 0, 128, 126], [[22, 4, 1]]],
  ["move.w (xxx).w,i8(a0,d0.l)", [49, 184, 2, 0, 8, 126], [[22, 4, 1]]],
  ["move.w (xxx).w,i8(a0,a0.l)", [49, 184, 2, 0, 136, 126], [[22, 4, 1]]],
  ["move.w (xxx).l,i8(a0,d0.w)", [49, 185, 0, 0, 2, 0, 0, 126], [[26, 5, 1]]],
  ["move.w (xxx).l,i8(a0,a0.w)", [49, 185, 0, 0, 2, 0, 128, 126], [[26, 5, 1]]],
  ["move.w (xxx).l,i8(a0,d0.l)", [49, 185, 0, 0, 2, 0, 8, 126], [[26, 5, 1]]],
  ["move.w (xxx).l,i8(a0,a0.l)", [49, 185, 0, 0, 2, 0, 136, 126], [[26, 5, 1]]],
  ["move.w #i16,i8(a0,d0.w)", [49, 188, 127, 254, 0, 126], [[18, 3, 1]]],
  ["move.w #i16,i8(a0,a0.w)", [49, 188, 127, 254, 128, 126], [[18, 3, 1]]],
  ["move.w #i16,i8(a0,d0.l)", [49, 188, 127, 254, 8, 126], [[18, 3, 1]]],
  ["move.w #i16,i8(a0,a0.l)", [49, 188, 127, 254, 136, 126], [[18, 3, 1]]],
  ["move.l d0,i8(a0,d0.w)", [33, 128, 0, 126], [[18, 2, 2]]],
  ["move.l d0,i8(a0,a0.w)", [33, 128, 128, 126], [[18, 2, 2]]],
  ["move.l d0,i8(a0,d0.l)", [33, 128, 8, 126], [[18, 2, 2]]],
  ["move.l d0,i8(a0,a0.l)", [33, 128, 136, 126], [[18, 2, 2]]],
  ["move.l a0,i8(a0,d0.w)", [33, 136, 0, 126], [[18, 2, 2]]],
  ["move.l a0,i8(a0,a0.w)", [33, 136, 128, 126], [[18, 2, 2]]],
  ["move.l a0,i8(a0,d0.l)", [33, 136, 8, 126], [[18, 2, 2]]],
  ["move.l a0,i8(a0,a0.l)", [33, 136, 136, 126], [[18, 2, 2]]],
  ["move.l (a0),i8(a0,d0.w)", [33, 144, 0, 126], [[26, 4, 2]]],
  ["move.l (a0),i8(a0,a0.w)", [33, 144, 128, 126], [[26, 4, 2]]],
  ["move.l (a0),i8(a0,d0.l)", [33, 144, 8, 126], [[26, 4, 2]]],
  ["move.l (a0),i8(a0,a0.l)", [33, 144, 136, 126], [[26, 4, 2]]],
  ["move.l (a0)+,i8(a0,d0.w)", [33, 152, 0, 126], [[26, 4, 2]]],
  ["move.l (a0)+,i8(a0,a0.w)", [33, 152, 128, 126], [[26, 4, 2]]],
  ["move.l (a0)+,i8(a0,d0.l)", [33, 152, 8, 126], [[26, 4, 2]]],
  ["move.l (a0)+,i8(a0,a0.l)", [33, 152, 136, 126], [[26, 4, 2]]],
  ["move.l -(a0),i8(a0,d0.w)", [33, 160, 0, 126], [[28, 4, 2]]],
  ["move.l -(a0),i8(a0,a0.w)", [33, 160, 128, 126], [[28, 4, 2]]],
  ["move.l -(a0),i8(a0,d0.l)", [33, 160, 8, 126], [[28, 4, 2]]],
  ["move.l -(a0),i8(a0,a0.l)", [33, 160, 136, 126], [[28, 4, 2]]],
  ["move.l i16(a0),i8(a0,d0.w)", [33, 168, 127, 254, 0, 126], [[30, 5, 2]]],
  ["move.l i16(a0),i8(a0,a0.w)", [33, 168, 127, 254, 128, 126], [[30, 5, 2]]],
  ["move.l i16(a0),i8(a0,d0.l)", [33, 168, 127, 254, 8, 126], [[30, 5, 2]]],
  ["move.l i16(a0),i8(a0,a0.l)", [33, 168, 127, 254, 136, 126], [[30, 5, 2]]],
  ["move.l *+i16(pc),i8(a0,d0.w)", [33, 186, 127, 252, 0, 126], [[30, 5, 2]]],
  ["move.l *+i16(pc),i8(a0,a0.w)", [33, 186, 127, 252, 128, 126], [[30, 5, 2]]],
  ["move.l *+i16(pc),i8(a0,d0.l)", [33, 186, 127, 252, 8, 126], [[30, 5, 2]]],
  ["move.l *+i16(pc),i8(a0,a0.l)", [33, 186, 127, 252, 136, 126], [[30, 5, 2]]],
  ["move.l i8(a0,d0.w),i8(a0,d0.w)", [33, 176, 0, 126, 0, 126], [[32, 5, 2]]],
  ["move.l i8(a0,a0.w),i8(a0,d0.w)", [33, 176, 128, 126, 0, 126], [[32, 5, 2]]],
  ["move.l i8(a0,d0.w),i8(a0,a0.w)", [33, 176, 0, 126, 128, 126], [[32, 5, 2]]],
  ["move.l i8(a0,a0.w),i8(a0,a0.w)", [33, 176, 128, 126, 128, 126], [[32, 5, 2]]],
  ["move.l i8(a0,d0.l),i8(a0,d0.w)", [33, 176, 8, 126, 0, 126], [[32, 5, 2]]],
  ["move.l i8(a0,a0.l),i8(a0,d0.w)", [33, 176, 136, 126, 0, 126], [[32, 5, 2]]],
  ["move.l i8(a0,d0.l),i8(a0,a0.w)", [33, 176, 8, 126, 128, 126], [[32, 5, 2]]],
  ["move.l i8(a0,a0.l),i8(a0,a0.w)", [33, 176, 136, 126, 128, 126], [[32, 5, 2]]],
  ["move.l i8(a0,d0.w),i8(a0,d0.l)", [33, 176, 0, 126, 8, 126], [[32, 5, 2]]],
  ["move.l i8(a0,a0.w),i8(a0,d0.l)", [33, 176, 128, 126, 8, 126], [[32, 5, 2]]],
  ["move.l i8(a0,d0.w),i8(a0,a0.l)", [33, 176, 0, 126, 136, 126], [[32, 5, 2]]],
  ["move.l i8(a0,a0.w),i8(a0,a0.l)", [33, 176, 128, 126, 136, 126], [[32, 5, 2]]],
  ["move.l i8(a0,d0.l),i8(a0,d0.l)", [33, 176, 8, 126, 8, 126], [[32, 5, 2]]],
  ["move.l i8(a0,a0.l),i8(a0,d0.l)", [33, 176, 136, 126, 8, 126], [[32, 5, 2]]],
  ["move.l i8(a0,d0.l),i8(a0,a0.l)", [33, 176, 8, 126, 136, 126], [[32, 5, 2]]],
  ["move.l i8(a0,a0.l),i8(a0,a0.l)", [33, 176, 136, 126, 136, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,d0.w),i8(a0,d0.w)", [33, 187, 0, 124, 0, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,a0.w),i8(a0,d0.w)", [33, 187, 128, 124, 0, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,d0.w),i8(a0,a0.w)", [33, 187, 0, 124, 128, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,a0.w),i8(a0,a0.w)", [33, 187, 128, 124, 128, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,d0.l),i8(a0,d0.w)", [33, 187, 8, 124, 0, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,a0.l),i8(a0,d0.w)", [33, 187, 136, 124, 0, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,d0.l),i8(a0,a0.w)", [33, 187, 8, 124, 128, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,a0.l),i8(a0,a0.w)", [33, 187, 136, 124, 128, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,d0.w),i8(a0,d0.l)", [33, 187, 0, 124, 8, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,a0.w),i8(a0,d0.l)", [33, 187, 128, 124, 8, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,d0.w),i8(a0,a0.l)", [33, 187, 0, 124, 136, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,a0.w),i8(a0,a0.l)", [33, 187, 128, 124, 136, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,d0.l),i8(a0,d0.l)", [33, 187, 8, 124, 8, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,a0.l),i8(a0,d0.l)", [33, 187, 136, 124, 8, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,d0.l),i8(a0,a0.l)", [33, 187, 8, 124, 136, 126], [[32, 5, 2]]],
  ["move.l *+i8(pc,a0.l),i8(a0,a0.l)", [33, 187, 136, 124, 136, 126], [[32, 5, 2]]],
  ["move.l (xxx).w,i8(a0,d0.w)", [33, 184, 2, 0, 0, 126], [[30, 5, 2]]],
  ["move.l (xxx).w,i8(a0,a0.w)", [33, 184, 2, 0, 128, 126], [[30, 5, 2]]],
  ["move.l (xxx).w,i8(a0,d0.l)", [33, 184, 2, 0, 8, 126], [[30, 5, 2]]],
  ["move.l (xxx).w,i8(a0,a0.l)", [33, 184, 2, 0, 136, 126], [[30, 5, 2]]],
  ["move.l (xxx).l,i8(a0,d0.w)", [33, 185, 0, 0, 2, 0, 0, 126], [[34, 6, 2]]],
  ["move.l (xxx).l,i8(a0,a0.w)", [33, 185, 0, 0, 2, 0, 128, 126], [[34, 6, 2]]],
  ["move.l (xxx).l,i8(a0,d0.l)", [33, 185, 0, 0, 2, 0, 8, 126], [[34, 6, 2]]],
  ["move.l (xxx).l,i8(a0,a0.l)", [33, 185, 0, 0, 2, 0, 136, 126], [[34, 6, 2]]],
  ["move.l #i32,i8(a0,d0.w)", [33, 188, 0, 0, 0, 72, 0, 126], [[26, 4, 2]]],
  ["move.l #i32,i8(a0,a0.w)", [33, 188, 0, 0, 0, 72, 128, 126], [[26, 4, 2]]],
  ["move.l #i32,i8(a0,d0.l)", [33, 188, 0, 0, 0, 72, 8, 126], [[26, 4, 2]]],
  ["move.l #i32,i8(a0,a0.l)", [33, 188, 0, 0, 0, 72, 136, 126], [[26, 4, 2]]],
  ["move.b d0,(xxx).w", [17, 192, 2, 0], [[12, 2, 1]]],
  ["move.b (a0),(xxx).w", [17, 208, 2, 0], [[16, 3, 1]]],
  ["move.b (a0)+,(xxx).w", [17, 216, 2, 0], [[16, 3, 1]]],
  ["move.b -(a0),(xxx).w", [17, 224, 2, 0], [[18, 3, 1]]],
  ["move.b i16(a0),(xxx).w", [17, 232, 127, 254, 2, 0], [[20, 4, 1]]],
  ["move.b *+i16(pc),(xxx).w", [17, 250, 127, 252, 2, 0], [[20, 4, 1]]],
  ["move.b i8(a0,d0.w),(xxx).w", [17, 240, 0, 126, 2, 0], [[22, 4, 1]]],
  ["move.b i8(a0,a0.w),(xxx).w", [17, 240, 128, 126, 2, 0], [[22, 4, 1]]],
  ["move.b i8(a0,d0.l),(xxx).w", [17, 240, 8, 126, 2, 0], [[22, 4, 1]]],
  ["move.b i8(a0,a0.l),(xxx).w", [17, 240, 136, 126, 2, 0], [[22, 4, 1]]],
  ["move.b *+i8(pc,d0.w),(xxx).w", [17, 251, 0, 124, 2, 0], [[22, 4, 1]]],
  ["move.b *+i8(pc,a0.w),(xxx).w", [17, 251, 128, 124, 2, 0], [[22, 4, 1]]],
  ["move.b *+i8(pc,d0.l),(xxx).w", [17, 251, 8, 124, 2, 0], [[22, 4, 1]]],
  ["move.b *+i8(pc,a0.l),(xxx).w", [17, 251, 136, 124, 2, 0], [[22, 4, 1]]],
  ["move.b (xxx).w,(xxx).w", [17, 248, 2, 0, 2, 0], [[20, 4, 1]]],
  ["move.b (xxx).l,(xxx).w", [17, 249, 0, 0, 2, 0, 2, 0], [[24, 5, 1]]],
  ["move.b #i8,(xxx).w", [17, 252, 0, 126, 2, 0], [[16, 3, 1]]],
  ["move.w d0,(xxx).w", [49, 192, 2, 0], [[12, 2, 1]]],
  ["move.w a0,(xxx).w", [49, 200, 2, 0], [[12, 2, 1]]],
  ["move.w (a0),(xxx).w", [49, 208, 2, 0], [[16, 3, 1]]],
  ["move.w (a0)+,(xxx).w", [49, 216, 2, 0], [[16, 3, 1]]],
  ["move.w -(a0),(xxx).w", [49, 224, 2, 0], [[18, 3, 1]]],
  ["move.w i16(a0),(xxx).w", [49, 232, 127, 254, 2, 0], [[20, 4, 1]]],
  ["move.w *+i16(pc),(xxx).w", [49, 250, 127, 252, 2, 0], [[20, 4, 1]]],
  ["move.w i8(a0,d0.w),(xxx).w", [49, 240, 0, 126, 2, 0], [[22, 4, 1]]],
  ["move.w i8(a0,a0.w),(xxx).w", [49, 240, 128, 126, 2, 0], [[22, 4, 1]]],
  ["move.w i8(a0,d0.l),(xxx).w", [49, 240, 8, 126, 2, 0], [[22, 4, 1]]],
  ["move.w i8(a0,a0.l),(xxx).w", [49, 240, 136, 126, 2, 0], [[22, 4, 1]]],
  ["move.w *+i8(pc,d0.w),(xxx).w", [49, 251, 0, 124, 2, 0], [[22, 4, 1]]],
  ["move.w *+i8(pc,a0.w),(xxx).w", [49, 251, 128, 124, 2, 0], [[22, 4, 1]]],
  ["move.w *+i8(pc,d0.l),(xxx).w", [49, 251, 8, 124, 2, 0], [[22, 4, 1]]],
  ["move.w *+i8(pc,a0.l),(xxx).w", [49, 251, 136, 124, 2, 0], [[22, 4, 1]]],
  ["move.w (xxx).w,(xxx).w", [49, 248, 2, 0, 2, 0], [[20, 4, 1]]],
  ["move.w (xxx).l,(xxx).w", [49, 249, 0, 0, 2, 0, 2, 0], [[24, 5, 1]]],
  ["move.w #i16,(xxx).w", [49, 252, 127, 254, 2, 0], [[16, 3, 1]]],
  ["move.l d0,(xxx).w", [33, 192, 2, 0], [[16, 2, 2]]],
  ["move.l a0,(xxx).w", [33, 200, 2, 0], [[16, 2, 2]]],
  ["move.l (a0),(xxx).w", [33, 208, 2, 0], [[24, 4, 2]]],
  ["move.l (a0)+,(xxx).w", [33, 216, 2, 0], [[24, 4, 2]]],
  ["move.l -(a0),(xxx).w", [33, 224, 2, 0], [[26, 4, 2]]],
  ["move.l i16(a0),(xxx).w", [33, 232, 127, 254, 2, 0], [[28, 5, 2]]],
  ["move.l *+i16(pc),(xxx).w", [33, 250, 127, 252, 2, 0], [[28, 5, 2]]],
  ["move.l i8(a0,d0.w),(xxx).w", [33, 240, 0, 126, 2, 0], [[30, 5, 2]]],
  ["move.l i8(a0,a0.w),(xxx).w", [33, 240, 128, 126, 2, 0], [[30, 5, 2]]],
  ["move.l i8(a0,d0.l),(xxx).w", [33, 240, 8, 126, 2, 0], [[30, 5, 2]]],
  ["move.l i8(a0,a0.l),(xxx).w", [33, 240, 136, 126, 2, 0], [[30, 5, 2]]],
  ["move.l *+i8(pc,d0.w),(xxx).w", [33, 251, 0, 124, 2, 0], [[30, 5, 2]]],
  ["move.l *+i8(pc,a0.w),(xxx).w", [33, 251, 128, 124, 2, 0], [[30, 5, 2]]],
  ["move.l *+i8(pc,d0.l),(xxx).w", [33, 251, 8, 124, 2, 0], [[30, 5, 2]]],
  ["move.l *+i8(pc,a0.l),(xxx).w", [33, 251, 136, 124, 2, 0], [[30, 5, 2]]],
  ["move.l (xxx).w,(xxx).w", [33, 248, 2, 0, 2, 0], [[28, 5, 2]]],
  ["move.l (xxx).l,(xxx).w", [33, 249, 0, 0, 2, 0, 2, 0], [[32, 6, 2]]],
  ["move.l #i32,(xxx).w", [33, 252, 0, 0, 0, 72, 2, 0], [[24, 4, 2]]],
  ["move.b d0,(xxx).l", [19, 192, 0, 0, 2, 0], [[16, 3, 1]]],
  ["move.b (a0),(xxx).l", [19, 208, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.b (a0)+,(xxx).l", [19, 216, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.b -(a0),(xxx).l", [19, 224, 0, 0, 2, 0], [[22, 4, 1]]],
  ["move.b i16(a0),(xxx).l", [19, 232, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["move.b *+i16(pc),(xxx).l", [19, 250, 127, 252, 0, 0, 2, 0], [[24, 5, 1]]],
  ["move.b i8(a0,d0.w),(xxx).l", [19, 240, 0, 126, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.b i8(a0,a0.w),(xxx).l", [19, 240, 128, 126, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.b i8(a0,d0.l),(xxx).l", [19, 240, 8, 126, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.b i8(a0,a0.l),(xxx).l", [19, 240, 136, 126, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.b *+i8(pc,d0.w),(xxx).l", [19, 251, 0, 124, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.b *+i8(pc,a0.w),(xxx).l", [19, 251, 128, 124, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.b *+i8(pc,d0.l),(xxx).l", [19, 251, 8, 124, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.b *+i8(pc,a0.l),(xxx).l", [19, 251, 136, 124, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.b (xxx).w,(xxx).l", [19, 248, 2, 0, 0, 0, 2, 0], [[24, 5, 1]]],
  ["move.b (xxx).l,(xxx).l", [19, 249, 0, 0, 2, 0, 0, 0, 2, 0], [[28, 6, 1]]],
  ["move.b #i8,(xxx).l", [19, 252, 0, 126, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.w d0,(xxx).l", [51, 192, 0, 0, 2, 0], [[16, 3, 1]]],
  ["move.w a0,(xxx).l", [51, 200, 0, 0, 2, 0], [[16, 3, 1]]],
  ["move.w (a0),(xxx).l", [51, 208, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.w (a0)+,(xxx).l", [51, 216, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.w -(a0),(xxx).l", [51, 224, 0, 0, 2, 0], [[22, 4, 1]]],
  ["move.w i16(a0),(xxx).l", [51, 232, 127, 254, 0, 0, 2, 0], [[24, 5, 1]]],
  ["move.w *+i16(pc),(xxx).l", [51, 250, 127, 252, 0, 0, 2, 0], [[24, 5, 1]]],
  ["move.w i8(a0,d0.w),(xxx).l", [51, 240, 0, 126, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.w i8(a0,a0.w),(xxx).l", [51, 240, 128, 126, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.w i8(a0,d0.l),(xxx).l", [51, 240, 8, 126, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.w i8(a0,a0.l),(xxx).l", [51, 240, 136, 126, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.w *+i8(pc,d0.w),(xxx).l", [51, 251, 0, 124, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.w *+i8(pc,a0.w),(xxx).l", [51, 251, 128, 124, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.w *+i8(pc,d0.l),(xxx).l", [51, 251, 8, 124, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.w *+i8(pc,a0.l),(xxx).l", [51, 251, 136, 124, 0, 0, 2, 0], [[26, 5, 1]]],
  ["move.w (xxx).w,(xxx).l", [51, 248, 2, 0, 0, 0, 2, 0], [[24, 5, 1]]],
  ["move.w (xxx).l,(xxx).l", [51, 249, 0, 0, 2, 0, 0, 0, 2, 0], [[28, 6, 1]]],
  ["move.w #i16,(xxx).l", [51, 252, 127, 254, 0, 0, 2, 0], [[20, 4, 1]]],
  ["move.l d0,(xxx).l", [35, 192, 0, 0, 2, 0], [[20, 3, 2]]],
  ["move.l a0,(xxx).l", [35, 200, 0, 0, 2, 0], [[20, 3, 2]]],
  ["move.l (a0),(xxx).l", [35, 208, 0, 0, 2, 0], [[28, 5, 2]]],
  ["move.l (a0)+,(xxx).l", [35, 216, 0, 0, 2, 0], [[28, 5, 2]]],
  ["move.l -(a0),(xxx).l", [35, 224, 0, 0, 2, 0], [[30, 5, 2]]],
  ["move.l i16(a0),(xxx).l", [35, 232, 127, 254, 0, 0, 2, 0], [[32, 6, 2]]],
  ["move.l *+i16(pc),(xxx).l", [35, 250, 127, 252, 0, 0, 2, 0], [[32, 6, 2]]],
  ["move.l i8(a0,d0.w),(xxx).l", [35, 240, 0, 126, 0, 0, 2, 0], [[34, 6, 2]]],
  ["move.l i8(a0,a0.w),(xxx).l", [35, 240, 128, 126, 0, 0, 2, 0], [[34, 6, 2]]],
  ["move.l i8(a0,d0.l),(xxx).l", [35, 240, 8, 126, 0, 0, 2, 0], [[34, 6, 2]]],
  ["move.l i8(a0,a0.l),(xxx).l", [35, 240, 136, 126, 0, 0, 2, 0], [[34, 6, 2]]],
  ["move.l *+i8(pc,d0.w),(xxx).l", [35, 251, 0, 124, 0, 0, 2, 0], [[34, 6, 2]]],
  ["move.l *+i8(pc,a0.w),(xxx).l", [35, 251, 128, 124, 0, 0, 2, 0], [[34, 6, 2]]],
  ["move.l *+i8(pc,d0.l),(xxx).l", [35, 251, 8, 124, 0, 0, 2, 0], [[34, 6, 2]]],
  ["move.l *+i8(pc,a0.l),(xxx).l", [35, 251, 136, 124, 0, 0, 2, 0], [[34, 6, 2]]],
  ["move.l (xxx).w,(xxx).l", [35, 248, 2, 0, 0, 0, 2, 0], [[32, 6, 2]]],
  ["move.l (xxx).l,(xxx).l", [35, 249, 0, 0, 2, 0, 0, 0, 2, 0], [[36, 7, 2]]],
  ["move.l #i32,(xxx).l", [35, 252, 0, 0, 0, 72, 0, 0, 2, 0], [[28, 5, 2]]],
  ["movea.w a0,a0", [48, 72], [[4, 1, 0]]],
  ["movea.w (a0),a0", [48, 80], [[8, 2, 0]]],
  ["movea.w (a0)+,a0", [48, 88], [[8, 2, 0]]],
  ["movea.w -(a0),a0", [48, 96], [[10, 2, 0]]],
  ["movea.w i16(a0),a0", [48, 104, 127, 254], [[12, 3, 0]]],
  ["movea.w *+i16(pc),a0", [48, 122, 127, 252], [[12, 3, 0]]],
  ["movea.w i8(a0,d0.w),a0", [48, 112, 0, 126], [[14, 3, 0]]],
  ["movea.w i8(a0,a0.w),a0", [48, 112, 128, 126], [[14, 3, 0]]],
  ["movea.w i8(a0,d0.l),a0", [48, 112, 8, 126], [[14, 3, 0]]],
  ["movea.w i8(a0,a0.l),a0", [48, 112, 136, 126], [[14, 3, 0]]],
  ["movea.w *+i8(pc,d0.w),a0", [48, 123, 0, 124], [[14, 3, 0]]],
  ["movea.w *+i8(pc,a0.w),a0", [48, 123, 128, 124], [[14, 3, 0]]],
  ["movea.w *+i8(pc,d0.l),a0", [48, 123, 8, 124], [[14, 3, 0]]],
  ["movea.w *+i8(pc,a0.l),a0", [48, 123, 136, 124], [[14, 3, 0]]],
  ["movea.w (xxx).w,a0", [48, 120, 2, 0], [[12, 3, 0]]],
  ["movea.w (xxx).l,a0", [48, 121, 0, 0, 2, 0], [[16, 4, 0]]],
  ["movea.w #i16,a0", [48, 124, 127, 254], [[8, 2, 0]]],
  ["movea.l a0,a0", [32, 72], [[4, 1, 0]]],
  ["movea.l (a0),a0", [32, 80], [[12, 3, 0]]],
  ["movea.l (a0)+,a0", [32, 88], [[12, 3, 0]]],
  ["movea.l -(a0),a0", [32, 96], [[14, 3, 0]]],
  ["movea.l i16(a0),a0", [32, 104, 127, 254], [[16, 4, 0]]],
  ["movea.l *+i16(pc),a0", [32, 122, 127, 252], [[16, 4, 0]]],
  ["movea.l i8(a0,d0.w),a0", [32, 112, 0, 126], [[18, 4, 0]]],
  ["movea.l i8(a0,a0.w),a0", [32, 112, 128, 126], [[18, 4, 0]]],
  ["movea.l i8(a0,d0.l),a0", [32, 112, 8, 126], [[18, 4, 0]]],
  ["movea.l i8(a0,a0.l),a0", [32, 112, 136, 126], [[18, 4, 0]]],
  ["movea.l *+i8(pc,d0.w),a0", [32, 123, 0, 124], [[18, 4, 0]]],
  ["movea.l *+i8(pc,a0.w),a0", [32, 123, 128, 124], [[18, 4, 0]]],
  ["movea.l *+i8(pc,d0.l),a0", [32, 123, 8, 124], [[18, 4, 0]]],
  ["movea.l *+i8(pc,a0.l),a0", [32, 123, 136, 124], [[18, 4, 0]]],
  ["movea.l (xxx).w,a0", [32, 120, 2, 0], [[16, 4, 0]]],
  ["movea.l (xxx).l,a0", [32, 121, 0, 0, 2, 0], [[20, 5, 0]]],
  ["movea.l #i32,a0", [32, 124, 0, 0, 0, 72], [[12, 3, 0]]],
  ["move.w a0,a0", [48, 72], [[4, 1, 0]]],
  ["move.w (a0),a0", [48, 80], [[8, 2, 0]]],
  ["move.w (a0)+,a0", [48, 88], [[8, 2, 0]]],
  ["move.w -(a0),a0", [48, 96], [[10, 2, 0]]],
  ["move.w i16(a0),a0", [48, 104, 127, 254], [[12, 3, 0]]],
  ["move.w *+i16(pc),a0", [48, 122, 127, 252], [[12, 3, 0]]],
  ["move.w i8(a0,d0.w),a0", [48, 112, 0, 126], [[14, 3, 0]]],
  ["move.w i8(a0,a0.w),a0", [48, 112, 128, 126], [[14, 3, 0]]],
  ["move.w i8(a0,d0.l),a0", [48, 112, 8, 126], [[14, 3, 0]]],
  ["move.w i8(a0,a0.l),a0", [48, 112, 136, 126], [[14, 3, 0]]],
  ["move.w *+i8(pc,d0.w),a0", [48, 123, 0, 124], [[14, 3, 0]]],
  ["move.w *+i8(pc,a0.w),a0", [48, 123, 128, 124], [[14, 3, 0]]],
  ["move.w *+i8(pc,d0.l),a0", [48, 123, 8, 124], [[14, 3, 0]]],
  ["move.w *+i8(pc,a0.l),a0", [48, 123, 136, 124], [[14, 3, 0]]],
  ["move.w (xxx).w,a0", [48, 120, 2, 0], [[12, 3, 0]]],
  ["move.w (xxx).l,a0", [48, 121, 0, 0, 2, 0], [[16, 4, 0]]],
  ["move.w #i16,a0", [48, 124, 127, 254], [[8, 2, 0]]],
  ["move.l a0,a0", [32, 72], [[4, 1, 0]]],
  ["move.l (a0),a0", [32, 80], [[12, 3, 0]]],
  ["move.l (a0)+,a0", [32, 88], [[12, 3, 0]]],
  ["move.l -(a0),a0", [32, 96], [[14, 3, 0]]],
  ["move.l i16(a0),a0", [32, 104, 127, 254], [[16, 4, 0]]],
  ["move.l *+i16(pc),a0", [32, 122, 127, 252], [[16, 4, 0]]],
  ["move.l i8(a0,d0.w),a0", [32, 112, 0, 126], [[18, 4, 0]]],
  ["move.l i8(a0,a0.w),a0", [32, 112, 128, 126], [[18, 4, 0]]],
  ["move.l i8(a0,d0.l),a0", [32, 112, 8, 126], [[18, 4, 0]]],
  ["move.l i8(a0,a0.l),a0", [32, 112, 136, 126], [[18, 4, 0]]],
  ["move.l *+i8(pc,d0.w),a0", [32, 123, 0, 124], [[18, 4, 0]]],
  ["move.l *+i8(pc,a0.w),a0", [32, 123, 128, 124], [[18, 4, 0]]],
  ["move.l *+i8(pc,d0.l),a0", [32, 123, 8, 124], [[18, 4, 0]]],
  ["move.l *+i8(pc,a0.l),a0", [32, 123, 136, 124], [[18, 4, 0]]],
  ["move.l (xxx).w,a0", [32, 120, 2, 0], [[16, 4, 0]]],
  ["move.l (xxx).l,a0", [32, 121, 0, 0, 2, 0], [[20, 5, 0]]],
  ["move.l #i32,a0", [32, 124, 0, 0, 0, 72], [[12, 3, 0]]],
  ["clr.b d0", [66, 0], [[4, 1, 0]]],
  ["clr.b (a0)", [66, 16], [[12, 2, 1]]],
  ["clr.b (a0)+", [66, 24], [[12, 2, 1]]],
  ["clr.b -(a0)", [66, 32], [[14, 2, 1]]],
  ["clr.b i16(a0)", [66, 40, 127, 254], [[16, 3, 1]]],
  ["clr.b i8(a0,d0.w)", [66, 48, 0, 126], [[18, 3, 1]]],
  ["clr.b i8(a0,a0.w)", [66, 48, 128, 126], [[18, 3, 1]]],
  ["clr.b i8(a0,d0.l)", [66, 48, 8, 126], [[18, 3, 1]]],
  ["clr.b i8(a0,a0.l)", [66, 48, 136, 126], [[18, 3, 1]]],
  ["clr.b (xxx).w", [66, 56, 2, 0], [[16, 3, 1]]],
  ["clr.b (xxx).l", [66, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["clr.w d0", [66, 64], [[4, 1, 0]]],
  ["clr.w (a0)", [66, 80], [[12, 2, 1]]],
  ["clr.w (a0)+", [66, 88], [[12, 2, 1]]],
  ["clr.w -(a0)", [66, 96], [[14, 2, 1]]],
  ["clr.w i16(a0)", [66, 104, 127, 254], [[16, 3, 1]]],
  ["clr.w i8(a0,d0.w)", [66, 112, 0, 126], [[18, 3, 1]]],
  ["clr.w i8(a0,a0.w)", [66, 112, 128, 126], [[18, 3, 1]]],
  ["clr.w i8(a0,d0.l)", [66, 112, 8, 126], [[18, 3, 1]]],
  ["clr.w i8(a0,a0.l)", [66, 112, 136, 126], [[18, 3, 1]]],
  ["clr.w (xxx).w", [66, 120, 2, 0], [[16, 3, 1]]],
  ["clr.w (xxx).l", [66, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["clr.l d0", [66, 128], [[6, 1, 0]]],
  ["clr.l (a0)", [66, 144], [[20, 3, 2]]],
  ["clr.l (a0)+", [66, 152], [[20, 3, 2]]],
  ["clr.l -(a0)", [66, 160], [[22, 3, 2]]],
  ["clr.l i16(a0)", [66, 168, 127, 254], [[24, 4, 2]]],
  ["clr.l i8(a0,d0.w)", [66, 176, 0, 126], [[26, 4, 2]]],
  ["clr.l i8(a0,a0.w)", [66, 176, 128, 126], [[26, 4, 2]]],
  ["clr.l i8(a0,d0.l)", [66, 176, 8, 126], [[26, 4, 2]]],
  ["clr.l i8(a0,a0.l)", [66, 176, 136, 126], [[26, 4, 2]]],
  ["clr.l (xxx).w", [66, 184, 2, 0], [[24, 4, 2]]],
  ["clr.l (xxx).l", [66, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["neg.b d0", [68, 0], [[4, 1, 0]]],
  ["neg.b (a0)", [68, 16], [[12, 2, 1]]],
  ["neg.b (a0)+", [68, 24], [[12, 2, 1]]],
  ["neg.b -(a0)", [68, 32], [[14, 2, 1]]],
  ["neg.b i16(a0)", [68, 40, 127, 254], [[16, 3, 1]]],
  ["neg.b i8(a0,d0.w)", [68, 48, 0, 126], [[18, 3, 1]]],
  ["neg.b i8(a0,a0.w)", [68, 48, 128, 126], [[18, 3, 1]]],
  ["neg.b i8(a0,d0.l)", [68, 48, 8, 126], [[18, 3, 1]]],
  ["neg.b i8(a0,a0.l)", [68, 48, 136, 126], [[18, 3, 1]]],
  ["neg.b (xxx).w", [68, 56, 2, 0], [[16, 3, 1]]],
  ["neg.b (xxx).l", [68, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["neg.w d0", [68, 64], [[4, 1, 0]]],
  ["neg.w (a0)", [68, 80], [[12, 2, 1]]],
  ["neg.w (a0)+", [68, 88], [[12, 2, 1]]],
  ["neg.w -(a0)", [68, 96], [[14, 2, 1]]],
  ["neg.w i16(a0)", [68, 104, 127, 254], [[16, 3, 1]]],
  ["neg.w i8(a0,d0.w)", [68, 112, 0, 126], [[18, 3, 1]]],
  ["neg.w i8(a0,a0.w)", [68, 112, 128, 126], [[18, 3, 1]]],
  ["neg.w i8(a0,d0.l)", [68, 112, 8, 126], [[18, 3, 1]]],
  ["neg.w i8(a0,a0.l)", [68, 112, 136, 126], [[18, 3, 1]]],
  ["neg.w (xxx).w", [68, 120, 2, 0], [[16, 3, 1]]],
  ["neg.w (xxx).l", [68, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["neg.l d0", [68, 128], [[6, 1, 0]]],
  ["neg.l (a0)", [68, 144], [[20, 3, 2]]],
  ["neg.l (a0)+", [68, 152], [[20, 3, 2]]],
  ["neg.l -(a0)", [68, 160], [[22, 3, 2]]],
  ["neg.l i16(a0)", [68, 168, 127, 254], [[24, 4, 2]]],
  ["neg.l i8(a0,d0.w)", [68, 176, 0, 126], [[26, 4, 2]]],
  ["neg.l i8(a0,a0.w)", [68, 176, 128, 126], [[26, 4, 2]]],
  ["neg.l i8(a0,d0.l)", [68, 176, 8, 126], [[26, 4, 2]]],
  ["neg.l i8(a0,a0.l)", [68, 176, 136, 126], [[26, 4, 2]]],
  ["neg.l (xxx).w", [68, 184, 2, 0], [[24, 4, 2]]],
  ["neg.l (xxx).l", [68, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["negx.b d0", [64, 0], [[4, 1, 0]]],
  ["negx.b (a0)", [64, 16], [[12, 2, 1]]],
  ["negx.b (a0)+", [64, 24], [[12, 2, 1]]],
  ["negx.b -(a0)", [64, 32], [[14, 2, 1]]],
  ["negx.b i16(a0)", [64, 40, 127, 254], [[16, 3, 1]]],
  ["negx.b i8(a0,d0.w)", [64, 48, 0, 126], [[18, 3, 1]]],
  ["negx.b i8(a0,a0.w)", [64, 48, 128, 126], [[18, 3, 1]]],
  ["negx.b i8(a0,d0.l)", [64, 48, 8, 126], [[18, 3, 1]]],
  ["negx.b i8(a0,a0.l)", [64, 48, 136, 126], [[18, 3, 1]]],
  ["negx.b (xxx).w", [64, 56, 2, 0], [[16, 3, 1]]],
  ["negx.b (xxx).l", [64, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["negx.w d0", [64, 64], [[4, 1, 0]]],
  ["negx.w (a0)", [64, 80], [[12, 2, 1]]],
  ["negx.w (a0)+", [64, 88], [[12, 2, 1]]],
  ["negx.w -(a0)", [64, 96], [[14, 2, 1]]],
  ["negx.w i16(a0)", [64, 104, 127, 254], [[16, 3, 1]]],
  ["negx.w i8(a0,d0.w)", [64, 112, 0, 126], [[18, 3, 1]]],
  ["negx.w i8(a0,a0.w)", [64, 112, 128, 126], [[18, 3, 1]]],
  ["negx.w i8(a0,d0.l)", [64, 112, 8, 126], [[18, 3, 1]]],
  ["negx.w i8(a0,a0.l)", [64, 112, 136, 126], [[18, 3, 1]]],
  ["negx.w (xxx).w", [64, 120, 2, 0], [[16, 3, 1]]],
  ["negx.w (xxx).l", [64, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["negx.l d0", [64, 128], [[6, 1, 0]]],
  ["negx.l (a0)", [64, 144], [[20, 3, 2]]],
  ["negx.l (a0)+", [64, 152], [[20, 3, 2]]],
  ["negx.l -(a0)", [64, 160], [[22, 3, 2]]],
  ["negx.l i16(a0)", [64, 168, 127, 254], [[24, 4, 2]]],
  ["negx.l i8(a0,d0.w)", [64, 176, 0, 126], [[26, 4, 2]]],
  ["negx.l i8(a0,a0.w)", [64, 176, 128, 126], [[26, 4, 2]]],
  ["negx.l i8(a0,d0.l)", [64, 176, 8, 126], [[26, 4, 2]]],
  ["negx.l i8(a0,a0.l)", [64, 176, 136, 126], [[26, 4, 2]]],
  ["negx.l (xxx).w", [64, 184, 2, 0], [[24, 4, 2]]],
  ["negx.l (xxx).l", [64, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["not.b d0", [70, 0], [[4, 1, 0]]],
  ["not.b (a0)", [70, 16], [[12, 2, 1]]],
  ["not.b (a0)+", [70, 24], [[12, 2, 1]]],
  ["not.b -(a0)", [70, 32], [[14, 2, 1]]],
  ["not.b i16(a0)", [70, 40, 127, 254], [[16, 3, 1]]],
  ["not.b i8(a0,d0.w)", [70, 48, 0, 126], [[18, 3, 1]]],
  ["not.b i8(a0,a0.w)", [70, 48, 128, 126], [[18, 3, 1]]],
  ["not.b i8(a0,d0.l)", [70, 48, 8, 126], [[18, 3, 1]]],
  ["not.b i8(a0,a0.l)", [70, 48, 136, 126], [[18, 3, 1]]],
  ["not.b (xxx).w", [70, 56, 2, 0], [[16, 3, 1]]],
  ["not.b (xxx).l", [70, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["not.w d0", [70, 64], [[4, 1, 0]]],
  ["not.w (a0)", [70, 80], [[12, 2, 1]]],
  ["not.w (a0)+", [70, 88], [[12, 2, 1]]],
  ["not.w -(a0)", [70, 96], [[14, 2, 1]]],
  ["not.w i16(a0)", [70, 104, 127, 254], [[16, 3, 1]]],
  ["not.w i8(a0,d0.w)", [70, 112, 0, 126], [[18, 3, 1]]],
  ["not.w i8(a0,a0.w)", [70, 112, 128, 126], [[18, 3, 1]]],
  ["not.w i8(a0,d0.l)", [70, 112, 8, 126], [[18, 3, 1]]],
  ["not.w i8(a0,a0.l)", [70, 112, 136, 126], [[18, 3, 1]]],
  ["not.w (xxx).w", [70, 120, 2, 0], [[16, 3, 1]]],
  ["not.w (xxx).l", [70, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["not.l d0", [70, 128], [[6, 1, 0]]],
  ["not.l (a0)", [70, 144], [[20, 3, 2]]],
  ["not.l (a0)+", [70, 152], [[20, 3, 2]]],
  ["not.l -(a0)", [70, 160], [[22, 3, 2]]],
  ["not.l i16(a0)", [70, 168, 127, 254], [[24, 4, 2]]],
  ["not.l i8(a0,d0.w)", [70, 176, 0, 126], [[26, 4, 2]]],
  ["not.l i8(a0,a0.w)", [70, 176, 128, 126], [[26, 4, 2]]],
  ["not.l i8(a0,d0.l)", [70, 176, 8, 126], [[26, 4, 2]]],
  ["not.l i8(a0,a0.l)", [70, 176, 136, 126], [[26, 4, 2]]],
  ["not.l (xxx).w", [70, 184, 2, 0], [[24, 4, 2]]],
  ["not.l (xxx).l", [70, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["move.w d0,ccr", [68, 192], [[12, 1, 0]]],
  ["move.w (a0),ccr", [68, 208], [[16, 2, 0]]],
  ["move.w (a0)+,ccr", [68, 216], [[16, 2, 0]]],
  ["move.w -(a0),ccr", [68, 224], [[18, 2, 0]]],
  ["move.w i16(a0),ccr", [68, 232, 127, 254], [[20, 3, 0]]],
  ["move.w *+i16(pc),ccr", [68, 250, 127, 252], [[20, 3, 0]]],
  ["move.w i8(a0,d0.w),ccr", [68, 240, 0, 126], [[22, 3, 0]]],
  ["move.w i8(a0,a0.w),ccr", [68, 240, 128, 126], [[22, 3, 0]]],
  ["move.w i8(a0,d0.l),ccr", [68, 240, 8, 126], [[22, 3, 0]]],
  ["move.w i8(a0,a0.l),ccr", [68, 240, 136, 126], [[22, 3, 0]]],
  ["move.w *+i8(pc,d0.w),ccr", [68, 251, 0, 124], [[22, 3, 0]]],
  ["move.w *+i8(pc,a0.w),ccr", [68, 251, 128, 124], [[22, 3, 0]]],
  ["move.w *+i8(pc,d0.l),ccr", [68, 251, 8, 124], [[22, 3, 0]]],
  ["move.w *+i8(pc,a0.l),ccr", [68, 251, 136, 124], [[22, 3, 0]]],
  ["move.w (xxx).w,ccr", [68, 248, 2, 0], [[20, 3, 0]]],
  ["move.w (xxx).l,ccr", [68, 249, 0, 0, 2, 0], [[24, 4, 0]]],
  ["move.w #i8,ccr", [68, 252, 0, 126], [[16, 2, 0]]],
  ["move.w d0,sr", [70, 192], [[12, 1, 0]]],
  ["move.w (a0),sr", [70, 208], [[16, 2, 0]]],
  ["move.w (a0)+,sr", [70, 216], [[16, 2, 0]]],
  ["move.w -(a0),sr", [70, 224], [[18, 2, 0]]],
  ["move.w i16(a0),sr", [70, 232, 127, 254], [[20, 3, 0]]],
  ["move.w *+i16(pc),sr", [70, 250, 127, 252], [[20, 3, 0]]],
  ["move.w i8(a0,d0.w),sr", [70, 240, 0, 126], [[22, 3, 0]]],
  ["move.w i8(a0,a0.w),sr", [70, 240, 128, 126], [[22, 3, 0]]],
  ["move.w i8(a0,d0.l),sr", [70, 240, 8, 126], [[22, 3, 0]]],
  ["move.w i8(a0,a0.l),sr", [70, 240, 136, 126], [[22, 3, 0]]],
  ["move.w *+i8(pc,d0.w),sr", [70, 251, 0, 124], [[22, 3, 0]]],
  ["move.w *+i8(pc,a0.w),sr", [70, 251, 128, 124], [[22, 3, 0]]],
  ["move.w *+i8(pc,d0.l),sr", [70, 251, 8, 124], [[22, 3, 0]]],
  ["move.w *+i8(pc,a0.l),sr", [70, 251, 136, 124], [[22, 3, 0]]],
  ["move.w (xxx).w,sr", [70, 248, 2, 0], [[20, 3, 0]]],
  ["move.w (xxx).l,sr", [70, 249, 0, 0, 2, 0], [[24, 4, 0]]],
  ["move.w #i16,sr", [70, 252, 127, 254], [[16, 2, 0]]],
  ["nbcd.b d0", [72, 0], [[6, 1, 0]]],
  ["nbcd.b (a0)", [72, 16], [[12, 2, 1]]],
  ["nbcd.b (a0)+", [72, 24], [[12, 2, 1]]],
  ["nbcd.b -(a0)", [72, 32], [[14, 2, 1]]],
  ["nbcd.b i16(a0)", [72, 40, 127, 254], [[16, 3, 1]]],
  ["nbcd.b i8(a0,d0.w)", [72, 48, 0, 126], [[18, 3, 1]]],
  ["nbcd.b i8(a0,a0.w)", [72, 48, 128, 126], [[18, 3, 1]]],
  ["nbcd.b i8(a0,d0.l)", [72, 48, 8, 126], [[18, 3, 1]]],
  ["nbcd.b i8(a0,a0.l)", [72, 48, 136, 126], [[18, 3, 1]]],
  ["nbcd.b (xxx).w", [72, 56, 2, 0], [[16, 3, 1]]],
  ["nbcd.b (xxx).l", [72, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["pea (a0)", [72, 80], [[12, 1, 2]]],
  ["pea i16(a0)", [72, 104, 127, 254], [[16, 2, 2]]],
  ["pea *+i16(pc)", [72, 122, 127, 252], [[16, 2, 2]]],
  ["pea i8(a0,d0.w)", [72, 112, 0, 126], [[20, 2, 2]]],
  ["pea i8(a0,a0.w)", [72, 112, 128, 126], [[20, 2, 2]]],
  ["pea i8(a0,d0.l)", [72, 112, 8, 126], [[20, 2, 2]]],
  ["pea i8(a0,a0.l)", [72, 112, 136, 126], [[20, 2, 2]]],
  ["pea *+i8(pc,d0.w)", [72, 123, 0, 124], [[20, 2, 2]]],
  ["pea *+i8(pc,a0.w)", [72, 123, 128, 124], [[20, 2, 2]]],
  ["pea *+i8(pc,d0.l)", [72, 123, 8, 124], [[20, 2, 2]]],
  ["pea *+i8(pc,a0.l)", [72, 123, 136, 124], [[20, 2, 2]]],
  ["pea (xxx).w", [72, 120, 2, 0], [[16, 2, 2]]],
  ["pea (xxx).l", [72, 121, 0, 0, 2, 0], [[20, 3, 2]]],
  ["swap d0", [72, 64], [[4, 1, 0]]],
  ["movem.w (a0),d0-a0/a3/a5", [76, 144, 41, 255], [[12+4*11, 3+11, 0]]],
  ["movem.w (a0)+,d0-a0/a3/a5", [76, 152, 41, 255], [[12+4*11, 3+11, 0]]],
  ["movem.w i16(a0),d0-a0/a3/a5", [76, 168, 41, 255, 127, 254], [[16+4*11, 4+11, 0]]],
  ["movem.w *+i16(pc),d0-a0/a3/a5", [76, 186, 41, 255, 127, 250], [[16+4*11, 4+11, 0]]],
  ["movem.w i8(a0,d0.w),d0-a0/a3/a5", [76, 176, 41, 255, 0, 126], [[18+4*11, 4+11, 0]]],
  ["movem.w i8(a0,a0.w),d0-a0/a3/a5", [76, 176, 41, 255, 128, 126], [[18+4*11, 4+11, 0]]],
  ["movem.w i8(a0,d0.l),d0-a0/a3/a5", [76, 176, 41, 255, 8, 126], [[18+4*11, 4+11, 0]]],
  ["movem.w i8(a0,a0.l),d0-a0/a3/a5", [76, 176, 41, 255, 136, 126], [[18+4*11, 4+11, 0]]],
  ["movem.w *+i8(pc,d0.w),d0-a0/a3/a5", [76, 187, 41, 255, 0, 122], [[18+4*11, 4+11, 0]]],
  ["movem.w *+i8(pc,a0.w),d0-a0/a3/a5", [76, 187, 41, 255, 128, 122], [[18+4*11, 4+11, 0]]],
  ["movem.w *+i8(pc,d0.l),d0-a0/a3/a5", [76, 187, 41, 255, 8, 122], [[18+4*11, 4+11, 0]]],
  ["movem.w *+i8(pc,a0.l),d0-a0/a3/a5", [76, 187, 41, 255, 136, 122], [[18+4*11, 4+11, 0]]],
  ["movem.w (xxx).w,d0-a0/a3/a5", [76, 184, 41, 255, 2, 0], [[16+4*11, 4+11, 0]]],
  ["movem.w (xxx).l,d0-a0/a3/a5", [76, 185, 41, 255, 0, 0, 2, 0], [[20+4*11, 5+11, 0]]],
  ["movem.l (a0),d0-a0/a3/a5", [76, 208, 41, 255], [[12+8*11, 3+2*11, 0]]],
  ["movem.l (a0)+,d0-a0/a3/a5", [76, 216, 41, 255], [[12+8*11, 3+2*11, 0]]],
  ["movem.l i16(a0),d0-a0/a3/a5", [76, 232, 41, 255, 127, 254], [[16+8*11, 4+2*11, 0]]],
  ["movem.l *+i16(pc),d0-a0/a3/a5", [76, 250, 41, 255, 127, 250], [[16+8*11, 4+2*11, 0]]],
  ["movem.l i8(a0,d0.w),d0-a0/a3/a5", [76, 240, 41, 255, 0, 126], [[18+8*11, 4+2*11, 0]]],
  ["movem.l i8(a0,a0.w),d0-a0/a3/a5", [76, 240, 41, 255, 128, 126], [[18+8*11, 4+2*11, 0]]],
  ["movem.l i8(a0,d0.l),d0-a0/a3/a5", [76, 240, 41, 255, 8, 126], [[18+8*11, 4+2*11, 0]]],
  ["movem.l i8(a0,a0.l),d0-a0/a3/a5", [76, 240, 41, 255, 136, 126], [[18+8*11, 4+2*11, 0]]],
  ["movem.l *+i8(pc,d0.w),d0-a0/a3/a5", [76, 251, 41, 255, 0, 122], [[18+8*11, 4+2*11, 0]]],
  ["movem.l *+i8(pc,a0.w),d0-a0/a3/a5", [76, 251, 41, 255, 128, 122], [[18+8*11, 4+2*11, 0]]],
  ["movem.l *+i8(pc,d0.l),d0-a0/a3/a5", [76, 251, 41, 255, 8, 122], [[18+8*11, 4+2*11, 0]]],
  ["movem.l *+i8(pc,a0.l),d0-a0/a3/a5", [76, 251, 41, 255, 136, 122], [[18+8*11, 4+2*11, 0]]],
  ["movem.l (xxx).w,d0-a0/a3/a5", [76, 248, 41, 255, 2, 0], [[16+8*11, 4+2*11, 0]]],
  ["movem.l (xxx).l,d0-a0/a3/a5", [76, 249, 41, 255, 0, 0, 2, 0], [[20+8*11, 5+2*11, 0]]],
  ["movem.w d0-a0/a3/a5,(a0)", [72, 144, 41, 255], [[8+4*11, 2, 11]]],
  ["movem.w d0-a0/a3/a5,-(a0)", [72, 160, 255, 148], [[8+4*11, 2, 11]]],
  ["movem.w d0-a0/a3/a5,i16(a0)", [72, 168, 41, 255, 127, 254], [[12+4*11, 3, 11]]],
  ["movem.w d0-a0/a3/a5,i8(a0,d0.w)", [72, 176, 41, 255, 0, 126], [[14+4*11, 3, 11]]],
  ["movem.w d0-a0/a3/a5,i8(a0,a0.w)", [72, 176, 41, 255, 128, 126], [[14+4*11, 3, 11]]],
  ["movem.w d0-a0/a3/a5,i8(a0,d0.l)", [72, 176, 41, 255, 8, 126], [[14+4*11, 3, 11]]],
  ["movem.w d0-a0/a3/a5,i8(a0,a0.l)", [72, 176, 41, 255, 136, 126], [[14+4*11, 3, 11]]],
  ["movem.w d0-a0/a3/a5,(xxx).w", [72, 184, 41, 255, 2, 0], [[12+4*11, 3, 11]]],
  ["movem.w d0-a0/a3/a5,(xxx).l", [72, 185, 41, 255, 0, 0, 2, 0], [[16+4*11, 4, 11]]],
  ["movem.l d0-a0/a3/a5,(a0)", [72, 208, 41, 255], [[8+8*11, 2, 2*11]]],
  ["movem.l d0-a0/a3/a5,-(a0)", [72, 224, 255, 148], [[8+8*11, 2, 2*11]]],
  ["movem.l d0-a0/a3/a5,i16(a0)", [72, 232, 41, 255, 127, 254], [[12+8*11, 3, 2*11]]],
  ["movem.l d0-a0/a3/a5,i8(a0,d0.w)", [72, 240, 41, 255, 0, 126], [[14+8*11, 3, 2*11]]],
  ["movem.l d0-a0/a3/a5,i8(a0,a0.w)", [72, 240, 41, 255, 128, 126], [[14+8*11, 3, 2*11]]],
  ["movem.l d0-a0/a3/a5,i8(a0,d0.l)", [72, 240, 41, 255, 8, 126], [[14+8*11, 3, 2*11]]],
  ["movem.l d0-a0/a3/a5,i8(a0,a0.l)", [72, 240, 41, 255, 136, 126], [[14+8*11, 3, 2*11]]],
  ["movem.l d0-a0/a3/a5,(xxx).w", [72, 248, 41, 255, 2, 0], [[12+8*11, 3, 2*11]]],
  ["movem.l d0-a0/a3/a5,(xxx).l", [72, 249, 41, 255, 0, 0, 2, 0], [[16+8*11, 4, 2*11]]],
  ["ext.w d0", [72, 128], [[4, 1, 0]]],
  ["ext.l d0", [72, 192], [[4, 1, 0]]],
  ["tst.b d0", [74, 0], [[4, 1, 0]]],
  ["tst.b (a0)", [74, 16], [[8, 2, 0]]],
  ["tst.b (a0)+", [74, 24], [[8, 2, 0]]],
  ["tst.b -(a0)", [74, 32], [[10, 2, 0]]],
  ["tst.b i16(a0)", [74, 40, 127, 254], [[12, 3, 0]]],
  ["tst.b i8(a0,d0.w)", [74, 48, 0, 126], [[14, 3, 0]]],
  ["tst.b i8(a0,a0.w)", [74, 48, 128, 126], [[14, 3, 0]]],
  ["tst.b i8(a0,d0.l)", [74, 48, 8, 126], [[14, 3, 0]]],
  ["tst.b i8(a0,a0.l)", [74, 48, 136, 126], [[14, 3, 0]]],
  ["tst.b (xxx).W", [74, 56, 2, 0], [[12, 3, 0]]],
  ["tst.b (xxx).L", [74, 57, 0, 0, 2, 0], [[16, 4, 0]]],
  ["tst.w d0", [74, 64], [[4, 1, 0]]],
  ["tst.w (a0)", [74, 80], [[8, 2, 0]]],
  ["tst.w (a0)+", [74, 88], [[8, 2, 0]]],
  ["tst.w -(a0)", [74, 96], [[10, 2, 0]]],
  ["tst.w i16(a0)", [74, 104, 127, 254], [[12, 3, 0]]],
  ["tst.w i8(a0,d0.w)", [74, 112, 0, 126], [[14, 3, 0]]],
  ["tst.w i8(a0,a0.w)", [74, 112, 128, 126], [[14, 3, 0]]],
  ["tst.w i8(a0,d0.l)", [74, 112, 8, 126], [[14, 3, 0]]],
  ["tst.w i8(a0,a0.l)", [74, 112, 136, 126], [[14, 3, 0]]],
  ["tst.w (xxx).W", [74, 120, 2, 0], [[12, 3, 0]]],
  ["tst.w (xxx).L", [74, 121, 0, 0, 2, 0], [[16, 4, 0]]],
  ["tst.l d0", [74, 128], [[4, 1, 0]]],
  ["tst.l (a0)", [74, 144], [[12, 3, 0]]],
  ["tst.l (a0)+", [74, 152], [[12, 3, 0]]],
  ["tst.l -(a0)", [74, 160], [[14, 3, 0]]],
  ["tst.l i16(a0)", [74, 168, 127, 254], [[16, 4, 0]]],
  ["tst.l i8(a0,d0.w)", [74, 176, 0, 126], [[18, 4, 0]]],
  ["tst.l i8(a0,a0.w)", [74, 176, 128, 126], [[18, 4, 0]]],
  ["tst.l i8(a0,d0.l)", [74, 176, 8, 126], [[18, 4, 0]]],
  ["tst.l i8(a0,a0.l)", [74, 176, 136, 126], [[18, 4, 0]]],
  ["tst.l (xxx).W", [74, 184, 2, 0], [[16, 4, 0]]],
  ["tst.l (xxx).L", [74, 185, 0, 0, 2, 0], [[20, 5, 0]]],
  ["tas.b d0", [74, 192], [[4, 1, 0]]],
  ["tas.b (a0)", [74, 208], [[14, 2, 1]]],
  ["tas.b (a0)+", [74, 216], [[14, 2, 1]]],
  ["tas.b -(a0)", [74, 224], [[16, 2, 1]]],
  ["tas.b i16(a0)", [74, 232, 127, 254], [[18, 3, 1]]],
  ["tas.b i8(a0,d0.w)", [74, 240, 0, 126], [[20, 3, 1]]],
  ["tas.b i8(a0,a0.w)", [74, 240, 128, 126], [[20, 3, 1]]],
  ["tas.b i8(a0,d0.l)", [74, 240, 8, 126], [[20, 3, 1]]],
  ["tas.b i8(a0,a0.l)", [74, 240, 136, 126], [[20, 3, 1]]],
  ["tas.b (xxx).W", [74, 248, 2, 0], [[18, 2, 1]]],
  ["tas.b (xxx).L", [74, 249, 0, 0, 2, 0], [[22, 3, 1]]],
  ["chk.w d0,d0", [65, 128], [[10, 1, 0], [38, 5, 3], [40, 5, 3]]],
  ["chk.w (a0),d0", [65, 144], [[14, 2, 0], [42, 6, 3], [44, 6, 3]]],
  ["chk.w (a0)+,d0", [65, 152], [[14, 2, 0], [42, 6, 3], [44, 6, 3]]],
  ["chk.w -(a0),d0", [65, 160], [[16, 2, 0], [44, 6, 3], [46, 6, 3]]],
  ["chk.w i16(a0),d0", [65, 168, 127, 254], [[18, 3, 0], [46, 7, 3], [48, 7, 3]]],
  ["chk.w *+i16(pc),d0", [65, 186, 127, 252], [[18, 3, 0], [46, 7, 3], [48, 7, 3]]],
  ["chk.w i8(a0,d0.w),d0", [65, 176, 0, 126], [[20, 3, 0], [48, 7, 3], [50, 7, 3]]],
  ["chk.w i8(a0,a0.w),d0", [65, 176, 128, 126], [[20, 3, 0], [48, 7, 3], [50, 7, 3]]],
  ["chk.w i8(a0,d0.l),d0", [65, 176, 8, 126], [[20, 3, 0], [48, 7, 3], [50, 7, 3]]],
  ["chk.w i8(a0,a0.l),d0", [65, 176, 136, 126], [[20, 3, 0], [48, 7, 3], [50, 7, 3]]],
  ["chk.w *+i8(pc,d0.w),d0", [65, 187, 0, 124], [[20, 3, 0], [48, 7, 3], [50, 7, 3]]],
  ["chk.w *+i8(pc,a0.w),d0", [65, 187, 128, 124], [[20, 3, 0], [48, 7, 3], [50, 7, 3]]],
  ["chk.w *+i8(pc,d0.l),d0", [65, 187, 8, 124], [[20, 3, 0], [48, 7, 3], [50, 7, 3]]],
  ["chk.w *+i8(pc,a0.l),d0", [65, 187, 136, 124], [[20, 3, 0], [48, 7, 3], [50, 7, 3]]],
  ["chk.w (xxx).W,d0", [65, 184, 2, 0], [[18, 3, 0], [46, 7, 3], [48, 7, 3]]],
  ["chk.w (xxx).L,d0", [65, 185, 0, 0, 2, 0], [[22, 3, 0], [50, 7, 3], [52, 7, 3]]],
  ["chk.w #255,d0", [65, 188, 0, 255], [[14, 2, 0], [42, 6, 3], [44, 6, 3]]],
  ["lea (a0),a1", [67, 208], [[4, 1, 0]]],
  ["lea i16(a0),a0", [65, 232, 127, 254], [[8, 2, 0]]],
  ["lea *+i16(pc),a0", [65, 250, 127, 252], [[8, 2, 0]]],
  ["lea i8(a0,d0.w),a0", [65, 240, 0, 126], [[12, 2, 0]]],
  ["lea i8(a0,a0.w),a0", [65, 240, 128, 126], [[12, 2, 0]]],
  ["lea i8(a0,d0.l),a0", [65, 240, 8, 126], [[12, 2, 0]]],
  ["lea i8(a0,a0.l),a0", [65, 240, 136, 126], [[12, 2, 0]]],
  ["lea *+i8(pc,d0.w),a0", [65, 251, 0, 124], [[12, 2, 0]]],
  ["lea *+i8(pc,a0.w),a0", [65, 251, 128, 124], [[12, 2, 0]]],
  ["lea *+i8(pc,d0.l),a0", [65, 251, 8, 124], [[12, 2, 0]]],
  ["lea *+i8(pc,a0.l),a0", [65, 251, 136, 124], [[12, 2, 0]]],
  ["lea (xxx).w,a0", [65, 248, 2, 0], [[8, 2, 0]]],
  ["lea (xxx).l,a0", [65, 249, 0, 0, 2, 0], [[12, 3, 0]]],
  ["jsr (a0)", [78, 144], [[16, 2, 2]]],
  ["jsr i16(a0)", [78, 168, 127, 254], [[18, 2, 2]]],
  ["jsr *+i16(pc)", [78, 186, 127, 252], [[18, 2, 2]]],
  ["jsr i8(a0,d0.w)", [78, 176, 0, 126], [[22, 2, 2]]],
  ["jsr i8(a0,a0.w)", [78, 176, 128, 126], [[22, 2, 2]]],
  ["jsr i8(a0,d0.l)", [78, 176, 8, 126], [[22, 2, 2]]],
  ["jsr i8(a0,a0.l)", [78, 176, 136, 126], [[22, 2, 2]]],
  ["jsr *+i8(pc,d0.w)", [78, 187, 0, 124], [[22, 2, 2]]],
  ["jsr *+i8(pc,a0.w)", [78, 187, 128, 124], [[22, 2, 2]]],
  ["jsr *+i8(pc,d0.l)", [78, 187, 8, 124], [[22, 2, 2]]],
  ["jsr *+i8(pc,a0.l)", [78, 187, 136, 124], [[22, 2, 2]]],
  ["jsr (xxx).w", [78, 184, 2, 0], [[18, 2, 2]]],
  ["jsr (xxx).l", [78, 185, 0, 0, 2, 0], [[20, 3, 2]]],
  ["jmp (a0)", [78, 208], [[8, 2, 0]]],
  ["jmp i16(a0)", [78, 232, 127, 254], [[10, 2, 0]]],
  ["jmp *+i16(pc)", [78, 250, 127, 252], [[10, 2, 0]]],
  ["jmp i8(a0,d0.w)", [78, 240, 0, 126], [[14, 2, 0]]],
  ["jmp i8(a0,a0.w)", [78, 240, 128, 126], [[14, 2, 0]]],
  ["jmp i8(a0,d0.l)", [78, 240, 8, 126], [[14, 2, 0]]],
  ["jmp i8(a0,a0.l)", [78, 240, 136, 126], [[14, 2, 0]]],
  ["jmp *+i8(pc,d0.w)", [78, 251, 0, 124], [[14, 2, 0]]],
  ["jmp *+i8(pc,a0.w)", [78, 251, 128, 124], [[14, 2, 0]]],
  ["jmp *+i8(pc,d0.l)", [78, 251, 8, 124], [[14, 2, 0]]],
  ["jmp *+i8(pc,a0.l)", [78, 251, 136, 124], [[14, 2, 0]]],
  ["jmp (xxx).w", [78, 248, 2, 0], [[10, 2, 0]]],
  ["jmp (xxx).l", [78, 249, 0, 0, 2, 0], [[12, 3, 0]]],
  ["move.l a0,usp", [78, 96], [[4, 1, 0]]],
  ["move.l usp,a0", [78, 104], [[4, 1, 0]]],
  ["reset", [78, 112], [[132, 1, 0]]],
  ["nop", [78, 113], [[4, 1, 0]]],
  ["stop #i16", [78, 114, 127, 254], [[4, 1, 0]]],
  ["rte", [78, 115], [[20, 5, 0]]],
  ["rtr", [78, 119], [[20, 5, 0]]],
  ["rts", [78, 117], [[16, 4, 0]]],
  ["trapv", [78, 118], [[4, 1, 0], [34, 5, 3]]],
  ["link a0,#i16", [78, 80, 127, 254], [[16, 2, 2]]],
  ["unlk a0", [78, 88], [[12, 3, 0]]],
  ["illegal", [74, 252], [[34, 4, 3]]],
  ["trap #i3", [78, 71], [[34, 4, 3]]],
  ["addq.b #i3,d0", [94, 0], [[4, 1, 0]]],
  ["addq.b #i3,(a0)", [94, 16], [[12, 2, 1]]],
  ["addq.b #i3,(a0)+", [94, 24], [[12, 2, 1]]],
  ["addq.b #i3,-(a0)", [94, 32], [[14, 2, 1]]],
  ["addq.b #i3,i16(a0)", [94, 40, 127, 254], [[16, 3, 1]]],
  ["addq.b #i3,i8(a0,d0.w)", [94, 48, 0, 126], [[18, 3, 1]]],
  ["addq.b #i3,i8(a0,a0.w)", [94, 48, 128, 126], [[18, 3, 1]]],
  ["addq.b #i3,i8(a0,d0.l)", [94, 48, 8, 126], [[18, 3, 1]]],
  ["addq.b #i3,i8(a0,a0.l)", [94, 48, 136, 126], [[18, 3, 1]]],
  ["addq.b #i3,(xxx).w", [94, 56, 2, 0], [[16, 3, 1]]],
  ["addq.b #i3,(xxx).l", [94, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["addq.w #i3,d0", [94, 64], [[4, 1, 0]]],
  ["addq.w #i3,a0", [94, 72], [[8, 1, 0]]],
  ["addq.w #i3,(a0)", [94, 80], [[12, 2, 1]]],
  ["addq.w #i3,(a0)+", [94, 88], [[12, 2, 1]]],
  ["addq.w #i3,-(a0)", [94, 96], [[14, 2, 1]]],
  ["addq.w #i3,i16(a0)", [94, 104, 127, 254], [[16, 3, 1]]],
  ["addq.w #i3,i8(a0,d0.w)", [94, 112, 0, 126], [[18, 3, 1]]],
  ["addq.w #i3,i8(a0,a0.w)", [94, 112, 128, 126], [[18, 3, 1]]],
  ["addq.w #i3,i8(a0,d0.l)", [94, 112, 8, 126], [[18, 3, 1]]],
  ["addq.w #i3,i8(a0,a0.l)", [94, 112, 136, 126], [[18, 3, 1]]],
  ["addq.w #i3,(xxx).w", [94, 120, 2, 0], [[16, 3, 1]]],
  ["addq.w #i3,(xxx).l", [94, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["addq.l #i3,d0", [94, 128], [[8, 1, 0]]],
  ["addq.l #i3,a0", [94, 136], [[8, 1, 0]]],
  ["addq.l #i3,(a0)", [94, 144], [[20, 3, 2]]],
  ["addq.l #i3,(a0)+", [94, 152], [[20, 3, 2]]],
  ["addq.l #i3,-(a0)", [94, 160], [[22, 3, 2]]],
  ["addq.l #i3,i16(a0)", [94, 168, 127, 254], [[24, 4, 2]]],
  ["addq.l #i3,i8(a0,d0.w)", [94, 176, 0, 126], [[26, 4, 2]]],
  ["addq.l #i3,i8(a0,a0.w)", [94, 176, 128, 126], [[26, 4, 2]]],
  ["addq.l #i3,i8(a0,d0.l)", [94, 176, 8, 126], [[26, 4, 2]]],
  ["addq.l #i3,i8(a0,a0.l)", [94, 176, 136, 126], [[26, 4, 2]]],
  ["addq.l #i3,(xxx).w", [94, 184, 2, 0], [[24, 4, 2]]],
  ["addq.l #i3,(xxx).l", [94, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["subq.b #i3,d0", [95, 0], [[4, 1, 0]]],
  ["subq.b #i3,(a0)", [95, 16], [[12, 2, 1]]],
  ["subq.b #i3,(a0)+", [95, 24], [[12, 2, 1]]],
  ["subq.b #i3,-(a0)", [95, 32], [[14, 2, 1]]],
  ["subq.b #i3,i16(a0)", [95, 40, 127, 254], [[16, 3, 1]]],
  ["subq.b #i3,i8(a0,d0.w)", [95, 48, 0, 126], [[18, 3, 1]]],
  ["subq.b #i3,i8(a0,a0.w)", [95, 48, 128, 126], [[18, 3, 1]]],
  ["subq.b #i3,i8(a0,d0.l)", [95, 48, 8, 126], [[18, 3, 1]]],
  ["subq.b #i3,i8(a0,a0.l)", [95, 48, 136, 126], [[18, 3, 1]]],
  ["subq.b #i3,(xxx).w", [95, 56, 2, 0], [[16, 3, 1]]],
  ["subq.b #i3,(xxx).l", [95, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["subq.w #i3,d0", [95, 64], [[4, 1, 0]]],
  ["subq.w #i3,a0", [95, 72], [[8, 1, 0]]],
  ["subq.w #i3,(a0)", [95, 80], [[12, 2, 1]]],
  ["subq.w #i3,(a0)+", [95, 88], [[12, 2, 1]]],
  ["subq.w #i3,-(a0)", [95, 96], [[14, 2, 1]]],
  ["subq.w #i3,i16(a0)", [95, 104, 127, 254], [[16, 3, 1]]],
  ["subq.w #i3,i8(a0,d0.w)", [95, 112, 0, 126], [[18, 3, 1]]],
  ["subq.w #i3,i8(a0,a0.w)", [95, 112, 128, 126], [[18, 3, 1]]],
  ["subq.w #i3,i8(a0,d0.l)", [95, 112, 8, 126], [[18, 3, 1]]],
  ["subq.w #i3,i8(a0,a0.l)", [95, 112, 136, 126], [[18, 3, 1]]],
  ["subq.w #i3,(xxx).w", [95, 120, 2, 0], [[16, 3, 1]]],
  ["subq.w #i3,(xxx).l", [95, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["subq.l #i3,d0", [95, 128], [[8, 1, 0]]],
  ["subq.l #i3,a0", [95, 136], [[8, 1, 0]]],
  ["subq.l #i3,(a0)", [95, 144], [[20, 3, 2]]],
  ["subq.l #i3,(a0)+", [95, 152], [[20, 3, 2]]],
  ["subq.l #i3,-(a0)", [95, 160], [[22, 3, 2]]],
  ["subq.l #i3,i16(a0)", [95, 168, 127, 254], [[24, 4, 2]]],
  ["subq.l #i3,i8(a0,d0.w)", [95, 176, 0, 126], [[26, 4, 2]]],
  ["subq.l #i3,i8(a0,a0.w)", [95, 176, 128, 126], [[26, 4, 2]]],
  ["subq.l #i3,i8(a0,d0.l)", [95, 176, 8, 126], [[26, 4, 2]]],
  ["subq.l #i3,i8(a0,a0.l)", [95, 176, 136, 126], [[26, 4, 2]]],
  ["subq.l #i3,(xxx).w", [95, 184, 2, 0], [[24, 4, 2]]],
  ["subq.l #i3,(xxx).l", [95, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["dbt d0,yyy", [80, 200, 255, 254], [[12, 2, 0]]],
  ["dbra d0,yyy", [81, 200, 255, 254], [[10, 2, 0], [14, 3, 0]]],
  ["dbf d0,yyy", [81, 200, 255, 254], [[10, 2, 0], [14, 3, 0]]],
  ["dbcc d0,yyy", [84, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbhs d0,yyy", [84, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbcs d0,yyy", [85, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dblo d0,yyy", [85, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbeq d0,yyy", [87, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbge d0,yyy", [92, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbgt d0,yyy", [94, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbhi d0,yyy", [82, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dble d0,yyy", [95, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbls d0,yyy", [83, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dblt d0,yyy", [93, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbmi d0,yyy", [91, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbne d0,yyy", [86, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbpl d0,yyy", [90, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbvc d0,yyy", [88, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["dbvs d0,yyy", [89, 200, 255, 254], [[10, 2, 0], [12, 2, 0], [14, 3, 0]]],
  ["st.b d0", [80, 192], [[4, 1, 0], [6, 1, 0]]],
  ["st.b (a0)", [80, 208], [[12, 2, 1]]],
  ["st.b (a0)+", [80, 216], [[12, 2, 1]]],
  ["st.b -(a0)", [80, 224], [[14, 2, 1]]],
  ["st.b i16(a0)", [80, 232, 127, 254], [[16, 3, 1]]],
  ["st.b i8(a0,d0.w)", [80, 240, 0, 126], [[18, 3, 1]]],
  ["st.b i8(a0,a0.w)", [80, 240, 128, 126], [[18, 3, 1]]],
  ["st.b i8(a0,d0.l)", [80, 240, 8, 126], [[18, 3, 1]]],
  ["st.b i8(a0,a0.l)", [80, 240, 136, 126], [[18, 3, 1]]],
  ["st.b (xxx).W", [80, 248, 2, 0], [[16, 3, 1]]],
  ["st.b (xxx).L", [80, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["sf.b d0", [81, 192], [[6, 1, 0], [4, 1, 0]]],
  ["sf.b (a0)", [81, 208], [[12, 2, 1]]],
  ["sf.b (a0)+", [81, 216], [[12, 2, 1]]],
  ["sf.b -(a0)", [81, 224], [[14, 2, 1]]],
  ["sf.b i16(a0)", [81, 232, 127, 254], [[16, 3, 1]]],
  ["sf.b i8(a0,d0.w)", [81, 240, 0, 126], [[18, 3, 1]]],
  ["sf.b i8(a0,a0.w)", [81, 240, 128, 126], [[18, 3, 1]]],
  ["sf.b i8(a0,d0.l)", [81, 240, 8, 126], [[18, 3, 1]]],
  ["sf.b i8(a0,a0.l)", [81, 240, 136, 126], [[18, 3, 1]]],
  ["sf.b (xxx).W", [81, 248, 2, 0], [[16, 3, 1]]],
  ["sf.b (xxx).L", [81, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["scc.b d0", [84, 192], [[4, 1, 0], [6, 1, 0]]],
  ["scc.b (a0)", [84, 208], [[12, 2, 1]]],
  ["scc.b (a0)+", [84, 216], [[12, 2, 1]]],
  ["scc.b -(a0)", [84, 224], [[14, 2, 1]]],
  ["scc.b i16(a0)", [84, 232, 127, 254], [[16, 3, 1]]],
  ["scc.b i8(a0,d0.w)", [84, 240, 0, 126], [[18, 3, 1]]],
  ["scc.b i8(a0,a0.w)", [84, 240, 128, 126], [[18, 3, 1]]],
  ["scc.b i8(a0,d0.l)", [84, 240, 8, 126], [[18, 3, 1]]],
  ["scc.b i8(a0,a0.l)", [84, 240, 136, 126], [[18, 3, 1]]],
  ["scc.b (xxx).W", [84, 248, 2, 0], [[16, 3, 1]]],
  ["scc.b (xxx).L", [84, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["shs.b d0", [84, 192], [[4, 1, 0], [6, 1, 0]]],
  ["shs.b (a0)", [84, 208], [[12, 2, 1]]],
  ["shs.b (a0)+", [84, 216], [[12, 2, 1]]],
  ["shs.b -(a0)", [84, 224], [[14, 2, 1]]],
  ["shs.b i16(a0)", [84, 232, 127, 254], [[16, 3, 1]]],
  ["shs.b i8(a0,d0.w)", [84, 240, 0, 126], [[18, 3, 1]]],
  ["shs.b i8(a0,a0.w)", [84, 240, 128, 126], [[18, 3, 1]]],
  ["shs.b i8(a0,d0.l)", [84, 240, 8, 126], [[18, 3, 1]]],
  ["shs.b i8(a0,a0.l)", [84, 240, 136, 126], [[18, 3, 1]]],
  ["shs.b (xxx).W", [84, 248, 2, 0], [[16, 3, 1]]],
  ["shs.b (xxx).L", [84, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["scs.b d0", [85, 192], [[4, 1, 0], [6, 1, 0]]],
  ["scs.b (a0)", [85, 208], [[12, 2, 1]]],
  ["scs.b (a0)+", [85, 216], [[12, 2, 1]]],
  ["scs.b -(a0)", [85, 224], [[14, 2, 1]]],
  ["scs.b i16(a0)", [85, 232, 127, 254], [[16, 3, 1]]],
  ["scs.b i8(a0,d0.w)", [85, 240, 0, 126], [[18, 3, 1]]],
  ["scs.b i8(a0,a0.w)", [85, 240, 128, 126], [[18, 3, 1]]],
  ["scs.b i8(a0,d0.l)", [85, 240, 8, 126], [[18, 3, 1]]],
  ["scs.b i8(a0,a0.l)", [85, 240, 136, 126], [[18, 3, 1]]],
  ["scs.b (xxx).W", [85, 248, 2, 0], [[16, 3, 1]]],
  ["scs.b (xxx).L", [85, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["slo.b d0", [85, 192], [[4, 1, 0], [6, 1, 0]]],
  ["slo.b (a0)", [85, 208], [[12, 2, 1]]],
  ["slo.b (a0)+", [85, 216], [[12, 2, 1]]],
  ["slo.b -(a0)", [85, 224], [[14, 2, 1]]],
  ["slo.b i16(a0)", [85, 232, 127, 254], [[16, 3, 1]]],
  ["slo.b i8(a0,d0.w)", [85, 240, 0, 126], [[18, 3, 1]]],
  ["slo.b i8(a0,a0.w)", [85, 240, 128, 126], [[18, 3, 1]]],
  ["slo.b i8(a0,d0.l)", [85, 240, 8, 126], [[18, 3, 1]]],
  ["slo.b i8(a0,a0.l)", [85, 240, 136, 126], [[18, 3, 1]]],
  ["slo.b (xxx).W", [85, 248, 2, 0], [[16, 3, 1]]],
  ["slo.b (xxx).L", [85, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["seq.b d0", [87, 192], [[4, 1, 0], [6, 1, 0]]],
  ["seq.b (a0)", [87, 208], [[12, 2, 1]]],
  ["seq.b (a0)+", [87, 216], [[12, 2, 1]]],
  ["seq.b -(a0)", [87, 224], [[14, 2, 1]]],
  ["seq.b i16(a0)", [87, 232, 127, 254], [[16, 3, 1]]],
  ["seq.b i8(a0,d0.w)", [87, 240, 0, 126], [[18, 3, 1]]],
  ["seq.b i8(a0,a0.w)", [87, 240, 128, 126], [[18, 3, 1]]],
  ["seq.b i8(a0,d0.l)", [87, 240, 8, 126], [[18, 3, 1]]],
  ["seq.b i8(a0,a0.l)", [87, 240, 136, 126], [[18, 3, 1]]],
  ["seq.b (xxx).W", [87, 248, 2, 0], [[16, 3, 1]]],
  ["seq.b (xxx).L", [87, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["sge.b d0", [92, 192], [[4, 1, 0], [6, 1, 0]]],
  ["sge.b (a0)", [92, 208], [[12, 2, 1]]],
  ["sge.b (a0)+", [92, 216], [[12, 2, 1]]],
  ["sge.b -(a0)", [92, 224], [[14, 2, 1]]],
  ["sge.b i16(a0)", [92, 232, 127, 254], [[16, 3, 1]]],
  ["sge.b i8(a0,d0.w)", [92, 240, 0, 126], [[18, 3, 1]]],
  ["sge.b i8(a0,a0.w)", [92, 240, 128, 126], [[18, 3, 1]]],
  ["sge.b i8(a0,d0.l)", [92, 240, 8, 126], [[18, 3, 1]]],
  ["sge.b i8(a0,a0.l)", [92, 240, 136, 126], [[18, 3, 1]]],
  ["sge.b (xxx).W", [92, 248, 2, 0], [[16, 3, 1]]],
  ["sge.b (xxx).L", [92, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["sgt.b d0", [94, 192], [[4, 1, 0], [6, 1, 0]]],
  ["sgt.b (a0)", [94, 208], [[12, 2, 1]]],
  ["sgt.b (a0)+", [94, 216], [[12, 2, 1]]],
  ["sgt.b -(a0)", [94, 224], [[14, 2, 1]]],
  ["sgt.b i16(a0)", [94, 232, 127, 254], [[16, 3, 1]]],
  ["sgt.b i8(a0,d0.w)", [94, 240, 0, 126], [[18, 3, 1]]],
  ["sgt.b i8(a0,a0.w)", [94, 240, 128, 126], [[18, 3, 1]]],
  ["sgt.b i8(a0,d0.l)", [94, 240, 8, 126], [[18, 3, 1]]],
  ["sgt.b i8(a0,a0.l)", [94, 240, 136, 126], [[18, 3, 1]]],
  ["sgt.b (xxx).W", [94, 248, 2, 0], [[16, 3, 1]]],
  ["sgt.b (xxx).L", [94, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["shi.b d0", [82, 192], [[4, 1, 0], [6, 1, 0]]],
  ["shi.b (a0)", [82, 208], [[12, 2, 1]]],
  ["shi.b (a0)+", [82, 216], [[12, 2, 1]]],
  ["shi.b -(a0)", [82, 224], [[14, 2, 1]]],
  ["shi.b i16(a0)", [82, 232, 127, 254], [[16, 3, 1]]],
  ["shi.b i8(a0,d0.w)", [82, 240, 0, 126], [[18, 3, 1]]],
  ["shi.b i8(a0,a0.w)", [82, 240, 128, 126], [[18, 3, 1]]],
  ["shi.b i8(a0,d0.l)", [82, 240, 8, 126], [[18, 3, 1]]],
  ["shi.b i8(a0,a0.l)", [82, 240, 136, 126], [[18, 3, 1]]],
  ["shi.b (xxx).W", [82, 248, 2, 0], [[16, 3, 1]]],
  ["shi.b (xxx).L", [82, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["sle.b d0", [95, 192], [[4, 1, 0], [6, 1, 0]]],
  ["sle.b (a0)", [95, 208], [[12, 2, 1]]],
  ["sle.b (a0)+", [95, 216], [[12, 2, 1]]],
  ["sle.b -(a0)", [95, 224], [[14, 2, 1]]],
  ["sle.b i16(a0)", [95, 232, 127, 254], [[16, 3, 1]]],
  ["sle.b i8(a0,d0.w)", [95, 240, 0, 126], [[18, 3, 1]]],
  ["sle.b i8(a0,a0.w)", [95, 240, 128, 126], [[18, 3, 1]]],
  ["sle.b i8(a0,d0.l)", [95, 240, 8, 126], [[18, 3, 1]]],
  ["sle.b i8(a0,a0.l)", [95, 240, 136, 126], [[18, 3, 1]]],
  ["sle.b (xxx).W", [95, 248, 2, 0], [[16, 3, 1]]],
  ["sle.b (xxx).L", [95, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["sls.b d0", [83, 192], [[4, 1, 0], [6, 1, 0]]],
  ["sls.b (a0)", [83, 208], [[12, 2, 1]]],
  ["sls.b (a0)+", [83, 216], [[12, 2, 1]]],
  ["sls.b -(a0)", [83, 224], [[14, 2, 1]]],
  ["sls.b i16(a0)", [83, 232, 127, 254], [[16, 3, 1]]],
  ["sls.b i8(a0,d0.w)", [83, 240, 0, 126], [[18, 3, 1]]],
  ["sls.b i8(a0,a0.w)", [83, 240, 128, 126], [[18, 3, 1]]],
  ["sls.b i8(a0,d0.l)", [83, 240, 8, 126], [[18, 3, 1]]],
  ["sls.b i8(a0,a0.l)", [83, 240, 136, 126], [[18, 3, 1]]],
  ["sls.b (xxx).W", [83, 248, 2, 0], [[16, 3, 1]]],
  ["sls.b (xxx).L", [83, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["slt.b d0", [93, 192], [[4, 1, 0], [6, 1, 0]]],
  ["slt.b (a0)", [93, 208], [[12, 2, 1]]],
  ["slt.b (a0)+", [93, 216], [[12, 2, 1]]],
  ["slt.b -(a0)", [93, 224], [[14, 2, 1]]],
  ["slt.b i16(a0)", [93, 232, 127, 254], [[16, 3, 1]]],
  ["slt.b i8(a0,d0.w)", [93, 240, 0, 126], [[18, 3, 1]]],
  ["slt.b i8(a0,a0.w)", [93, 240, 128, 126], [[18, 3, 1]]],
  ["slt.b i8(a0,d0.l)", [93, 240, 8, 126], [[18, 3, 1]]],
  ["slt.b i8(a0,a0.l)", [93, 240, 136, 126], [[18, 3, 1]]],
  ["slt.b (xxx).W", [93, 248, 2, 0], [[16, 3, 1]]],
  ["slt.b (xxx).L", [93, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["smi.b d0", [91, 192], [[4, 1, 0], [6, 1, 0]]],
  ["smi.b (a0)", [91, 208], [[12, 2, 1]]],
  ["smi.b (a0)+", [91, 216], [[12, 2, 1]]],
  ["smi.b -(a0)", [91, 224], [[14, 2, 1]]],
  ["smi.b i16(a0)", [91, 232, 127, 254], [[16, 3, 1]]],
  ["smi.b i8(a0,d0.w)", [91, 240, 0, 126], [[18, 3, 1]]],
  ["smi.b i8(a0,a0.w)", [91, 240, 128, 126], [[18, 3, 1]]],
  ["smi.b i8(a0,d0.l)", [91, 240, 8, 126], [[18, 3, 1]]],
  ["smi.b i8(a0,a0.l)", [91, 240, 136, 126], [[18, 3, 1]]],
  ["smi.b (xxx).W", [91, 248, 2, 0], [[16, 3, 1]]],
  ["smi.b (xxx).L", [91, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["sne.b d0", [86, 192], [[4, 1, 0], [6, 1, 0]]],
  ["sne.b (a0)", [86, 208], [[12, 2, 1]]],
  ["sne.b (a0)+", [86, 216], [[12, 2, 1]]],
  ["sne.b -(a0)", [86, 224], [[14, 2, 1]]],
  ["sne.b i16(a0)", [86, 232, 127, 254], [[16, 3, 1]]],
  ["sne.b i8(a0,d0.w)", [86, 240, 0, 126], [[18, 3, 1]]],
  ["sne.b i8(a0,a0.w)", [86, 240, 128, 126], [[18, 3, 1]]],
  ["sne.b i8(a0,d0.l)", [86, 240, 8, 126], [[18, 3, 1]]],
  ["sne.b i8(a0,a0.l)", [86, 240, 136, 126], [[18, 3, 1]]],
  ["sne.b (xxx).W", [86, 248, 2, 0], [[16, 3, 1]]],
  ["sne.b (xxx).L", [86, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["spl.b d0", [90, 192], [[4, 1, 0], [6, 1, 0]]],
  ["spl.b (a0)", [90, 208], [[12, 2, 1]]],
  ["spl.b (a0)+", [90, 216], [[12, 2, 1]]],
  ["spl.b -(a0)", [90, 224], [[14, 2, 1]]],
  ["spl.b i16(a0)", [90, 232, 127, 254], [[16, 3, 1]]],
  ["spl.b i8(a0,d0.w)", [90, 240, 0, 126], [[18, 3, 1]]],
  ["spl.b i8(a0,a0.w)", [90, 240, 128, 126], [[18, 3, 1]]],
  ["spl.b i8(a0,d0.l)", [90, 240, 8, 126], [[18, 3, 1]]],
  ["spl.b i8(a0,a0.l)", [90, 240, 136, 126], [[18, 3, 1]]],
  ["spl.b (xxx).W", [90, 248, 2, 0], [[16, 3, 1]]],
  ["spl.b (xxx).L", [90, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["svc.b d0", [88, 192], [[4, 1, 0], [6, 1, 0]]],
  ["svc.b (a0)", [88, 208], [[12, 2, 1]]],
  ["svc.b (a0)+", [88, 216], [[12, 2, 1]]],
  ["svc.b -(a0)", [88, 224], [[14, 2, 1]]],
  ["svc.b i16(a0)", [88, 232, 127, 254], [[16, 3, 1]]],
  ["svc.b i8(a0,d0.w)", [88, 240, 0, 126], [[18, 3, 1]]],
  ["svc.b i8(a0,a0.w)", [88, 240, 128, 126], [[18, 3, 1]]],
  ["svc.b i8(a0,d0.l)", [88, 240, 8, 126], [[18, 3, 1]]],
  ["svc.b i8(a0,a0.l)", [88, 240, 136, 126], [[18, 3, 1]]],
  ["svc.b (xxx).W", [88, 248, 2, 0], [[16, 3, 1]]],
  ["svc.b (xxx).L", [88, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["svs.b d0", [89, 192], [[4, 1, 0], [6, 1, 0]]],
  ["svs.b (a0)", [89, 208], [[12, 2, 1]]],
  ["svs.b (a0)+", [89, 216], [[12, 2, 1]]],
  ["svs.b -(a0)", [89, 224], [[14, 2, 1]]],
  ["svs.b i16(a0)", [89, 232, 127, 254], [[16, 3, 1]]],
  ["svs.b i8(a0,d0.w)", [89, 240, 0, 126], [[18, 3, 1]]],
  ["svs.b i8(a0,a0.w)", [89, 240, 128, 126], [[18, 3, 1]]],
  ["svs.b i8(a0,d0.l)", [89, 240, 8, 126], [[18, 3, 1]]],
  ["svs.b i8(a0,a0.l)", [89, 240, 136, 126], [[18, 3, 1]]],
  ["svs.b (xxx).W", [89, 248, 2, 0], [[16, 3, 1]]],
  ["svs.b (xxx).L", [89, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["bra.s aaa", [96, 254], [[10, 2, 0]]],
  ["bra.b aaa", [96, 254], [[10, 2, 0]]],
  ["bra.w aaa", [96, 0, 255, 254], [[10, 2, 0]]],
  ["bsr.s aaa", [97, 254], [[18, 2, 2]]],
  ["bsr.b aaa", [97, 254], [[18, 2, 2]]],
  ["bsr.w aaa", [97, 0, 255, 254], [[18, 2, 2]]],
  ["bcc.s aaa", [100, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bcc.b aaa", [100, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bcc.w aaa", [100, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["bhs.s aaa", [100, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bhs.b aaa", [100, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bhs.w aaa", [100, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["bcs.s aaa", [101, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bcs.b aaa", [101, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bcs.w aaa", [101, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["blo.s aaa", [101, 254], [[10, 2, 0], [8, 1, 0]]],
  ["blo.b aaa", [101, 254], [[10, 2, 0], [8, 1, 0]]],
  ["blo.w aaa", [101, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["beq.s bbb", [103, 254], [[10, 2, 0], [8, 1, 0]]],
  ["beq.b bbb", [103, 254], [[10, 2, 0], [8, 1, 0]]],
  ["beq.w bbb", [103, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["bge.s bbb", [108, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bge.b bbb", [108, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bge.w bbb", [108, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["bgt.s bbb", [110, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bgt.b bbb", [110, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bgt.w bbb", [110, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["bhi.s bbb", [98, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bhi.b bbb", [98, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bhi.w bbb", [98, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["ble.s ccc", [111, 254], [[10, 2, 0], [8, 1, 0]]],
  ["ble.b ccc", [111, 254], [[10, 2, 0], [8, 1, 0]]],
  ["ble.w ccc", [111, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["bls.s ccc", [99, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bls.b ccc", [99, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bls.w ccc", [99, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["blt.s ccc", [109, 254], [[10, 2, 0], [8, 1, 0]]],
  ["blt.b ccc", [109, 254], [[10, 2, 0], [8, 1, 0]]],
  ["blt.w ccc", [109, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["bmi.s ccc", [107, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bmi.b ccc", [107, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bmi.w ccc", [107, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["bne.s ddd", [102, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bne.b ddd", [102, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bne.w ddd", [102, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["bpl.s ddd", [106, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bpl.b ddd", [106, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bpl.w ddd", [106, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["bvc.s ddd", [104, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bvc.b ddd", [104, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bvc.w ddd", [104, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["bvs.s ddd", [105, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bvs.b ddd", [105, 254], [[10, 2, 0], [8, 1, 0]]],
  ["bvs.w ddd", [105, 0, 255, 254], [[10, 2, 0], [12, 2, 0]]],
  ["moveq #i8,d0", [112, 126], [[4, 1, 0]]],
  ["abcd.b d0,d0", [193, 0], [[6, 1, 0]]],
  ["abcd.b -(a0),-(a0)", [193, 8], [[18, 3, 1]]],
  ["sbcd.b d0,d0", [129, 0], [[6, 1, 0]]],
  ["sbcd.b -(a0),-(a0)", [129, 8], [[18, 3, 1]]],
  ["and.b d0,d0", [192, 0], [[4, 1, 0]]],
  ["and.b (a0),d0", [192, 16], [[8, 2, 0]]],
  ["and.b (a0)+,d0", [192, 24], [[8, 2, 0]]],
  ["and.b -(a0),d0", [192, 32], [[10, 2, 0]]],
  ["and.b i16(a0),d0", [192, 40, 127, 254], [[12, 3, 0]]],
  ["and.b *+i16(pc),d0", [192, 58, 127, 252], [[12, 3, 0]]],
  ["and.b i8(a0,d0.w),d0", [192, 48, 0, 126], [[14, 3, 0]]],
  ["and.b i8(a0,a0.w),d0", [192, 48, 128, 126], [[14, 3, 0]]],
  ["and.b i8(a0,d0.l),d0", [192, 48, 8, 126], [[14, 3, 0]]],
  ["and.b i8(a0,a0.l),d0", [192, 48, 136, 126], [[14, 3, 0]]],
  ["and.b *+i8(pc,d0.w),d0", [192, 59, 0, 124], [[14, 3, 0]]],
  ["and.b *+i8(pc,a0.w),d0", [192, 59, 128, 124], [[14, 3, 0]]],
  ["and.b *+i8(pc,d0.l),d0", [192, 59, 8, 124], [[14, 3, 0]]],
  ["and.b *+i8(pc,a0.l),d0", [192, 59, 136, 124], [[14, 3, 0]]],
  ["and.b (xxx).w,d0", [192, 56, 2, 0], [[12, 3, 0]]],
  ["and.b (xxx).l,d0", [192, 57, 0, 0, 2, 0], [[16, 4, 0]]],
  ["and.w d0,d0", [192, 64], [[4, 1, 0]]],
  ["and.w (a0),d0", [192, 80], [[8, 2, 0]]],
  ["and.w (a0)+,d0", [192, 88], [[8, 2, 0]]],
  ["and.w -(a0),d0", [192, 96], [[10, 2, 0]]],
  ["and.w i16(a0),d0", [192, 104, 127, 254], [[12, 3, 0]]],
  ["and.w *+i16(pc),d0", [192, 122, 127, 252], [[12, 3, 0]]],
  ["and.w i8(a0,d0.w),d0", [192, 112, 0, 126], [[14, 3, 0]]],
  ["and.w i8(a0,a0.w),d0", [192, 112, 128, 126], [[14, 3, 0]]],
  ["and.w i8(a0,d0.l),d0", [192, 112, 8, 126], [[14, 3, 0]]],
  ["and.w i8(a0,a0.l),d0", [192, 112, 136, 126], [[14, 3, 0]]],
  ["and.w *+i8(pc,d0.w),d0", [192, 123, 0, 124], [[14, 3, 0]]],
  ["and.w *+i8(pc,a0.w),d0", [192, 123, 128, 124], [[14, 3, 0]]],
  ["and.w *+i8(pc,d0.l),d0", [192, 123, 8, 124], [[14, 3, 0]]],
  ["and.w *+i8(pc,a0.l),d0", [192, 123, 136, 124], [[14, 3, 0]]],
  ["and.w (xxx).w,d0", [192, 120, 2, 0], [[12, 3, 0]]],
  ["and.w (xxx).l,d0", [192, 121, 0, 0, 2, 0], [[16, 4, 0]]],
  ["and.l d0,d0", [192, 128], [[8, 1, 0]]],
  ["and.l (a0),d0", [192, 144], [[14, 3, 0]]],
  ["and.l (a0)+,d0", [192, 152], [[14, 3, 0]]],
  ["and.l -(a0),d0", [192, 160], [[16, 3, 0]]],
  ["and.l i16(a0),d0", [192, 168, 127, 254], [[18, 4, 0]]],
  ["and.l *+i16(pc),d0", [192, 186, 127, 252], [[18, 4, 0]]],
  ["and.l i8(a0,d0.w),d0", [192, 176, 0, 126], [[20, 4, 0]]],
  ["and.l i8(a0,a0.w),d0", [192, 176, 128, 126], [[20, 4, 0]]],
  ["and.l i8(a0,d0.l),d0", [192, 176, 8, 126], [[20, 4, 0]]],
  ["and.l i8(a0,a0.l),d0", [192, 176, 136, 126], [[20, 4, 0]]],
  ["and.l *+i8(pc,d0.w),d0", [192, 187, 0, 124], [[20, 4, 0]]],
  ["and.l *+i8(pc,a0.w),d0", [192, 187, 128, 124], [[20, 4, 0]]],
  ["and.l *+i8(pc,d0.l),d0", [192, 187, 8, 124], [[20, 4, 0]]],
  ["and.l *+i8(pc,a0.l),d0", [192, 187, 136, 124], [[20, 4, 0]]],
  ["and.l (xxx).w,d0", [192, 184, 2, 0], [[18, 4, 0]]],
  ["and.l (xxx).l,d0", [192, 185, 0, 0, 2, 0], [[22, 5, 0]]],
  ["and.b d0,(a0)", [193, 16], [[12, 2, 1]]],
  ["and.b d0,(a0)+", [193, 24], [[12, 2, 1]]],
  ["and.b d0,-(a0)", [193, 32], [[14, 2, 1]]],
  ["and.b d0,i16(a0)", [193, 40, 127, 254], [[16, 3, 1]]],
  ["and.b d0,i8(a0,d0.w)", [193, 48, 0, 126], [[18, 3, 1]]],
  ["and.b d0,i8(a0,a0.w)", [193, 48, 128, 126], [[18, 3, 1]]],
  ["and.b d0,i8(a0,d0.l)", [193, 48, 8, 126], [[18, 3, 1]]],
  ["and.b d0,i8(a0,a0.l)", [193, 48, 136, 126], [[18, 3, 1]]],
  ["and.b d0,(xxx).w", [193, 56, 2, 0], [[16, 3, 1]]],
  ["and.b d0,(xxx).l", [193, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["and.w d0,(a0)", [193, 80], [[12, 2, 1]]],
  ["and.w d0,(a0)+", [193, 88], [[12, 2, 1]]],
  ["and.w d0,-(a0)", [193, 96], [[14, 2, 1]]],
  ["and.w d0,i16(a0)", [193, 104, 127, 254], [[16, 3, 1]]],
  ["and.w d0,i8(a0,d0.w)", [193, 112, 0, 126], [[18, 3, 1]]],
  ["and.w d0,i8(a0,a0.w)", [193, 112, 128, 126], [[18, 3, 1]]],
  ["and.w d0,i8(a0,d0.l)", [193, 112, 8, 126], [[18, 3, 1]]],
  ["and.w d0,i8(a0,a0.l)", [193, 112, 136, 126], [[18, 3, 1]]],
  ["and.w d0,(xxx).w", [193, 120, 2, 0], [[16, 3, 1]]],
  ["and.w d0,(xxx).l", [193, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["and.l d0,(a0)", [193, 144], [[20, 3, 2]]],
  ["and.l d0,(a0)+", [193, 152], [[20, 3, 2]]],
  ["and.l d0,-(a0)", [193, 160], [[22, 3, 2]]],
  ["and.l d0,i16(a0)", [193, 168, 127, 254], [[24, 4, 2]]],
  ["and.l d0,i8(a0,d0.w)", [193, 176, 0, 126], [[26, 4, 2]]],
  ["and.l d0,i8(a0,a0.w)", [193, 176, 128, 126], [[26, 4, 2]]],
  ["and.l d0,i8(a0,d0.l)", [193, 176, 8, 126], [[26, 4, 2]]],
  ["and.l d0,i8(a0,a0.l)", [193, 176, 136, 126], [[26, 4, 2]]],
  ["and.l d0,(xxx).w", [193, 184, 2, 0], [[24, 4, 2]]],
  ["and.l d0,(xxx).l", [193, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["or.b d0,d0", [128, 0], [[4, 1, 0]]],
  ["or.b (a0),d0", [128, 16], [[8, 2, 0]]],
  ["or.b (a0)+,d0", [128, 24], [[8, 2, 0]]],
  ["or.b -(a0),d0", [128, 32], [[10, 2, 0]]],
  ["or.b i16(a0),d0", [128, 40, 127, 254], [[12, 3, 0]]],
  ["or.b *+i16(pc),d0", [128, 58, 127, 252], [[12, 3, 0]]],
  ["or.b i8(a0,d0.w),d0", [128, 48, 0, 126], [[14, 3, 0]]],
  ["or.b i8(a0,a0.w),d0", [128, 48, 128, 126], [[14, 3, 0]]],
  ["or.b i8(a0,d0.l),d0", [128, 48, 8, 126], [[14, 3, 0]]],
  ["or.b i8(a0,a0.l),d0", [128, 48, 136, 126], [[14, 3, 0]]],
  ["or.b *+i8(pc,d0.w),d0", [128, 59, 0, 124], [[14, 3, 0]]],
  ["or.b *+i8(pc,a0.w),d0", [128, 59, 128, 124], [[14, 3, 0]]],
  ["or.b *+i8(pc,d0.l),d0", [128, 59, 8, 124], [[14, 3, 0]]],
  ["or.b *+i8(pc,a0.l),d0", [128, 59, 136, 124], [[14, 3, 0]]],
  ["or.b (xxx).w,d0", [128, 56, 2, 0], [[12, 3, 0]]],
  ["or.b (xxx).l,d0", [128, 57, 0, 0, 2, 0], [[16, 4, 0]]],
  ["or.w d0,d0", [128, 64], [[4, 1, 0]]],
  ["or.w (a0),d0", [128, 80], [[8, 2, 0]]],
  ["or.w (a0)+,d0", [128, 88], [[8, 2, 0]]],
  ["or.w -(a0),d0", [128, 96], [[10, 2, 0]]],
  ["or.w i16(a0),d0", [128, 104, 127, 254], [[12, 3, 0]]],
  ["or.w *+i16(pc),d0", [128, 122, 127, 252], [[12, 3, 0]]],
  ["or.w i8(a0,d0.w),d0", [128, 112, 0, 126], [[14, 3, 0]]],
  ["or.w i8(a0,a0.w),d0", [128, 112, 128, 126], [[14, 3, 0]]],
  ["or.w i8(a0,d0.l),d0", [128, 112, 8, 126], [[14, 3, 0]]],
  ["or.w i8(a0,a0.l),d0", [128, 112, 136, 126], [[14, 3, 0]]],
  ["or.w *+i8(pc,d0.w),d0", [128, 123, 0, 124], [[14, 3, 0]]],
  ["or.w *+i8(pc,a0.w),d0", [128, 123, 128, 124], [[14, 3, 0]]],
  ["or.w *+i8(pc,d0.l),d0", [128, 123, 8, 124], [[14, 3, 0]]],
  ["or.w *+i8(pc,a0.l),d0", [128, 123, 136, 124], [[14, 3, 0]]],
  ["or.w (xxx).w,d0", [128, 120, 2, 0], [[12, 3, 0]]],
  ["or.w (xxx).l,d0", [128, 121, 0, 0, 2, 0], [[16, 4, 0]]],
  ["or.l d0,d0", [128, 128], [[8, 1, 0]]],
  ["or.l (a0),d0", [128, 144], [[14, 3, 0]]],
  ["or.l (a0)+,d0", [128, 152], [[14, 3, 0]]],
  ["or.l -(a0),d0", [128, 160], [[16, 3, 0]]],
  ["or.l i16(a0),d0", [128, 168, 127, 254], [[18, 4, 0]]],
  ["or.l *+i16(pc),d0", [128, 186, 127, 252], [[18, 4, 0]]],
  ["or.l i8(a0,d0.w),d0", [128, 176, 0, 126], [[20, 4, 0]]],
  ["or.l i8(a0,a0.w),d0", [128, 176, 128, 126], [[20, 4, 0]]],
  ["or.l i8(a0,d0.l),d0", [128, 176, 8, 126], [[20, 4, 0]]],
  ["or.l i8(a0,a0.l),d0", [128, 176, 136, 126], [[20, 4, 0]]],
  ["or.l *+i8(pc,d0.w),d0", [128, 187, 0, 124], [[20, 4, 0]]],
  ["or.l *+i8(pc,a0.w),d0", [128, 187, 128, 124], [[20, 4, 0]]],
  ["or.l *+i8(pc,d0.l),d0", [128, 187, 8, 124], [[20, 4, 0]]],
  ["or.l *+i8(pc,a0.l),d0", [128, 187, 136, 124], [[20, 4, 0]]],
  ["or.l (xxx).w,d0", [128, 184, 2, 0], [[18, 4, 0]]],
  ["or.l (xxx).l,d0", [128, 185, 0, 0, 2, 0], [[22, 5, 0]]],
  ["or.b d0,(a0)", [129, 16], [[12, 2, 1]]],
  ["or.b d0,(a0)+", [129, 24], [[12, 2, 1]]],
  ["or.b d0,-(a0)", [129, 32], [[14, 2, 1]]],
  ["or.b d0,i16(a0)", [129, 40, 127, 254], [[16, 3, 1]]],
  ["or.b d0,i8(a0,d0.w)", [129, 48, 0, 126], [[18, 3, 1]]],
  ["or.b d0,i8(a0,a0.w)", [129, 48, 128, 126], [[18, 3, 1]]],
  ["or.b d0,i8(a0,d0.l)", [129, 48, 8, 126], [[18, 3, 1]]],
  ["or.b d0,i8(a0,a0.l)", [129, 48, 136, 126], [[18, 3, 1]]],
  ["or.b d0,(xxx).w", [129, 56, 2, 0], [[16, 3, 1]]],
  ["or.b d0,(xxx).l", [129, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["or.w d0,(a0)", [129, 80], [[12, 2, 1]]],
  ["or.w d0,(a0)+", [129, 88], [[12, 2, 1]]],
  ["or.w d0,-(a0)", [129, 96], [[14, 2, 1]]],
  ["or.w d0,i16(a0)", [129, 104, 127, 254], [[16, 3, 1]]],
  ["or.w d0,i8(a0,d0.w)", [129, 112, 0, 126], [[18, 3, 1]]],
  ["or.w d0,i8(a0,a0.w)", [129, 112, 128, 126], [[18, 3, 1]]],
  ["or.w d0,i8(a0,d0.l)", [129, 112, 8, 126], [[18, 3, 1]]],
  ["or.w d0,i8(a0,a0.l)", [129, 112, 136, 126], [[18, 3, 1]]],
  ["or.w d0,(xxx).w", [129, 120, 2, 0], [[16, 3, 1]]],
  ["or.w d0,(xxx).l", [129, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["or.l d0,(a0)", [129, 144], [[20, 3, 2]]],
  ["or.l d0,(a0)+", [129, 152], [[20, 3, 2]]],
  ["or.l d0,-(a0)", [129, 160], [[22, 3, 2]]],
  ["or.l d0,i16(a0)", [129, 168, 127, 254], [[24, 4, 2]]],
  ["or.l d0,i8(a0,d0.w)", [129, 176, 0, 126], [[26, 4, 2]]],
  ["or.l d0,i8(a0,a0.w)", [129, 176, 128, 126], [[26, 4, 2]]],
  ["or.l d0,i8(a0,d0.l)", [129, 176, 8, 126], [[26, 4, 2]]],
  ["or.l d0,i8(a0,a0.l)", [129, 176, 136, 126], [[26, 4, 2]]],
  ["or.l d0,(xxx).w", [129, 184, 2, 0], [[24, 4, 2]]],
  ["or.l d0,(xxx).l", [129, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["divu.w d0,d0", [128, 192], [[76, 1, 0], [76+64, 1, 0]]],
  ["divu.w (a0),d0", [128, 208], [[80, 2, 0], [80+64, 2, 0]]],
  ["divu.w (a0)+,d0", [128, 216], [[80, 2, 0], [80+64, 2, 0]]],
  ["divu.w -(a0),d0", [128, 224], [[82, 2, 0], [82+64, 2, 0]]],
  ["divu.w i16(a0),d0", [128, 232, 127, 254], [[84, 3, 0], [84+64, 3, 0]]],
  ["divu.w *+i16(pc),d0", [128, 250, 127, 252], [[84, 3, 0], [84+64, 3, 0]]],
  ["divu.w i8(a0,d0.w),d0", [128, 240, 0, 126], [[86, 3, 0], [86+64, 3, 0]]],
  ["divu.w i8(a0,a0.w),d0", [128, 240, 128, 126], [[86, 3, 0], [86+64, 3, 0]]],
  ["divu.w i8(a0,d0.l),d0", [128, 240, 8, 126], [[86, 3, 0], [86+64, 3, 0]]],
  ["divu.w i8(a0,a0.l),d0", [128, 240, 136, 126], [[86, 3, 0], [86+64, 3, 0]]],
  ["divu.w *+i8(pc,d0.w),d0", [128, 251, 0, 124], [[86, 3, 0], [86+64, 3, 0]]],
  ["divu.w *+i8(pc,a0.w),d0", [128, 251, 128, 124], [[86, 3, 0], [86+64, 3, 0]]],
  ["divu.w *+i8(pc,d0.l),d0", [128, 251, 8, 124], [[86, 3, 0], [86+64, 3, 0]]],
  ["divu.w *+i8(pc,a0.l),d0", [128, 251, 136, 124], [[86, 3, 0], [86+64, 3, 0]]],
  ["divu.w (xxx).w,d0", [128, 248, 2, 0], [[84, 3, 0], [84+64, 3, 0]]],
  ["divu.w (xxx).l,d0", [128, 249, 0, 0, 2, 0], [[88, 4, 0], [88+64, 4, 0]]], // [[88+?, 3, 0]]],
  ["divu.w #i16,d0", [128, 252, 127, 254], [[80, 2, 0], [80+64, 2, 0]]], // [[84+?, 3, 0]]],
  ["divs.w d0,d0", [129, 192], [[120, 1, 0], [120+38, 1, 0]]],
  ["divs.w (a0),d0", [129, 208], [[124, 2, 0], [124+38, 2, 0]]],
  ["divs.w (a0)+,d0", [129, 216], [[124, 2, 0], [124+38, 2, 0]]],
  ["divs.w -(a0),d0", [129, 224], [[126, 2, 0], [126+38, 2, 0]]],
  ["divs.w i16(a0),d0", [129, 232, 127, 254], [[128, 3, 0], [128+38, 3, 0]]],
  ["divs.w *+i16(pc),d0", [129, 250, 127, 252], [[128, 3, 0], [128+38, 3, 0]]],
  ["divs.w i8(a0,d0.w),d0", [129, 240, 0, 126], [[130, 3, 0], [130+38, 3, 0]]],
  ["divs.w i8(a0,a0.w),d0", [129, 240, 128, 126], [[130, 3, 0], [130+38, 3, 0]]],
  ["divs.w i8(a0,d0.l),d0", [129, 240, 8, 126], [[130, 3, 0], [130+38, 3, 0]]],
  ["divs.w i8(a0,a0.l),d0", [129, 240, 136, 126], [[130, 3, 0], [130+38, 3, 0]]],
  ["divs.w *+i8(pc,d0.w),d0", [129, 251, 0, 124], [[130, 3, 0], [130+38, 3, 0]]],
  ["divs.w *+i8(pc,a0.w),d0", [129, 251, 128, 124], [[130, 3, 0], [130+38, 3, 0]]],
  ["divs.w *+i8(pc,d0.l),d0", [129, 251, 8, 124], [[130, 3, 0], [130+38, 3, 0]]],
  ["divs.w *+i8(pc,a0.l),d0", [129, 251, 136, 124], [[130, 3, 0], [130+38, 3, 0]]],
  ["divs.w (xxx).w,d0", [129, 248, 2, 0], [[128, 3, 0], [128+38, 3, 0]]],
  ["divs.w (xxx).l,d0", [129, 249, 0, 0, 2, 0], [[132, 4, 0], [132+38, 4, 0]]], // [[132+?, 3, 0]]],
  ["divs.w #i16,d0", [129, 252, 127, 254], [[124, 2, 0], [124+38, 2, 0]]], // [[128+?, 3, 0]]],
  ["exg.l d0,d0", [193, 64], [[6, 1, 0]]],
  ["exg.l a0,a0", [193, 72], [[6, 1, 0]]],
  ["exg.l d0,a0", [193, 136], [[6, 1, 0]]],
  ["mulu.w d0,d0", [192, 192], [[38+2*0, 1, 0], [38+2*16, 1, 0]]],
  ["mulu.w (a0),d0", [192, 208], [[42+2*0, 2, 0], [42+2*16, 2, 0]]],
  ["mulu.w (a0)+,d0", [192, 216], [[42+2*0, 2, 0], [42+2*16, 2, 0]]],
  ["mulu.w -(a0),d0", [192, 224], [[44+2*0, 2, 0], [44+2*16, 2, 0]]],
  ["mulu.w i16(a0),d0", [192, 232, 127, 254], [[46+2*0, 3, 0], [46+2*16, 3, 0]]],
  ["mulu.w *+i16(pc),d0", [192, 250, 127, 252], [[46+2*0, 3, 0], [46+2*16, 3, 0]]],
  ["mulu.w i8(a0,d0.w),d0", [192, 240, 0, 126], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["mulu.w i8(a0,a0.w),d0", [192, 240, 128, 126], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["mulu.w i8(a0,d0.l),d0", [192, 240, 8, 126], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["mulu.w i8(a0,a0.l),d0", [192, 240, 136, 126], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["mulu.w *+i8(pc,d0.w),d0", [192, 251, 0, 124], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["mulu.w *+i8(pc,a0.w),d0", [192, 251, 128, 124], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["mulu.w *+i8(pc,d0.l),d0", [192, 251, 8, 124], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["mulu.w *+i8(pc,a0.l),d0", [192, 251, 136, 124], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["mulu.w (xxx).w,d0", [192, 248, 2, 0], [[46+2*0, 3, 0], [46+2*16, 3, 0]]],
  ["mulu.w (xxx).l,d0", [192, 249, 0, 0, 2, 0], [[50+2*0, 3, 0], [50+2*16, 3, 0]]],
  ["mulu.w #i16,d0", [192, 252, 127, 254], [[42+2*popCount(i16), 2, 0]]],
  ["muls.w d0,d0", [193, 192], [[38+2*0, 1, 0], [38+2*16, 1, 0]]],
  ["muls.w (a0),d0", [193, 208], [[42+2*0, 2, 0], [42+2*16, 2, 0]]],
  ["muls.w (a0)+,d0", [193, 216], [[42+2*0, 2, 0], [42+2*16, 2, 0]]],
  ["muls.w -(a0),d0", [193, 224], [[44+2*0, 2, 0], [44+2*16, 2, 0]]],
  ["muls.w i16(a0),d0", [193, 232, 127, 254], [[46+2*0, 3, 0], [46+2*16, 3, 0]]],
  ["muls.w *+i16(pc),d0", [193, 250, 127, 252], [[46+2*0, 3, 0], [46+2*16, 3, 0]]],
  ["muls.w i8(a0,d0.w),d0", [193, 240, 0, 126], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["muls.w i8(a0,a0.w),d0", [193, 240, 128, 126], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["muls.w i8(a0,d0.l),d0", [193, 240, 8, 126], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["muls.w i8(a0,a0.l),d0", [193, 240, 136, 126], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["muls.w *+i8(pc,d0.w),d0", [193, 251, 0, 124], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["muls.w *+i8(pc,a0.w),d0", [193, 251, 128, 124], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["muls.w *+i8(pc,d0.l),d0", [193, 251, 8, 124], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["muls.w *+i8(pc,a0.l),d0", [193, 251, 136, 124], [[48+2*0, 3, 0], [48+2*16, 3, 0]]],
  ["muls.w (xxx).w,d0", [193, 248, 2, 0], [[46+2*0, 3, 0], [46+2*16, 3, 0]]],
  ["muls.w (xxx).l,d0", [193, 249, 0, 0, 2, 0], [[50+2*0, 3, 0], [50+2*16, 3, 0]]],
  ["muls.w #i16,d0", [193, 252, 127, 254], [[42+2*popCount((i16 ^ (i16 << 1)) & 0xffff), 2, 0]]],
  ["add.b d0,d0", [208, 0], [[4, 1, 0]]],
  ["add.b (a0),d0", [208, 16], [[8, 2, 0]]],
  ["add.b (a0)+,d0", [208, 24], [[8, 2, 0]]],
  ["add.b -(a0),d0", [208, 32], [[10, 2, 0]]],
  ["add.b i16(a0),d0", [208, 40, 127, 254], [[12, 3, 0]]],
  ["add.b *+i16(pc),d0", [208, 58, 127, 252], [[12, 3, 0]]],
  ["add.b i8(a0,d0.w),d0", [208, 48, 0, 126], [[14, 3, 0]]],
  ["add.b i8(a0,a0.w),d0", [208, 48, 128, 126], [[14, 3, 0]]],
  ["add.b i8(a0,d0.l),d0", [208, 48, 8, 126], [[14, 3, 0]]],
  ["add.b i8(a0,a0.l),d0", [208, 48, 136, 126], [[14, 3, 0]]],
  ["add.b *+i8(pc,d0.w),d0", [208, 59, 0, 124], [[14, 3, 0]]],
  ["add.b *+i8(pc,a0.w),d0", [208, 59, 128, 124], [[14, 3, 0]]],
  ["add.b *+i8(pc,d0.l),d0", [208, 59, 8, 124], [[14, 3, 0]]],
  ["add.b *+i8(pc,a0.l),d0", [208, 59, 136, 124], [[14, 3, 0]]],
  ["add.b (xxx).w,d0", [208, 56, 2, 0], [[12, 3, 0]]],
  ["add.b (xxx).l,d0", [208, 57, 0, 0, 2, 0], [[16, 4, 0]]],
  ["add.w d0,d0", [208, 64], [[4, 1, 0]]],
  ["add.w (a0),d0", [208, 80], [[8, 2, 0]]],
  ["add.w (a0)+,d0", [208, 88], [[8, 2, 0]]],
  ["add.w -(a0),d0", [208, 96], [[10, 2, 0]]],
  ["add.w i16(a0),d0", [208, 104, 127, 254], [[12, 3, 0]]],
  ["add.w *+i16(pc),d0", [208, 122, 127, 252], [[12, 3, 0]]],
  ["add.w i8(a0,d0.w),d0", [208, 112, 0, 126], [[14, 3, 0]]],
  ["add.w i8(a0,a0.w),d0", [208, 112, 128, 126], [[14, 3, 0]]],
  ["add.w i8(a0,d0.l),d0", [208, 112, 8, 126], [[14, 3, 0]]],
  ["add.w i8(a0,a0.l),d0", [208, 112, 136, 126], [[14, 3, 0]]],
  ["add.w *+i8(pc,d0.w),d0", [208, 123, 0, 124], [[14, 3, 0]]],
  ["add.w *+i8(pc,a0.w),d0", [208, 123, 128, 124], [[14, 3, 0]]],
  ["add.w *+i8(pc,d0.l),d0", [208, 123, 8, 124], [[14, 3, 0]]],
  ["add.w *+i8(pc,a0.l),d0", [208, 123, 136, 124], [[14, 3, 0]]],
  ["add.w (xxx).w,d0", [208, 120, 2, 0], [[12, 3, 0]]],
  ["add.w (xxx).l,d0", [208, 121, 0, 0, 2, 0], [[16, 4, 0]]],
  ["add.l d0,d0", [208, 128], [[8, 1, 0]]],
  ["add.l (a0),d0", [208, 144], [[14, 3, 0]]],
  ["add.l (a0)+,d0", [208, 152], [[14, 3, 0]]],
  ["add.l -(a0),d0", [208, 160], [[16, 3, 0]]],
  ["add.l i16(a0),d0", [208, 168, 127, 254], [[18, 4, 0]]],
  ["add.l *+i16(pc),d0", [208, 186, 127, 252], [[18, 4, 0]]],
  ["add.l i8(a0,d0.w),d0", [208, 176, 0, 126], [[20, 4, 0]]],
  ["add.l i8(a0,a0.w),d0", [208, 176, 128, 126], [[20, 4, 0]]],
  ["add.l i8(a0,d0.l),d0", [208, 176, 8, 126], [[20, 4, 0]]],
  ["add.l i8(a0,a0.l),d0", [208, 176, 136, 126], [[20, 4, 0]]],
  ["add.l *+i8(pc,d0.w),d0", [208, 187, 0, 124], [[20, 4, 0]]],
  ["add.l *+i8(pc,a0.w),d0", [208, 187, 128, 124], [[20, 4, 0]]],
  ["add.l *+i8(pc,d0.l),d0", [208, 187, 8, 124], [[20, 4, 0]]],
  ["add.l *+i8(pc,a0.l),d0", [208, 187, 136, 124], [[20, 4, 0]]],
  ["add.l (xxx).w,d0", [208, 184, 2, 0], [[18, 4, 0]]],
  ["add.l (xxx).l,d0", [208, 185, 0, 0, 2, 0], [[22, 5, 0]]],
  ["add.b d0,(a0)", [209, 16], [[12, 2, 1]]],
  ["add.b d0,(a0)+", [209, 24], [[12, 2, 1]]],
  ["add.b d0,-(a0)", [209, 32], [[14, 2, 1]]],
  ["add.b d0,i16(a0)", [209, 40, 127, 254], [[16, 3, 1]]],
  ["add.b d0,i8(a0,d0.w)", [209, 48, 0, 126], [[18, 3, 1]]],
  ["add.b d0,i8(a0,a0.w)", [209, 48, 128, 126], [[18, 3, 1]]],
  ["add.b d0,i8(a0,d0.l)", [209, 48, 8, 126], [[18, 3, 1]]],
  ["add.b d0,i8(a0,a0.l)", [209, 48, 136, 126], [[18, 3, 1]]],
  ["add.b d0,(xxx).w", [209, 56, 2, 0], [[16, 3, 1]]],
  ["add.b d0,(xxx).l", [209, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["add.w d0,(a0)", [209, 80], [[12, 2, 1]]],
  ["add.w d0,(a0)+", [209, 88], [[12, 2, 1]]],
  ["add.w d0,-(a0)", [209, 96], [[14, 2, 1]]],
  ["add.w d0,i16(a0)", [209, 104, 127, 254], [[16, 3, 1]]],
  ["add.w d0,i8(a0,d0.w)", [209, 112, 0, 126], [[18, 3, 1]]],
  ["add.w d0,i8(a0,a0.w)", [209, 112, 128, 126], [[18, 3, 1]]],
  ["add.w d0,i8(a0,d0.l)", [209, 112, 8, 126], [[18, 3, 1]]],
  ["add.w d0,i8(a0,a0.l)", [209, 112, 136, 126], [[18, 3, 1]]],
  ["add.w d0,(xxx).w", [209, 120, 2, 0], [[16, 3, 1]]],
  ["add.w d0,(xxx).l", [209, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["add.l d0,(a0)", [209, 144], [[20, 3, 2]]],
  ["add.l d0,(a0)+", [209, 152], [[20, 3, 2]]],
  ["add.l d0,-(a0)", [209, 160], [[22, 3, 2]]],
  ["add.l d0,i16(a0)", [209, 168, 127, 254], [[24, 4, 2]]],
  ["add.l d0,i8(a0,d0.w)", [209, 176, 0, 126], [[26, 4, 2]]],
  ["add.l d0,i8(a0,a0.w)", [209, 176, 128, 126], [[26, 4, 2]]],
  ["add.l d0,i8(a0,d0.l)", [209, 176, 8, 126], [[26, 4, 2]]],
  ["add.l d0,i8(a0,a0.l)", [209, 176, 136, 126], [[26, 4, 2]]],
  ["add.l d0,(xxx).w", [209, 184, 2, 0], [[24, 4, 2]]],
  ["add.l d0,(xxx).l", [209, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["sub.b d0,d0", [144, 0], [[4, 1, 0]]],
  ["sub.b (a0),d0", [144, 16], [[8, 2, 0]]],
  ["sub.b (a0)+,d0", [144, 24], [[8, 2, 0]]],
  ["sub.b -(a0),d0", [144, 32], [[10, 2, 0]]],
  ["sub.b i16(a0),d0", [144, 40, 127, 254], [[12, 3, 0]]],
  ["sub.b *+i16(pc),d0", [144, 58, 127, 252], [[12, 3, 0]]],
  ["sub.b i8(a0,d0.w),d0", [144, 48, 0, 126], [[14, 3, 0]]],
  ["sub.b i8(a0,a0.w),d0", [144, 48, 128, 126], [[14, 3, 0]]],
  ["sub.b i8(a0,d0.l),d0", [144, 48, 8, 126], [[14, 3, 0]]],
  ["sub.b i8(a0,a0.l),d0", [144, 48, 136, 126], [[14, 3, 0]]],
  ["sub.b *+i8(pc,d0.w),d0", [144, 59, 0, 124], [[14, 3, 0]]],
  ["sub.b *+i8(pc,a0.w),d0", [144, 59, 128, 124], [[14, 3, 0]]],
  ["sub.b *+i8(pc,d0.l),d0", [144, 59, 8, 124], [[14, 3, 0]]],
  ["sub.b *+i8(pc,a0.l),d0", [144, 59, 136, 124], [[14, 3, 0]]],
  ["sub.b (xxx).w,d0", [144, 56, 2, 0], [[12, 3, 0]]],
  ["sub.b (xxx).l,d0", [144, 57, 0, 0, 2, 0], [[16, 4, 0]]],
  ["sub.w d0,d0", [144, 64], [[4, 1, 0]]],
  ["sub.w (a0),d0", [144, 80], [[8, 2, 0]]],
  ["sub.w (a0)+,d0", [144, 88], [[8, 2, 0]]],
  ["sub.w -(a0),d0", [144, 96], [[10, 2, 0]]],
  ["sub.w i16(a0),d0", [144, 104, 127, 254], [[12, 3, 0]]],
  ["sub.w *+i16(pc),d0", [144, 122, 127, 252], [[12, 3, 0]]],
  ["sub.w i8(a0,d0.w),d0", [144, 112, 0, 126], [[14, 3, 0]]],
  ["sub.w i8(a0,a0.w),d0", [144, 112, 128, 126], [[14, 3, 0]]],
  ["sub.w i8(a0,d0.l),d0", [144, 112, 8, 126], [[14, 3, 0]]],
  ["sub.w i8(a0,a0.l),d0", [144, 112, 136, 126], [[14, 3, 0]]],
  ["sub.w *+i8(pc,d0.w),d0", [144, 123, 0, 124], [[14, 3, 0]]],
  ["sub.w *+i8(pc,a0.w),d0", [144, 123, 128, 124], [[14, 3, 0]]],
  ["sub.w *+i8(pc,d0.l),d0", [144, 123, 8, 124], [[14, 3, 0]]],
  ["sub.w *+i8(pc,a0.l),d0", [144, 123, 136, 124], [[14, 3, 0]]],
  ["sub.w (xxx).w,d0", [144, 120, 2, 0], [[12, 3, 0]]],
  ["sub.w (xxx).l,d0", [144, 121, 0, 0, 2, 0], [[16, 4, 0]]],
  ["sub.l d0,d0", [144, 128], [[8, 1, 0]]],
  ["sub.l (a0),d0", [144, 144], [[14, 3, 0]]],
  ["sub.l (a0)+,d0", [144, 152], [[14, 3, 0]]],
  ["sub.l -(a0),d0", [144, 160], [[16, 3, 0]]],
  ["sub.l i16(a0),d0", [144, 168, 127, 254], [[18, 4, 0]]],
  ["sub.l *+i16(pc),d0", [144, 186, 127, 252], [[18, 4, 0]]],
  ["sub.l i8(a0,d0.w),d0", [144, 176, 0, 126], [[20, 4, 0]]],
  ["sub.l i8(a0,a0.w),d0", [144, 176, 128, 126], [[20, 4, 0]]],
  ["sub.l i8(a0,d0.l),d0", [144, 176, 8, 126], [[20, 4, 0]]],
  ["sub.l i8(a0,a0.l),d0", [144, 176, 136, 126], [[20, 4, 0]]],
  ["sub.l *+i8(pc,d0.w),d0", [144, 187, 0, 124], [[20, 4, 0]]],
  ["sub.l *+i8(pc,a0.w),d0", [144, 187, 128, 124], [[20, 4, 0]]],
  ["sub.l *+i8(pc,d0.l),d0", [144, 187, 8, 124], [[20, 4, 0]]],
  ["sub.l *+i8(pc,a0.l),d0", [144, 187, 136, 124], [[20, 4, 0]]],
  ["sub.l (xxx).w,d0", [144, 184, 2, 0], [[18, 4, 0]]],
  ["sub.l (xxx).l,d0", [144, 185, 0, 0, 2, 0], [[22, 5, 0]]],
  ["sub.b d0,(a0)", [145, 16], [[12, 2, 1]]],
  ["sub.b d0,(a0)+", [145, 24], [[12, 2, 1]]],
  ["sub.b d0,-(a0)", [145, 32], [[14, 2, 1]]],
  ["sub.b d0,i16(a0)", [145, 40, 127, 254], [[16, 3, 1]]],
  ["sub.b d0,i8(a0,d0.w)", [145, 48, 0, 126], [[18, 3, 1]]],
  ["sub.b d0,i8(a0,a0.w)", [145, 48, 128, 126], [[18, 3, 1]]],
  ["sub.b d0,i8(a0,d0.l)", [145, 48, 8, 126], [[18, 3, 1]]],
  ["sub.b d0,i8(a0,a0.l)", [145, 48, 136, 126], [[18, 3, 1]]],
  ["sub.b d0,(xxx).w", [145, 56, 2, 0], [[16, 3, 1]]],
  ["sub.b d0,(xxx).l", [145, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["sub.w d0,(a0)", [145, 80], [[12, 2, 1]]],
  ["sub.w d0,(a0)+", [145, 88], [[12, 2, 1]]],
  ["sub.w d0,-(a0)", [145, 96], [[14, 2, 1]]],
  ["sub.w d0,i16(a0)", [145, 104, 127, 254], [[16, 3, 1]]],
  ["sub.w d0,i8(a0,d0.w)", [145, 112, 0, 126], [[18, 3, 1]]],
  ["sub.w d0,i8(a0,a0.w)", [145, 112, 128, 126], [[18, 3, 1]]],
  ["sub.w d0,i8(a0,d0.l)", [145, 112, 8, 126], [[18, 3, 1]]],
  ["sub.w d0,i8(a0,a0.l)", [145, 112, 136, 126], [[18, 3, 1]]],
  ["sub.w d0,(xxx).w", [145, 120, 2, 0], [[16, 3, 1]]],
  ["sub.w d0,(xxx).l", [145, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["sub.l d0,(a0)", [145, 144], [[20, 3, 2]]],
  ["sub.l d0,(a0)+", [145, 152], [[20, 3, 2]]],
  ["sub.l d0,-(a0)", [145, 160], [[22, 3, 2]]],
  ["sub.l d0,i16(a0)", [145, 168, 127, 254], [[24, 4, 2]]],
  ["sub.l d0,i8(a0,d0.w)", [145, 176, 0, 126], [[26, 4, 2]]],
  ["sub.l d0,i8(a0,a0.w)", [145, 176, 128, 126], [[26, 4, 2]]],
  ["sub.l d0,i8(a0,d0.l)", [145, 176, 8, 126], [[26, 4, 2]]],
  ["sub.l d0,i8(a0,a0.l)", [145, 176, 136, 126], [[26, 4, 2]]],
  ["sub.l d0,(xxx).w", [145, 184, 2, 0], [[24, 4, 2]]],
  ["sub.l d0,(xxx).l", [145, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["adda.w d0,a0", [208, 192], [[8, 1, 0]]],
  ["adda.w a0,a0", [208, 200], [[8, 1, 0]]],
  ["adda.w (a0),a0", [208, 208], [[12, 2, 0]]],
  ["adda.w (a0)+,a0", [208, 216], [[12, 2, 0]]],
  ["adda.w -(a0),a0", [208, 224], [[14, 2, 0]]],
  ["adda.w i16(a0),a0", [208, 232, 127, 254], [[16, 3, 0]]],
  ["adda.w *+i16(pc),a0", [208, 250, 127, 252], [[16, 3, 0]]],
  ["adda.w i8(a0,d0.w),a0", [208, 240, 0, 126], [[18, 3, 0]]],
  ["adda.w i8(a0,a0.w),a0", [208, 240, 128, 126], [[18, 3, 0]]],
  ["adda.w i8(a0,d0.l),a0", [208, 240, 8, 126], [[18, 3, 0]]],
  ["adda.w i8(a0,a0.l),a0", [208, 240, 136, 126], [[18, 3, 0]]],
  ["adda.w *+i8(pc,d0.w),a0", [208, 251, 0, 124], [[18, 3, 0]]],
  ["adda.w *+i8(pc,a0.w),a0", [208, 251, 128, 124], [[18, 3, 0]]],
  ["adda.w *+i8(pc,d0.l),a0", [208, 251, 8, 124], [[18, 3, 0]]],
  ["adda.w *+i8(pc,a0.l),a0", [208, 251, 136, 124], [[18, 3, 0]]],
  ["adda.w (xxx).w,a0", [208, 248, 2, 0], [[16, 3, 0]]],
  ["adda.w (xxx).l,a0", [208, 249, 0, 0, 2, 0], [[20, 4, 0]]],
  ["adda.w #i16,a0", [208, 252, 127, 254], [[12, 2, 0]]],
  ["adda.l d0,a0", [209, 192], [[8, 1, 0]]],
  ["adda.l a0,a0", [209, 200], [[8, 1, 0]]],
  ["adda.l (a0),a0", [209, 208], [[14, 3, 0]]],
  ["adda.l (a0)+,a0", [209, 216], [[14, 3, 0]]],
  ["adda.l -(a0),a0", [209, 224], [[16, 3, 0]]],
  ["adda.l i16(a0),a0", [209, 232, 127, 254], [[18, 4, 0]]],
  ["adda.l *+i16(pc),a0", [209, 250, 127, 252], [[18, 4, 0]]],
  ["adda.l i8(a0,d0.w),a0", [209, 240, 0, 126], [[20, 4, 0]]],
  ["adda.l i8(a0,a0.w),a0", [209, 240, 128, 126], [[20, 4, 0]]],
  ["adda.l i8(a0,d0.l),a0", [209, 240, 8, 126], [[20, 4, 0]]],
  ["adda.l i8(a0,a0.l),a0", [209, 240, 136, 126], [[20, 4, 0]]],
  ["adda.l *+i8(pc,d0.w),a0", [209, 251, 0, 124], [[20, 4, 0]]],
  ["adda.l *+i8(pc,a0.w),a0", [209, 251, 128, 124], [[20, 4, 0]]],
  ["adda.l *+i8(pc,d0.l),a0", [209, 251, 8, 124], [[20, 4, 0]]],
  ["adda.l *+i8(pc,a0.l),a0", [209, 251, 136, 124], [[20, 4, 0]]],
  ["adda.l (xxx).w,a0", [209, 248, 2, 0], [[18, 4, 0]]],
  ["adda.l (xxx).l,a0", [209, 249, 0, 0, 2, 0], [[22, 5, 0]]],
  ["adda.l #i32,a0", [209, 252, 0, 0, 0, 72], [[16, 3, 0]]],
  ["add.w d0,a0", [208, 192], [[8, 1, 0]]],
  ["add.w a0,a0", [208, 200], [[8, 1, 0]]],
  ["add.w (a0),a0", [208, 208], [[12, 2, 0]]],
  ["add.w (a0)+,a0", [208, 216], [[12, 2, 0]]],
  ["add.w -(a0),a0", [208, 224], [[14, 2, 0]]],
  ["add.w i16(a0),a0", [208, 232, 127, 254], [[16, 3, 0]]],
  ["add.w *+i16(pc),a0", [208, 250, 127, 252], [[16, 3, 0]]],
  ["add.w i8(a0,d0.w),a0", [208, 240, 0, 126], [[18, 3, 0]]],
  ["add.w i8(a0,a0.w),a0", [208, 240, 128, 126], [[18, 3, 0]]],
  ["add.w i8(a0,d0.l),a0", [208, 240, 8, 126], [[18, 3, 0]]],
  ["add.w i8(a0,a0.l),a0", [208, 240, 136, 126], [[18, 3, 0]]],
  ["add.w *+i8(pc,d0.w),a0", [208, 251, 0, 124], [[18, 3, 0]]],
  ["add.w *+i8(pc,a0.w),a0", [208, 251, 128, 124], [[18, 3, 0]]],
  ["add.w *+i8(pc,d0.l),a0", [208, 251, 8, 124], [[18, 3, 0]]],
  ["add.w *+i8(pc,a0.l),a0", [208, 251, 136, 124], [[18, 3, 0]]],
  ["add.w (xxx).w,a0", [208, 248, 2, 0], [[16, 3, 0]]],
  ["add.w (xxx).l,a0", [208, 249, 0, 0, 2, 0], [[20, 4, 0]]],
  ["add.w #i16,a0", [208, 252, 127, 254], [[12, 2, 0]]],
  ["add.l d0,a0", [209, 192], [[8, 1, 0]]],
  ["add.l a0,a0", [209, 200], [[8, 1, 0]]],
  ["add.l (a0),a0", [209, 208], [[14, 3, 0]]],
  ["add.l (a0)+,a0", [209, 216], [[14, 3, 0]]],
  ["add.l -(a0),a0", [209, 224], [[16, 3, 0]]],
  ["add.l i16(a0),a0", [209, 232, 127, 254], [[18, 4, 0]]],
  ["add.l *+i16(pc),a0", [209, 250, 127, 252], [[18, 4, 0]]],
  ["add.l i8(a0,d0.w),a0", [209, 240, 0, 126], [[20, 4, 0]]],
  ["add.l i8(a0,a0.w),a0", [209, 240, 128, 126], [[20, 4, 0]]],
  ["add.l i8(a0,d0.l),a0", [209, 240, 8, 126], [[20, 4, 0]]],
  ["add.l i8(a0,a0.l),a0", [209, 240, 136, 126], [[20, 4, 0]]],
  ["add.l *+i8(pc,d0.w),a0", [209, 251, 0, 124], [[20, 4, 0]]],
  ["add.l *+i8(pc,a0.w),a0", [209, 251, 128, 124], [[20, 4, 0]]],
  ["add.l *+i8(pc,d0.l),a0", [209, 251, 8, 124], [[20, 4, 0]]],
  ["add.l *+i8(pc,a0.l),a0", [209, 251, 136, 124], [[20, 4, 0]]],
  ["add.l (xxx).w,a0", [209, 248, 2, 0], [[18, 4, 0]]],
  ["add.l (xxx).l,a0", [209, 249, 0, 0, 2, 0], [[22, 5, 0]]],
  ["add.l #i32,a0", [209, 252, 0, 0, 0, 72], [[16, 3, 0]]],
  ["addx.b d0,d0", [209, 0], [[4, 1, 0]]],
  ["addx.w d0,d0", [209, 64], [[4, 1, 0]]],
  ["addx.l d0,d0", [209, 128], [[8, 1, 0]]],
  ["addx.b -(a0),-(a0)", [209, 8], [[18, 3, 1]]],
  ["addx.w -(a0),-(a0)", [209, 72], [[18, 3, 1]]],
  ["addx.l -(a0),-(a0)", [209, 136], [[30, 5, 2]]],
  ["subx.b d0,d0", [145, 0], [[4, 1, 0]]],
  ["subx.w d0,d0", [145, 64], [[4, 1, 0]]],
  ["subx.l d0,d0", [145, 128], [[8, 1, 0]]],
  ["subx.b -(a0),-(a0)", [145, 8], [[18, 3, 1]]],
  ["subx.w -(a0),-(a0)", [145, 72], [[18, 3, 1]]],
  ["subx.l -(a0),-(a0)", [145, 136], [[30, 5, 2]]],
  ["cmp.b d0,d0", [176, 0], [[4, 1, 0]]],
  ["cmp.b (a0),d0", [176, 16], [[8, 2, 0]]],
  ["cmp.b (a0)+,d0", [176, 24], [[8, 2, 0]]],
  ["cmp.b -(a0),d0", [176, 32], [[10, 2, 0]]],
  ["cmp.b i16(a0),d0", [176, 40, 127, 254], [[12, 3, 0]]],
  ["cmp.b *+i16(pc),d0", [176, 58, 127, 252], [[12, 3, 0]]],
  ["cmp.b i8(a0,d0.w),d0", [176, 48, 0, 126], [[14, 3, 0]]],
  ["cmp.b i8(a0,a0.w),d0", [176, 48, 128, 126], [[14, 3, 0]]],
  ["cmp.b i8(a0,d0.l),d0", [176, 48, 8, 126], [[14, 3, 0]]],
  ["cmp.b i8(a0,a0.l),d0", [176, 48, 136, 126], [[14, 3, 0]]],
  ["cmp.b *+i8(pc,d0.w),d0", [176, 59, 0, 124], [[14, 3, 0]]],
  ["cmp.b *+i8(pc,a0.w),d0", [176, 59, 128, 124], [[14, 3, 0]]],
  ["cmp.b *+i8(pc,d0.l),d0", [176, 59, 8, 124], [[14, 3, 0]]],
  ["cmp.b *+i8(pc,a0.l),d0", [176, 59, 136, 124], [[14, 3, 0]]],
  ["cmp.b (xxx).w,d0", [176, 56, 2, 0], [[12, 3, 0]]],
  ["cmp.b (xxx).l,d0", [176, 57, 0, 0, 2, 0], [[16, 4, 0]]],
  ["cmp.w d0,d0", [176, 64], [[4, 1, 0]]],
  ["cmp.w a0,d0", [176, 72], [[4, 1, 0]]],
  ["cmp.w (a0),d0", [176, 80], [[8, 2, 0]]],
  ["cmp.w (a0)+,d0", [176, 88], [[8, 2, 0]]],
  ["cmp.w -(a0),d0", [176, 96], [[10, 2, 0]]],
  ["cmp.w i16(a0),d0", [176, 104, 127, 254], [[12, 3, 0]]],
  ["cmp.w *+i16(pc),d0", [176, 122, 127, 252], [[12, 3, 0]]],
  ["cmp.w i8(a0,d0.w),d0", [176, 112, 0, 126], [[14, 3, 0]]],
  ["cmp.w i8(a0,a0.w),d0", [176, 112, 128, 126], [[14, 3, 0]]],
  ["cmp.w i8(a0,d0.l),d0", [176, 112, 8, 126], [[14, 3, 0]]],
  ["cmp.w i8(a0,a0.l),d0", [176, 112, 136, 126], [[14, 3, 0]]],
  ["cmp.w *+i8(pc,d0.w),d0", [176, 123, 0, 124], [[14, 3, 0]]],
  ["cmp.w *+i8(pc,a0.w),d0", [176, 123, 128, 124], [[14, 3, 0]]],
  ["cmp.w *+i8(pc,d0.l),d0", [176, 123, 8, 124], [[14, 3, 0]]],
  ["cmp.w *+i8(pc,a0.l),d0", [176, 123, 136, 124], [[14, 3, 0]]],
  ["cmp.w (xxx).w,d0", [176, 120, 2, 0], [[12, 3, 0]]],
  ["cmp.w (xxx).l,d0", [176, 121, 0, 0, 2, 0], [[16, 4, 0]]],
  ["cmp.l d0,d0", [176, 128], [[6, 1, 0]]],
  ["cmp.l a0,d0", [176, 136], [[6, 1, 0]]],
  ["cmp.l (a0),d0", [176, 144], [[14, 3, 0]]],
  ["cmp.l (a0)+,d0", [176, 152], [[14, 3, 0]]],
  ["cmp.l -(a0),d0", [176, 160], [[16, 3, 0]]],
  ["cmp.l i16(a0),d0", [176, 168, 127, 254], [[18, 4, 0]]],
  ["cmp.l *+i16(pc),d0", [176, 186, 127, 252], [[18, 4, 0]]],
  ["cmp.l i8(a0,d0.w),d0", [176, 176, 0, 126], [[20, 4, 0]]],
  ["cmp.l i8(a0,a0.w),d0", [176, 176, 128, 126], [[20, 4, 0]]],
  ["cmp.l i8(a0,d0.l),d0", [176, 176, 8, 126], [[20, 4, 0]]],
  ["cmp.l i8(a0,a0.l),d0", [176, 176, 136, 126], [[20, 4, 0]]],
  ["cmp.l *+i8(pc,d0.w),d0", [176, 187, 0, 124], [[20, 4, 0]]],
  ["cmp.l *+i8(pc,a0.w),d0", [176, 187, 128, 124], [[20, 4, 0]]],
  ["cmp.l *+i8(pc,d0.l),d0", [176, 187, 8, 124], [[20, 4, 0]]],
  ["cmp.l *+i8(pc,a0.l),d0", [176, 187, 136, 124], [[20, 4, 0]]],
  ["cmp.l (xxx).w,d0", [176, 184, 2, 0], [[18, 4, 0]]],
  ["cmp.l (xxx).l,d0", [176, 185, 0, 0, 2, 0], [[22, 5, 0]]],
  ["cmpa.w d0,a0", [176, 192], [[6, 1, 0]]],
  ["cmpa.w a0,a0", [176, 200], [[6, 1, 0]]],
  ["cmpa.w (a0),a0", [176, 208], [[10, 2, 0]]],
  ["cmpa.w (a0)+,a0", [176, 216], [[10, 2, 0]]],
  ["cmpa.w -(a0),a0", [176, 224], [[12, 2, 0]]],
  ["cmpa.w i16(a0),a0", [176, 232, 127, 254], [[14, 3, 0]]],
  ["cmpa.w *+i16(pc),a0", [176, 250, 127, 252], [[14, 3, 0]]],
  ["cmpa.w i8(a0,d0.w),a0", [176, 240, 0, 126], [[16, 3, 0]]],
  ["cmpa.w i8(a0,a0.w),a0", [176, 240, 128, 126], [[16, 3, 0]]],
  ["cmpa.w i8(a0,d0.l),a0", [176, 240, 8, 126], [[16, 3, 0]]],
  ["cmpa.w i8(a0,a0.l),a0", [176, 240, 136, 126], [[16, 3, 0]]],
  ["cmpa.w *+i8(pc,d0.w),a0", [176, 251, 0, 124], [[16, 3, 0]]],
  ["cmpa.w *+i8(pc,a0.w),a0", [176, 251, 128, 124], [[16, 3, 0]]],
  ["cmpa.w *+i8(pc,d0.l),a0", [176, 251, 8, 124], [[16, 3, 0]]],
  ["cmpa.w *+i8(pc,a0.l),a0", [176, 251, 136, 124], [[16, 3, 0]]],
  ["cmpa.w (xxx).w,a0", [176, 248, 2, 0], [[14, 3, 0]]],
  ["cmpa.w (xxx).l,a0", [176, 249, 0, 0, 2, 0], [[18, 4, 0]]],
  ["cmpa.w #i16,a0", [176, 252, 127, 254], [[10, 2, 0]]],
  ["cmpa.l d0,a0", [177, 192], [[6, 1, 0]]],
  ["cmpa.l a0,a0", [177, 200], [[6, 1, 0]]],
  ["cmpa.l (a0),a0", [177, 208], [[14, 3, 0]]],
  ["cmpa.l (a0)+,a0", [177, 216], [[14, 3, 0]]],
  ["cmpa.l -(a0),a0", [177, 224], [[16, 3, 0]]],
  ["cmpa.l i16(a0),a0", [177, 232, 127, 254], [[18, 4, 0]]],
  ["cmpa.l *+i16(pc),a0", [177, 250, 127, 252], [[18, 4, 0]]],
  ["cmpa.l i8(a0,d0.w),a0", [177, 240, 0, 126], [[20, 4, 0]]],
  ["cmpa.l i8(a0,a0.w),a0", [177, 240, 128, 126], [[20, 4, 0]]],
  ["cmpa.l i8(a0,d0.l),a0", [177, 240, 8, 126], [[20, 4, 0]]],
  ["cmpa.l i8(a0,a0.l),a0", [177, 240, 136, 126], [[20, 4, 0]]],
  ["cmpa.l *+i8(pc,d0.w),a0", [177, 251, 0, 124], [[20, 4, 0]]],
  ["cmpa.l *+i8(pc,a0.w),a0", [177, 251, 128, 124], [[20, 4, 0]]],
  ["cmpa.l *+i8(pc,d0.l),a0", [177, 251, 8, 124], [[20, 4, 0]]],
  ["cmpa.l *+i8(pc,a0.l),a0", [177, 251, 136, 124], [[20, 4, 0]]],
  ["cmpa.l (xxx).w,a0", [177, 248, 2, 0], [[18, 4, 0]]],
  ["cmpa.l (xxx).l,a0", [177, 249, 0, 0, 2, 0], [[22, 5, 0]]],
  ["cmpa.l #i32,a0", [177, 252, 0, 0, 0, 72], [[14, 3, 0]]],
  ["cmp.w a0,a0", [176, 200], [[6, 1, 0]]],
  ["cmp.w (a0),a0", [176, 208], [[10, 2, 0]]],
  ["cmp.w (a0)+,a0", [176, 216], [[10, 2, 0]]],
  ["cmp.w -(a0),a0", [176, 224], [[12, 2, 0]]],
  ["cmp.w i16(a0),a0", [176, 232, 127, 254], [[14, 3, 0]]],
  ["cmp.w *+i16(pc),a0", [176, 250, 127, 252], [[14, 3, 0]]],
  ["cmp.w i8(a0,d0.w),a0", [176, 240, 0, 126], [[16, 3, 0]]],
  ["cmp.w i8(a0,a0.w),a0", [176, 240, 128, 126], [[16, 3, 0]]],
  ["cmp.w i8(a0,d0.l),a0", [176, 240, 8, 126], [[16, 3, 0]]],
  ["cmp.w i8(a0,a0.l),a0", [176, 240, 136, 126], [[16, 3, 0]]],
  ["cmp.w *+i8(pc,d0.w),a0", [176, 251, 0, 124], [[16, 3, 0]]],
  ["cmp.w *+i8(pc,a0.w),a0", [176, 251, 128, 124], [[16, 3, 0]]],
  ["cmp.w *+i8(pc,d0.l),a0", [176, 251, 8, 124], [[16, 3, 0]]],
  ["cmp.w *+i8(pc,a0.l),a0", [176, 251, 136, 124], [[16, 3, 0]]],
  ["cmp.w (xxx).w,a0", [176, 248, 2, 0], [[14, 3, 0]]],
  ["cmp.w (xxx).l,a0", [176, 249, 0, 0, 2, 0], [[18, 4, 0]]],
  ["cmp.w #i16,a0", [176, 252, 127, 254], [[10, 2, 0]]],
  ["cmp.l d0,a0", [177, 192], [[6, 1, 0]]],
  ["cmp.l a0,a0", [177, 200], [[6, 1, 0]]],
  ["cmp.l (a0),a0", [177, 208], [[14, 3, 0]]],
  ["cmp.l (a0)+,a0", [177, 216], [[14, 3, 0]]],
  ["cmp.l -(a0),a0", [177, 224], [[16, 3, 0]]],
  ["cmp.l i16(a0),a0", [177, 232, 127, 254], [[18, 4, 0]]],
  ["cmp.l *+i16(pc),a0", [177, 250, 127, 252], [[18, 4, 0]]],
  ["cmp.l i8(a0,d0.w),a0", [177, 240, 0, 126], [[20, 4, 0]]],
  ["cmp.l i8(a0,a0.w),a0", [177, 240, 128, 126], [[20, 4, 0]]],
  ["cmp.l i8(a0,d0.l),a0", [177, 240, 8, 126], [[20, 4, 0]]],
  ["cmp.l i8(a0,a0.l),a0", [177, 240, 136, 126], [[20, 4, 0]]],
  ["cmp.l *+i8(pc,d0.w),a0", [177, 251, 0, 124], [[20, 4, 0]]],
  ["cmp.l *+i8(pc,a0.w),a0", [177, 251, 128, 124], [[20, 4, 0]]],
  ["cmp.l *+i8(pc,d0.l),a0", [177, 251, 8, 124], [[20, 4, 0]]],
  ["cmp.l *+i8(pc,a0.l),a0", [177, 251, 136, 124], [[20, 4, 0]]],
  ["cmp.l (xxx).w,a0", [177, 248, 2, 0], [[18, 4, 0]]],
  ["cmp.l (xxx).l,a0", [177, 249, 0, 0, 2, 0], [[22, 5, 0]]],
  ["cmp.l #i32,a0", [177, 252, 0, 0, 0, 72], [[14, 3, 0]]],
  ["cmpm.b (a0)+,(a0)+", [177, 8], [[12, 3, 0]]],
  ["cmpm.w (a0)+,(a0)+", [177, 72], [[12, 3, 0]]],
  ["cmpm.l (a0)+,(a0)+", [177, 136], [[20, 5, 0]]],
  ["eor.b d0,d0", [177, 0], [[4, 1, 0]]],
  ["eor.b d0,(a0)", [177, 16], [[12, 2, 1]]],
  ["eor.b d0,(a0)+", [177, 24], [[12, 2, 1]]],
  ["eor.b d0,-(a0)", [177, 32], [[14, 2, 1]]],
  ["eor.b d0,i16(a0)", [177, 40, 127, 254], [[16, 3, 1]]],
  ["eor.b d0,i8(a0,d0.w)", [177, 48, 0, 126], [[18, 3, 1]]],
  ["eor.b d0,i8(a0,a0.w)", [177, 48, 128, 126], [[18, 3, 1]]],
  ["eor.b d0,i8(a0,d0.l)", [177, 48, 8, 126], [[18, 3, 1]]],
  ["eor.b d0,i8(a0,a0.l)", [177, 48, 136, 126], [[18, 3, 1]]],
  ["eor.b d0,(xxx).w", [177, 56, 2, 0], [[16, 3, 1]]],
  ["eor.b d0,(xxx).l", [177, 57, 0, 0, 2, 0], [[20, 4, 1]]],
  ["eor.w d0,d0", [177, 64], [[4, 1, 0]]],
  ["eor.w d0,(a0)", [177, 80], [[12, 2, 1]]],
  ["eor.w d0,(a0)+", [177, 88], [[12, 2, 1]]],
  ["eor.w d0,-(a0)", [177, 96], [[14, 2, 1]]],
  ["eor.w d0,i16(a0)", [177, 104, 127, 254], [[16, 3, 1]]],
  ["eor.w d0,i8(a0,d0.w)", [177, 112, 0, 126], [[18, 3, 1]]],
  ["eor.w d0,i8(a0,a0.w)", [177, 112, 128, 126], [[18, 3, 1]]],
  ["eor.w d0,i8(a0,d0.l)", [177, 112, 8, 126], [[18, 3, 1]]],
  ["eor.w d0,i8(a0,a0.l)", [177, 112, 136, 126], [[18, 3, 1]]],
  ["eor.w d0,(xxx).w", [177, 120, 2, 0], [[16, 3, 1]]],
  ["eor.w d0,(xxx).l", [177, 121, 0, 0, 2, 0], [[20, 4, 1]]],
  ["eor.l d0,d0", [177, 128], [[8, 1, 0]]],
  ["eor.l d0,(a0)", [177, 144], [[20, 3, 2]]],
  ["eor.l d0,(a0)+", [177, 152], [[20, 3, 2]]],
  ["eor.l d0,-(a0)", [177, 160], [[22, 3, 2]]],
  ["eor.l d0,i16(a0)", [177, 168, 127, 254], [[24, 4, 2]]],
  ["eor.l d0,i8(a0,d0.w)", [177, 176, 0, 126], [[26, 4, 2]]],
  ["eor.l d0,i8(a0,a0.w)", [177, 176, 128, 126], [[26, 4, 2]]],
  ["eor.l d0,i8(a0,d0.l)", [177, 176, 8, 126], [[26, 4, 2]]],
  ["eor.l d0,i8(a0,a0.l)", [177, 176, 136, 126], [[26, 4, 2]]],
  ["eor.l d0,(xxx).w", [177, 184, 2, 0], [[24, 4, 2]]],
  ["eor.l d0,(xxx).l", [177, 185, 0, 0, 2, 0], [[28, 5, 2]]],
  ["asl.b d0,d0", [225, 32], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["asl.w d0,d0", [225, 96], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["asl.l d0,d0", [225, 160], [[8+2*0, 1, 0], [8+2*63, 1, 0]]],
  ["asl.b #i3,d0", [239, 0], [[6+2*i3, 1, 0]]],
  ["asl.w #i3,d0", [239, 64], [[6+2*i3, 1, 0]]],
  ["asl.l #i3,d0", [239, 128], [[8+2*i3, 1, 0]]],
  ["asl.w (a0)", [225, 208], [[12, 2, 1]]],
  ["asl.w (a0)+", [225, 216], [[12, 2, 1]]],
  ["asl.w -(a0)", [225, 224], [[14, 2, 1]]],
  ["asl.w i16(a0)", [225, 232, 127, 254], [[16, 3, 1]]],
  ["asl.w i8(a0,d0.w)", [225, 240, 0, 126], [[18, 3, 1]]],
  ["asl.w i8(a0,a0.w)", [225, 240, 128, 126], [[18, 3, 1]]],
  ["asl.w i8(a0,d0.l)", [225, 240, 8, 126], [[18, 3, 1]]],
  ["asl.w i8(a0,a0.l)", [225, 240, 136, 126], [[18, 3, 1]]],
  ["asl.w (xxx).w", [225, 248, 2, 0], [[16, 3, 1]]],
  ["asl.w (xxx).l", [225, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["asr.b d0,d0", [224, 32], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["asr.w d0,d0", [224, 96], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["asr.l d0,d0", [224, 160], [[8+2*0, 1, 0], [8+2*63, 1, 0]]],
  ["asr.b #i3,d0", [238, 0], [[6+2*i3, 1, 0]]],
  ["asr.w #i3,d0", [238, 64], [[6+2*i3, 1, 0]]],
  ["asr.l #i3,d0", [238, 128], [[8+2*i3, 1, 0]]],
  ["asr.w (a0)", [224, 208], [[12, 2, 1]]],
  ["asr.w (a0)+", [224, 216], [[12, 2, 1]]],
  ["asr.w -(a0)", [224, 224], [[14, 2, 1]]],
  ["asr.w i16(a0)", [224, 232, 127, 254], [[16, 3, 1]]],
  ["asr.w i8(a0,d0.w)", [224, 240, 0, 126], [[18, 3, 1]]],
  ["asr.w i8(a0,a0.w)", [224, 240, 128, 126], [[18, 3, 1]]],
  ["asr.w i8(a0,d0.l)", [224, 240, 8, 126], [[18, 3, 1]]],
  ["asr.w i8(a0,a0.l)", [224, 240, 136, 126], [[18, 3, 1]]],
  ["asr.w (xxx).w", [224, 248, 2, 0], [[16, 3, 1]]],
  ["asr.w (xxx).l", [224, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["lsl.b d0,d0", [225, 40], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["lsl.w d0,d0", [225, 104], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["lsl.l d0,d0", [225, 168], [[8+2*0, 1, 0], [8+2*63, 1, 0]]],
  ["lsl.b #i3,d0", [239, 8], [[6+2*i3, 1, 0]]],
  ["lsl.w #i3,d0", [239, 72], [[6+2*i3, 1, 0]]],
  ["lsl.l #i3,d0", [239, 136], [[8+2*i3, 1, 0]]],
  ["lsl.w (a0)", [227, 208], [[12, 2, 1]]],
  ["lsl.w (a0)+", [227, 216], [[12, 2, 1]]],
  ["lsl.w -(a0)", [227, 224], [[14, 2, 1]]],
  ["lsl.w i16(a0)", [227, 232, 127, 254], [[16, 3, 1]]],
  ["lsl.w i8(a0,d0.w)", [227, 240, 0, 126], [[18, 3, 1]]],
  ["lsl.w i8(a0,a0.w)", [227, 240, 128, 126], [[18, 3, 1]]],
  ["lsl.w i8(a0,d0.l)", [227, 240, 8, 126], [[18, 3, 1]]],
  ["lsl.w i8(a0,a0.l)", [227, 240, 136, 126], [[18, 3, 1]]],
  ["lsl.w (xxx).w", [227, 248, 2, 0], [[16, 3, 1]]],
  ["lsl.w (xxx).l", [227, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["lsr.b d0,d0", [224, 40], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["lsr.w d0,d0", [224, 104], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["lsr.l d0,d0", [224, 168], [[8+2*0, 1, 0], [8+2*63, 1, 0]]],
  ["lsr.b #i3,d0", [238, 8], [[6+2*i3, 1, 0]]],
  ["lsr.w #i3,d0", [238, 72], [[6+2*i3, 1, 0]]],
  ["lsr.l #i3,d0", [238, 136], [[8+2*i3, 1, 0]]],
  ["lsr.w (a0)", [226, 208], [[12, 2, 1]]],
  ["lsr.w (a0)+", [226, 216], [[12, 2, 1]]],
  ["lsr.w -(a0)", [226, 224], [[14, 2, 1]]],
  ["lsr.w i16(a0)", [226, 232, 127, 254], [[16, 3, 1]]],
  ["lsr.w i8(a0,d0.w)", [226, 240, 0, 126], [[18, 3, 1]]],
  ["lsr.w i8(a0,a0.w)", [226, 240, 128, 126], [[18, 3, 1]]],
  ["lsr.w i8(a0,d0.l)", [226, 240, 8, 126], [[18, 3, 1]]],
  ["lsr.w i8(a0,a0.l)", [226, 240, 136, 126], [[18, 3, 1]]],
  ["lsr.w (xxx).w", [226, 248, 2, 0], [[16, 3, 1]]],
  ["lsr.w (xxx).l", [226, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["rol.b d0,d0", [225, 56], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["rol.w d0,d0", [225, 120], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["rol.l d0,d0", [225, 184], [[8+2*0, 1, 0], [8+2*63, 1, 0]]],
  ["rol.b #i3,d0", [239, 24], [[6+2*i3, 1, 0]]],
  ["rol.w #i3,d0", [239, 88], [[6+2*i3, 1, 0]]],
  ["rol.l #i3,d0", [239, 152], [[8+2*i3, 1, 0]]],
  ["rol.w (a0)", [231, 208], [[12, 2, 1]]],
  ["rol.w (a0)+", [231, 216], [[12, 2, 1]]],
  ["rol.w -(a0)", [231, 224], [[14, 2, 1]]],
  ["rol.w i16(a0)", [231, 232, 127, 254], [[16, 3, 1]]],
  ["rol.w i8(a0,d0.w)", [231, 240, 0, 126], [[18, 3, 1]]],
  ["rol.w i8(a0,a0.w)", [231, 240, 128, 126], [[18, 3, 1]]],
  ["rol.w i8(a0,d0.l)", [231, 240, 8, 126], [[18, 3, 1]]],
  ["rol.w i8(a0,a0.l)", [231, 240, 136, 126], [[18, 3, 1]]],
  ["rol.w (xxx).w", [231, 248, 2, 0], [[16, 3, 1]]],
  ["rol.w (xxx).l", [231, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["ror.b d0,d0", [224, 56], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["ror.w d0,d0", [224, 120], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["ror.l d0,d0", [224, 184], [[8+2*0, 1, 0], [8+2*63, 1, 0]]],
  ["ror.b #i3,d0", [238, 24], [[6+2*i3, 1, 0]]],
  ["ror.w #i3,d0", [238, 88], [[6+2*i3, 1, 0]]],
  ["ror.l #i3,d0", [238, 152], [[8+2*i3, 1, 0]]],
  ["ror.w (a0)", [230, 208], [[12, 2, 1]]],
  ["ror.w (a0)+", [230, 216], [[12, 2, 1]]],
  ["ror.w -(a0)", [230, 224], [[14, 2, 1]]],
  ["ror.w i16(a0)", [230, 232, 127, 254], [[16, 3, 1]]],
  ["ror.w i8(a0,d0.w)", [230, 240, 0, 126], [[18, 3, 1]]],
  ["ror.w i8(a0,a0.w)", [230, 240, 128, 126], [[18, 3, 1]]],
  ["ror.w i8(a0,d0.l)", [230, 240, 8, 126], [[18, 3, 1]]],
  ["ror.w i8(a0,a0.l)", [230, 240, 136, 126], [[18, 3, 1]]],
  ["ror.w (xxx).w", [230, 248, 2, 0], [[16, 3, 1]]],
  ["ror.w (xxx).l", [230, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["roxl.b d0,d0", [225, 48], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["roxl.w d0,d0", [225, 112], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["roxl.l d0,d0", [225, 176], [[8+2*0, 1, 0], [8+2*63, 1, 0]]],
  ["roxl.b #i3,d0", [239, 16], [[6+2*i3, 1, 0]]],
  ["roxl.w #i3,d0", [239, 80], [[6+2*i3, 1, 0]]],
  ["roxl.l #i3,d0", [239, 144], [[8+2*i3, 1, 0]]],
  ["roxl.w (a0)", [229, 208], [[12, 2, 1]]],
  ["roxl.w (a0)+", [229, 216], [[12, 2, 1]]],
  ["roxl.w -(a0)", [229, 224], [[14, 2, 1]]],
  ["roxl.w i16(a0)", [229, 232, 127, 254], [[16, 3, 1]]],
  ["roxl.w i8(a0,d0.w)", [229, 240, 0, 126], [[18, 3, 1]]],
  ["roxl.w i8(a0,a0.w)", [229, 240, 128, 126], [[18, 3, 1]]],
  ["roxl.w i8(a0,d0.l)", [229, 240, 8, 126], [[18, 3, 1]]],
  ["roxl.w i8(a0,a0.l)", [229, 240, 136, 126], [[18, 3, 1]]],
  ["roxl.w (xxx).w", [229, 248, 2, 0], [[16, 3, 1]]],
  ["roxl.w (xxx).l", [229, 249, 0, 0, 2, 0], [[20, 4, 1]]],
  ["roxr.b d0,d0", [224, 48], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["roxr.w d0,d0", [224, 112], [[6+2*0, 1, 0], [6+2*63, 1, 0]]],
  ["roxr.l d0,d0", [224, 176], [[8+2*0, 1, 0], [8+2*63, 1, 0]]],
  ["roxr.b #i3,d0", [238, 16], [[6+2*i3, 1, 0]]],
  ["roxr.w #i3,d0", [238, 80], [[6+2*i3, 1, 0]]],
  ["roxr.l #i3,d0", [238, 144], [[8+2*i3, 1, 0]]],
  ["roxr.w (a0)", [228, 208], [[12, 2, 1]]],
  ["roxr.w (a0)+", [228, 216], [[12, 2, 1]]],
  ["roxr.w -(a0)", [228, 224], [[14, 2, 1]]],
  ["roxr.w i16(a0)", [228, 232, 127, 254], [[16, 3, 1]]],
  ["roxr.w i8(a0,d0.w)", [228, 240, 0, 126], [[18, 3, 1]]],
  ["roxr.w i8(a0,a0.w)", [228, 240, 128, 126], [[18, 3, 1]]],
  ["roxr.w i8(a0,d0.l)", [228, 240, 8, 126], [[18, 3, 1]]],
  ["roxr.w i8(a0,a0.l)", [228, 240, 136, 126], [[18, 3, 1]]],
  ["roxr.w (xxx).w", [228, 248, 2, 0], [[16, 3, 1]]],
  ["roxr.w (xxx).l", [228, 249, 0, 0, 2, 0], [[20, 4, 1]]]
];

suite("68k-cycles", function () {
	timings.forEach(([src, bytes, expected]) => {
		if (!expected[0].some(v => typeof v === "string")) {
			test(src, function () {
				const decoded = decodeInstruction(Uint8Array.from(bytes));
				const result = instructionTimings(decoded.instruction);

				// Generate some useful text for assertion error showing calculation and decoded instruction
				let resultText = result.values.map(formatTiming).join(", ");
				resultText += "\ncalculation: " + result.calculation.base.map(formatTiming).join(",");
				if (result.calculation.ea) resultText += " + " + formatTiming(result.calculation.ea);
				if (result.calculation.n) resultText += " n=" + JSON.stringify(result.calculation.n);
				if (result.calculation.multiplier) resultText += " m=" + formatTiming(result.calculation.multiplier);
				resultText += "\ndecoded: " + JSON.stringify(decoded);

				for (const e of expected) {
					const errorText = `${formatTiming(e as Timing)} not found in results: ${resultText}`;
					assert(result.values.map(v => v.join(",")).includes(e.join(",")), errorText);
				}
			});
		}
	});

	test("popCount", () => {
		assert.equal(popCount(0), 0);
		assert.equal(popCount(0b1101), 3);
		assert.equal(popCount(0x5555), 8);
	});
});

suite("68k-jump", function () {
	test("jsr absolute long", function () {
		const insn = new Uint16Array([0x4eb9, 0x00f0, 0xff60]); // jsr $f0ff60
		const jump = GetJump(0xdb4, insn);
		assert.deepEqual(jump, { type: JumpType.Jsr, target: 0xf0ff60 });
	});
});

suite("68k-dis", function () {
	test("ext", function () {
		const insn = new Uint8Array([0x48, 0xc4]); // ext.l d4
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "ext.l d4");
	});
	test("cmp", function () {
		const insn = new Uint8Array([0x0c, 0x42, 0x00, 0x10]); // cmpi.w #16,d2
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "cmpi.w #16,d2");
	});
	test("neg", function () {
		const insn = new Uint8Array([0x44, 0x03]); // neg.b d3
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "neg.b d3");
	});
	test("link", function () {
		const insn = new Uint8Array([0x4e, 0x55, 0xff, 0xc0]); // link.w a5,#-64
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "link.w a5,#-64");
	});
	test("eor", function () {
		const insn = new Uint8Array([0xb7, 0x40]); // eor.w d3,d0
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "eor.w d3,d0");
	});
	test("mulu", function () {
		const insn = new Uint8Array([0xc0, 0xef, 0x00, 0x0a]); // mulu.w 10(sp),d0
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "mulu.w 10(sp),d0");
	});
	test("jsr", function () {
		const insn = new Uint8Array([0x4e, 0xb9, 0x00, 0xf0, 0xff, 0x60]); // jsr $f0ff60
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "jsr $f0ff60");
	});
	test("movem", function () {
		const insn = new Uint8Array([0x48, 0xe7, 0x30, 0x20]); // movem.l d2-d3/a2,-(sp)
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "movem.l d2-d3/a2,-(sp)");
	});
	test("bmi.w", function () {
		const insn = new Uint8Array([0x6b, 0x00, 0x03, 0xfa]);
		const dis = print_insn_m68k(insn, 0x108);
		assert.strictEqual(dis.text, "bmi.w $504");
	});
	test("bne.s", function () {
		const insn = new Uint8Array([0x66, 0xf8]);
		const dis = print_insn_m68k(insn, 0x42dfe);
		assert.strictEqual(dis.text, "bne.s $42df8");
	});
	test("btst", function () {
		const insn = new Uint8Array([0x01, 0x3a, 0x01, 0x9a]);
		const dis = print_insn_m68k(insn, 0x28de);
		assert.strictEqual(dis.text, "btst d0,$2a7a(pc)");
	});
	test("sf", function () {
		const insn = new Uint8Array([0x51, 0xd0]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "sf (a0)");
	});
	test("move.w", function () {
		const insn = new Uint8Array([0x33, 0xfc, 0x00, 0x20, 0x00, 0xdf, 0xf0, 0x9c]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "move.w #32,$dff09c");
	});
	test("move.l", function () {
		const insn = new Uint8Array([0x2d, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "move.l #16777216,64(a6)");
	});
	test("moveq", function () {
		const insn = new Uint8Array([0x72, 0x01]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "moveq #1,d1");
	});
	test("divu.l", function () {
		const insn = new Uint8Array([0x4c, 0x40, 0x24, 0x01]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "divu.l d0,d1,d2");
	});
	test("divul.l", function () {
		const insn = new Uint8Array([0x4c, 0x40, 0x20, 0x01]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "divul.l d0,d1,d2");
	});
});

suite("68k-fpu", function () {
	test("fmove.l d1,fpcr", function () {
		const insn = new Uint8Array([0xF2, 0x01, 0x90, 0x00]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "fmove.l d1,fpcr");
	});
	test("fmove.l fpcr,d1", function () {
		const insn = new Uint8Array([0xF2, 0x01, 0xb0, 0x00]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "fmove.l fpcr,d1");
	});
	test("frestore (sp)+", function () {
		const insn = new Uint8Array([0xF3, 0x5F]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "frestore (sp)+");
	});
	test("fintrz.s d0,fp0", function () {
		const insn = new Uint8Array([0xF2, 0x00, 0x44, 0x03]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "fintrz.s d0,fp0");
	});
	test("fsgldiv.s d1,fp0", function () {
		const insn = new Uint8Array([0xF2, 0x01, 0x44, 0x24]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "fsgldiv.s d1,fp0");
	});
});

suite("68k-mmu", function () {
	test("ptrapbc.l #65537", function () {
		const insn = new Uint8Array([0xF0, 0x7b, 0x00, 0x01, 0x00, 0x01]);
		const dis = print_insn_m68k(insn, 0);
		assert.strictEqual(dis.text, "ptrapbc.l #65537");
	});
});
